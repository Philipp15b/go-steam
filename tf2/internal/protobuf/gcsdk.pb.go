// Code generated by protoc-gen-go.
// source: gcsdk_gcmessages.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import math "math"

// discarding unused import steammessages "steammessages.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PartnerAccountType int32

const (
	PartnerAccountType_PARTNER_NONE          PartnerAccountType = 0
	PartnerAccountType_PARTNER_PERFECT_WORLD PartnerAccountType = 1
	PartnerAccountType_PARTNER_NEXON         PartnerAccountType = 2
)

var PartnerAccountType_name = map[int32]string{
	0: "PARTNER_NONE",
	1: "PARTNER_PERFECT_WORLD",
	2: "PARTNER_NEXON",
}
var PartnerAccountType_value = map[string]int32{
	"PARTNER_NONE":          0,
	"PARTNER_PERFECT_WORLD": 1,
	"PARTNER_NEXON":         2,
}

func (x PartnerAccountType) Enum() *PartnerAccountType {
	p := new(PartnerAccountType)
	*p = x
	return p
}
func (x PartnerAccountType) String() string {
	return proto.EnumName(PartnerAccountType_name, int32(x))
}
func (x *PartnerAccountType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PartnerAccountType_value, data, "PartnerAccountType")
	if err != nil {
		return err
	}
	*x = PartnerAccountType(value)
	return nil
}

type GCConnectionStatus int32

const (
	GCConnectionStatus_GCConnectionStatus_HAVE_SESSION              GCConnectionStatus = 0
	GCConnectionStatus_GCConnectionStatus_GC_GOING_DOWN             GCConnectionStatus = 1
	GCConnectionStatus_GCConnectionStatus_NO_SESSION                GCConnectionStatus = 2
	GCConnectionStatus_GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE GCConnectionStatus = 3
	GCConnectionStatus_GCConnectionStatus_NO_STEAM                  GCConnectionStatus = 4
	GCConnectionStatus_GCConnectionStatus_SUSPENDED                 GCConnectionStatus = 5
)

var GCConnectionStatus_name = map[int32]string{
	0: "GCConnectionStatus_HAVE_SESSION",
	1: "GCConnectionStatus_GC_GOING_DOWN",
	2: "GCConnectionStatus_NO_SESSION",
	3: "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE",
	4: "GCConnectionStatus_NO_STEAM",
	5: "GCConnectionStatus_SUSPENDED",
}
var GCConnectionStatus_value = map[string]int32{
	"GCConnectionStatus_HAVE_SESSION":              0,
	"GCConnectionStatus_GC_GOING_DOWN":             1,
	"GCConnectionStatus_NO_SESSION":                2,
	"GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE": 3,
	"GCConnectionStatus_NO_STEAM":                  4,
	"GCConnectionStatus_SUSPENDED":                 5,
}

func (x GCConnectionStatus) Enum() *GCConnectionStatus {
	p := new(GCConnectionStatus)
	*p = x
	return p
}
func (x GCConnectionStatus) String() string {
	return proto.EnumName(GCConnectionStatus_name, int32(x))
}
func (x *GCConnectionStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GCConnectionStatus_value, data, "GCConnectionStatus")
	if err != nil {
		return err
	}
	*x = GCConnectionStatus(value)
	return nil
}

type CMsgSOIDOwner struct {
	Type             *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id               *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSOIDOwner) Reset()         { *m = CMsgSOIDOwner{} }
func (m *CMsgSOIDOwner) String() string { return proto.CompactTextString(m) }
func (*CMsgSOIDOwner) ProtoMessage()    {}

func (m *CMsgSOIDOwner) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgSOIDOwner) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type CMsgSOSingleObject struct {
	Owner            *uint64        `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	TypeId           *int32         `protobuf:"varint,2,opt,name=type_id" json:"type_id,omitempty"`
	ObjectData       []byte         `protobuf:"bytes,3,opt,name=object_data" json:"object_data,omitempty"`
	Version          *uint64        `protobuf:"fixed64,4,opt,name=version" json:"version,omitempty"`
	OwnerSoid        *CMsgSOIDOwner `protobuf:"bytes,5,opt,name=owner_soid" json:"owner_soid,omitempty"`
	ServiceId        *uint32        `protobuf:"varint,6,opt,name=service_id" json:"service_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgSOSingleObject) Reset()         { *m = CMsgSOSingleObject{} }
func (m *CMsgSOSingleObject) String() string { return proto.CompactTextString(m) }
func (*CMsgSOSingleObject) ProtoMessage()    {}

func (m *CMsgSOSingleObject) GetOwner() uint64 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *CMsgSOSingleObject) GetTypeId() int32 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *CMsgSOSingleObject) GetObjectData() []byte {
	if m != nil {
		return m.ObjectData
	}
	return nil
}

func (m *CMsgSOSingleObject) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgSOSingleObject) GetOwnerSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.OwnerSoid
	}
	return nil
}

func (m *CMsgSOSingleObject) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

type CMsgSOMultipleObjects struct {
	Owner            *uint64                               `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Objects          []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version          *uint64                               `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid        *CMsgSOIDOwner                        `protobuf:"bytes,6,opt,name=owner_soid" json:"owner_soid,omitempty"`
	ServiceId        *uint32                               `protobuf:"varint,7,opt,name=service_id" json:"service_id,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgSOMultipleObjects) Reset()         { *m = CMsgSOMultipleObjects{} }
func (m *CMsgSOMultipleObjects) String() string { return proto.CompactTextString(m) }
func (*CMsgSOMultipleObjects) ProtoMessage()    {}

func (m *CMsgSOMultipleObjects) GetOwner() uint64 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *CMsgSOMultipleObjects) GetObjects() []*CMsgSOMultipleObjects_SingleObject {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *CMsgSOMultipleObjects) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgSOMultipleObjects) GetOwnerSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.OwnerSoid
	}
	return nil
}

func (m *CMsgSOMultipleObjects) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

type CMsgSOMultipleObjects_SingleObject struct {
	TypeId           *int32 `protobuf:"varint,1,opt,name=type_id" json:"type_id,omitempty"`
	ObjectData       []byte `protobuf:"bytes,2,opt,name=object_data" json:"object_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgSOMultipleObjects_SingleObject) Reset()         { *m = CMsgSOMultipleObjects_SingleObject{} }
func (m *CMsgSOMultipleObjects_SingleObject) String() string { return proto.CompactTextString(m) }
func (*CMsgSOMultipleObjects_SingleObject) ProtoMessage()    {}

func (m *CMsgSOMultipleObjects_SingleObject) GetTypeId() int32 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *CMsgSOMultipleObjects_SingleObject) GetObjectData() []byte {
	if m != nil {
		return m.ObjectData
	}
	return nil
}

type CMsgSOCacheSubscribed struct {
	Owner            *uint64                                 `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Objects          []*CMsgSOCacheSubscribed_SubscribedType `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version          *uint64                                 `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid        *CMsgSOIDOwner                          `protobuf:"bytes,4,opt,name=owner_soid" json:"owner_soid,omitempty"`
	ServiceId        *uint32                                 `protobuf:"varint,5,opt,name=service_id" json:"service_id,omitempty"`
	ServiceList      []uint32                                `protobuf:"varint,6,rep,name=service_list" json:"service_list,omitempty"`
	SyncVersion      *uint64                                 `protobuf:"fixed64,7,opt,name=sync_version" json:"sync_version,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgSOCacheSubscribed) Reset()         { *m = CMsgSOCacheSubscribed{} }
func (m *CMsgSOCacheSubscribed) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheSubscribed) ProtoMessage()    {}

func (m *CMsgSOCacheSubscribed) GetOwner() uint64 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *CMsgSOCacheSubscribed) GetObjects() []*CMsgSOCacheSubscribed_SubscribedType {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *CMsgSOCacheSubscribed) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgSOCacheSubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.OwnerSoid
	}
	return nil
}

func (m *CMsgSOCacheSubscribed) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *CMsgSOCacheSubscribed) GetServiceList() []uint32 {
	if m != nil {
		return m.ServiceList
	}
	return nil
}

func (m *CMsgSOCacheSubscribed) GetSyncVersion() uint64 {
	if m != nil && m.SyncVersion != nil {
		return *m.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscribed_SubscribedType struct {
	TypeId           *int32   `protobuf:"varint,1,opt,name=type_id" json:"type_id,omitempty"`
	ObjectData       [][]byte `protobuf:"bytes,2,rep,name=object_data" json:"object_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSOCacheSubscribed_SubscribedType) Reset()         { *m = CMsgSOCacheSubscribed_SubscribedType{} }
func (m *CMsgSOCacheSubscribed_SubscribedType) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheSubscribed_SubscribedType) ProtoMessage()    {}

func (m *CMsgSOCacheSubscribed_SubscribedType) GetTypeId() int32 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *CMsgSOCacheSubscribed_SubscribedType) GetObjectData() [][]byte {
	if m != nil {
		return m.ObjectData
	}
	return nil
}

type CMsgSOCacheSubscribedUpToDate struct {
	Version          *uint64        `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
	OwnerSoid        *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid" json:"owner_soid,omitempty"`
	ServiceId        *uint32        `protobuf:"varint,3,opt,name=service_id" json:"service_id,omitempty"`
	ServiceList      []uint32       `protobuf:"varint,4,rep,name=service_list" json:"service_list,omitempty"`
	SyncVersion      *uint64        `protobuf:"fixed64,5,opt,name=sync_version" json:"sync_version,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgSOCacheSubscribedUpToDate) Reset()         { *m = CMsgSOCacheSubscribedUpToDate{} }
func (m *CMsgSOCacheSubscribedUpToDate) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheSubscribedUpToDate) ProtoMessage()    {}

func (m *CMsgSOCacheSubscribedUpToDate) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgSOCacheSubscribedUpToDate) GetOwnerSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.OwnerSoid
	}
	return nil
}

func (m *CMsgSOCacheSubscribedUpToDate) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *CMsgSOCacheSubscribedUpToDate) GetServiceList() []uint32 {
	if m != nil {
		return m.ServiceList
	}
	return nil
}

func (m *CMsgSOCacheSubscribedUpToDate) GetSyncVersion() uint64 {
	if m != nil && m.SyncVersion != nil {
		return *m.SyncVersion
	}
	return 0
}

type CMsgSOCacheUnsubscribed struct {
	Owner            *uint64 `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSOCacheUnsubscribed) Reset()         { *m = CMsgSOCacheUnsubscribed{} }
func (m *CMsgSOCacheUnsubscribed) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheUnsubscribed) ProtoMessage()    {}

func (m *CMsgSOCacheUnsubscribed) GetOwner() uint64 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

type CMsgSOCacheSubscriptionCheck struct {
	Owner            *uint64        `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Version          *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	OwnerSoid        *CMsgSOIDOwner `protobuf:"bytes,3,opt,name=owner_soid" json:"owner_soid,omitempty"`
	ServiceId        *uint32        `protobuf:"varint,4,opt,name=service_id" json:"service_id,omitempty"`
	ServiceList      []uint32       `protobuf:"varint,5,rep,name=service_list" json:"service_list,omitempty"`
	SyncVersion      *uint64        `protobuf:"fixed64,6,opt,name=sync_version" json:"sync_version,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgSOCacheSubscriptionCheck) Reset()         { *m = CMsgSOCacheSubscriptionCheck{} }
func (m *CMsgSOCacheSubscriptionCheck) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheSubscriptionCheck) ProtoMessage()    {}

func (m *CMsgSOCacheSubscriptionCheck) GetOwner() uint64 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *CMsgSOCacheSubscriptionCheck) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgSOCacheSubscriptionCheck) GetOwnerSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.OwnerSoid
	}
	return nil
}

func (m *CMsgSOCacheSubscriptionCheck) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *CMsgSOCacheSubscriptionCheck) GetServiceList() []uint32 {
	if m != nil {
		return m.ServiceList
	}
	return nil
}

func (m *CMsgSOCacheSubscriptionCheck) GetSyncVersion() uint64 {
	if m != nil && m.SyncVersion != nil {
		return *m.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscriptionRefresh struct {
	Owner            *uint64        `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	OwnerSoid        *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid" json:"owner_soid,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgSOCacheSubscriptionRefresh) Reset()         { *m = CMsgSOCacheSubscriptionRefresh{} }
func (m *CMsgSOCacheSubscriptionRefresh) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheSubscriptionRefresh) ProtoMessage()    {}

func (m *CMsgSOCacheSubscriptionRefresh) GetOwner() uint64 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *CMsgSOCacheSubscriptionRefresh) GetOwnerSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.OwnerSoid
	}
	return nil
}

type CMsgSOCacheVersion struct {
	Version          *uint64 `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSOCacheVersion) Reset()         { *m = CMsgSOCacheVersion{} }
func (m *CMsgSOCacheVersion) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheVersion) ProtoMessage()    {}

func (m *CMsgSOCacheVersion) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CMsgGCMultiplexMessage struct {
	Msgtype          *uint32  `protobuf:"varint,1,opt,name=msgtype" json:"msgtype,omitempty"`
	Payload          []byte   `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	Steamids         []uint64 `protobuf:"fixed64,3,rep,name=steamids" json:"steamids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCMultiplexMessage) Reset()         { *m = CMsgGCMultiplexMessage{} }
func (m *CMsgGCMultiplexMessage) String() string { return proto.CompactTextString(m) }
func (*CMsgGCMultiplexMessage) ProtoMessage()    {}

func (m *CMsgGCMultiplexMessage) GetMsgtype() uint32 {
	if m != nil && m.Msgtype != nil {
		return *m.Msgtype
	}
	return 0
}

func (m *CMsgGCMultiplexMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CMsgGCMultiplexMessage) GetSteamids() []uint64 {
	if m != nil {
		return m.Steamids
	}
	return nil
}

type CGCToGCMsgMasterAck struct {
	DirIndex         *uint32  `protobuf:"varint,1,opt,name=dir_index" json:"dir_index,omitempty"`
	MachineName      *string  `protobuf:"bytes,3,opt,name=machine_name" json:"machine_name,omitempty"`
	ProcessName      *string  `protobuf:"bytes,4,opt,name=process_name" json:"process_name,omitempty"`
	TypeInstances    []uint32 `protobuf:"varint,5,rep,name=type_instances" json:"type_instances,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CGCToGCMsgMasterAck) Reset()         { *m = CGCToGCMsgMasterAck{} }
func (m *CGCToGCMsgMasterAck) String() string { return proto.CompactTextString(m) }
func (*CGCToGCMsgMasterAck) ProtoMessage()    {}

func (m *CGCToGCMsgMasterAck) GetDirIndex() uint32 {
	if m != nil && m.DirIndex != nil {
		return *m.DirIndex
	}
	return 0
}

func (m *CGCToGCMsgMasterAck) GetMachineName() string {
	if m != nil && m.MachineName != nil {
		return *m.MachineName
	}
	return ""
}

func (m *CGCToGCMsgMasterAck) GetProcessName() string {
	if m != nil && m.ProcessName != nil {
		return *m.ProcessName
	}
	return ""
}

func (m *CGCToGCMsgMasterAck) GetTypeInstances() []uint32 {
	if m != nil {
		return m.TypeInstances
	}
	return nil
}

type CGCToGCMsgMasterAck_Response struct {
	Eresult          *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGCToGCMsgMasterAck_Response) Reset()         { *m = CGCToGCMsgMasterAck_Response{} }
func (m *CGCToGCMsgMasterAck_Response) String() string { return proto.CompactTextString(m) }
func (*CGCToGCMsgMasterAck_Response) ProtoMessage()    {}

const Default_CGCToGCMsgMasterAck_Response_Eresult int32 = 2

func (m *CGCToGCMsgMasterAck_Response) GetEresult() int32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CGCToGCMsgMasterAck_Response_Eresult
}

type CGCToGCMsgMasterStartupComplete struct {
	GcInfo           []*CGCToGCMsgMasterStartupComplete_GCInfo `protobuf:"bytes,1,rep,name=gc_info" json:"gc_info,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CGCToGCMsgMasterStartupComplete) Reset()         { *m = CGCToGCMsgMasterStartupComplete{} }
func (m *CGCToGCMsgMasterStartupComplete) String() string { return proto.CompactTextString(m) }
func (*CGCToGCMsgMasterStartupComplete) ProtoMessage()    {}

func (m *CGCToGCMsgMasterStartupComplete) GetGcInfo() []*CGCToGCMsgMasterStartupComplete_GCInfo {
	if m != nil {
		return m.GcInfo
	}
	return nil
}

type CGCToGCMsgMasterStartupComplete_GCInfo struct {
	DirIndex         *uint32 `protobuf:"varint,1,opt,name=dir_index" json:"dir_index,omitempty"`
	MachineName      *string `protobuf:"bytes,2,opt,name=machine_name" json:"machine_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCToGCMsgMasterStartupComplete_GCInfo) Reset() {
	*m = CGCToGCMsgMasterStartupComplete_GCInfo{}
}
func (m *CGCToGCMsgMasterStartupComplete_GCInfo) String() string { return proto.CompactTextString(m) }
func (*CGCToGCMsgMasterStartupComplete_GCInfo) ProtoMessage()    {}

func (m *CGCToGCMsgMasterStartupComplete_GCInfo) GetDirIndex() uint32 {
	if m != nil && m.DirIndex != nil {
		return *m.DirIndex
	}
	return 0
}

func (m *CGCToGCMsgMasterStartupComplete_GCInfo) GetMachineName() string {
	if m != nil && m.MachineName != nil {
		return *m.MachineName
	}
	return ""
}

type CGCToGCMsgRouted struct {
	MsgType          *uint32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	SenderId         *uint64 `protobuf:"fixed64,2,opt,name=sender_id" json:"sender_id,omitempty"`
	NetMessage       []byte  `protobuf:"bytes,3,opt,name=net_message" json:"net_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCToGCMsgRouted) Reset()         { *m = CGCToGCMsgRouted{} }
func (m *CGCToGCMsgRouted) String() string { return proto.CompactTextString(m) }
func (*CGCToGCMsgRouted) ProtoMessage()    {}

func (m *CGCToGCMsgRouted) GetMsgType() uint32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CGCToGCMsgRouted) GetSenderId() uint64 {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return 0
}

func (m *CGCToGCMsgRouted) GetNetMessage() []byte {
	if m != nil {
		return m.NetMessage
	}
	return nil
}

type CGCToGCMsgRoutedReply struct {
	MsgType          *uint32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	NetMessage       []byte  `protobuf:"bytes,2,opt,name=net_message" json:"net_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCToGCMsgRoutedReply) Reset()         { *m = CGCToGCMsgRoutedReply{} }
func (m *CGCToGCMsgRoutedReply) String() string { return proto.CompactTextString(m) }
func (*CGCToGCMsgRoutedReply) ProtoMessage()    {}

func (m *CGCToGCMsgRoutedReply) GetMsgType() uint32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CGCToGCMsgRoutedReply) GetNetMessage() []byte {
	if m != nil {
		return m.NetMessage
	}
	return nil
}

type CMsgGCUpdateSubGCSessionInfo struct {
	Updates          []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgGCUpdateSubGCSessionInfo) Reset()         { *m = CMsgGCUpdateSubGCSessionInfo{} }
func (m *CMsgGCUpdateSubGCSessionInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCUpdateSubGCSessionInfo) ProtoMessage()    {}

func (m *CMsgGCUpdateSubGCSessionInfo) GetUpdates() []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

type CMsgGCUpdateSubGCSessionInfo_CMsgUpdate struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Ip               *uint32 `protobuf:"fixed32,2,opt,name=ip" json:"ip,omitempty"`
	Trusted          *bool   `protobuf:"varint,3,opt,name=trusted" json:"trusted,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Reset() {
	*m = CMsgGCUpdateSubGCSessionInfo_CMsgUpdate{}
}
func (m *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoMessage()    {}

func (m *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetTrusted() bool {
	if m != nil && m.Trusted != nil {
		return *m.Trusted
	}
	return false
}

type CMsgGCRequestSubGCSessionInfo struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestSubGCSessionInfo) Reset()         { *m = CMsgGCRequestSubGCSessionInfo{} }
func (m *CMsgGCRequestSubGCSessionInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRequestSubGCSessionInfo) ProtoMessage()    {}

func (m *CMsgGCRequestSubGCSessionInfo) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CMsgGCRequestSubGCSessionInfoResponse struct {
	Ip               *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
	Trusted          *bool   `protobuf:"varint,2,opt,name=trusted" json:"trusted,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestSubGCSessionInfoResponse) Reset()         { *m = CMsgGCRequestSubGCSessionInfoResponse{} }
func (m *CMsgGCRequestSubGCSessionInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRequestSubGCSessionInfoResponse) ProtoMessage()    {}

func (m *CMsgGCRequestSubGCSessionInfoResponse) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *CMsgGCRequestSubGCSessionInfoResponse) GetTrusted() bool {
	if m != nil && m.Trusted != nil {
		return *m.Trusted
	}
	return false
}

type CMsgGCToGCIncrementRecruitmentLevel struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCIncrementRecruitmentLevel) Reset()         { *m = CMsgGCToGCIncrementRecruitmentLevel{} }
func (m *CMsgGCToGCIncrementRecruitmentLevel) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCIncrementRecruitmentLevel) ProtoMessage()    {}

func (m *CMsgGCToGCIncrementRecruitmentLevel) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CMsgSOCacheHaveVersion struct {
	Soid             *CMsgSOIDOwner `protobuf:"bytes,1,opt,name=soid" json:"soid,omitempty"`
	Version          *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	ServiceId        *uint32        `protobuf:"varint,3,opt,name=service_id" json:"service_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgSOCacheHaveVersion) Reset()         { *m = CMsgSOCacheHaveVersion{} }
func (m *CMsgSOCacheHaveVersion) String() string { return proto.CompactTextString(m) }
func (*CMsgSOCacheHaveVersion) ProtoMessage()    {}

func (m *CMsgSOCacheHaveVersion) GetSoid() *CMsgSOIDOwner {
	if m != nil {
		return m.Soid
	}
	return nil
}

func (m *CMsgSOCacheHaveVersion) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgSOCacheHaveVersion) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

type CMsgConnectionStatus struct {
	Status                        *GCConnectionStatus `protobuf:"varint,1,opt,name=status,enum=GCConnectionStatus,def=0" json:"status,omitempty"`
	ClientSessionNeed             *uint32             `protobuf:"varint,2,opt,name=client_session_need" json:"client_session_need,omitempty"`
	QueuePosition                 *int32              `protobuf:"varint,3,opt,name=queue_position" json:"queue_position,omitempty"`
	QueueSize                     *int32              `protobuf:"varint,4,opt,name=queue_size" json:"queue_size,omitempty"`
	WaitSeconds                   *int32              `protobuf:"varint,5,opt,name=wait_seconds" json:"wait_seconds,omitempty"`
	EstimatedWaitSecondsRemaining *int32              `protobuf:"varint,6,opt,name=estimated_wait_seconds_remaining" json:"estimated_wait_seconds_remaining,omitempty"`
	XXX_unrecognized              []byte              `json:"-"`
}

func (m *CMsgConnectionStatus) Reset()         { *m = CMsgConnectionStatus{} }
func (m *CMsgConnectionStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgConnectionStatus) ProtoMessage()    {}

const Default_CMsgConnectionStatus_Status GCConnectionStatus = GCConnectionStatus_GCConnectionStatus_HAVE_SESSION

func (m *CMsgConnectionStatus) GetStatus() GCConnectionStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_CMsgConnectionStatus_Status
}

func (m *CMsgConnectionStatus) GetClientSessionNeed() uint32 {
	if m != nil && m.ClientSessionNeed != nil {
		return *m.ClientSessionNeed
	}
	return 0
}

func (m *CMsgConnectionStatus) GetQueuePosition() int32 {
	if m != nil && m.QueuePosition != nil {
		return *m.QueuePosition
	}
	return 0
}

func (m *CMsgConnectionStatus) GetQueueSize() int32 {
	if m != nil && m.QueueSize != nil {
		return *m.QueueSize
	}
	return 0
}

func (m *CMsgConnectionStatus) GetWaitSeconds() int32 {
	if m != nil && m.WaitSeconds != nil {
		return *m.WaitSeconds
	}
	return 0
}

func (m *CMsgConnectionStatus) GetEstimatedWaitSecondsRemaining() int32 {
	if m != nil && m.EstimatedWaitSecondsRemaining != nil {
		return *m.EstimatedWaitSecondsRemaining
	}
	return 0
}

type CMsgGCToGCSOCacheSubscribe struct {
	Subscriber       *uint64                                        `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	SubscribeTo      *uint64                                        `protobuf:"fixed64,2,opt,name=subscribe_to" json:"subscribe_to,omitempty"`
	SyncVersion      *uint64                                        `protobuf:"fixed64,3,opt,name=sync_version" json:"sync_version,omitempty"`
	HaveVersions     []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions `protobuf:"bytes,4,rep,name=have_versions" json:"have_versions,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCToGCSOCacheSubscribe) Reset()         { *m = CMsgGCToGCSOCacheSubscribe{} }
func (m *CMsgGCToGCSOCacheSubscribe) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCSOCacheSubscribe) ProtoMessage()    {}

func (m *CMsgGCToGCSOCacheSubscribe) GetSubscriber() uint64 {
	if m != nil && m.Subscriber != nil {
		return *m.Subscriber
	}
	return 0
}

func (m *CMsgGCToGCSOCacheSubscribe) GetSubscribeTo() uint64 {
	if m != nil && m.SubscribeTo != nil {
		return *m.SubscribeTo
	}
	return 0
}

func (m *CMsgGCToGCSOCacheSubscribe) GetSyncVersion() uint64 {
	if m != nil && m.SyncVersion != nil {
		return *m.SyncVersion
	}
	return 0
}

func (m *CMsgGCToGCSOCacheSubscribe) GetHaveVersions() []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions {
	if m != nil {
		return m.HaveVersions
	}
	return nil
}

type CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions struct {
	ServiceId        *uint32 `protobuf:"varint,1,opt,name=service_id" json:"service_id,omitempty"`
	Version          *uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Reset() {
	*m = CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions{}
}
func (m *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoMessage() {}

func (m *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CMsgGCToGCSOCacheUnsubscribe struct {
	Subscriber       *uint64 `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	UnsubscribeFrom  *uint64 `protobuf:"fixed64,2,opt,name=unsubscribe_from" json:"unsubscribe_from,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCSOCacheUnsubscribe) Reset()         { *m = CMsgGCToGCSOCacheUnsubscribe{} }
func (m *CMsgGCToGCSOCacheUnsubscribe) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCSOCacheUnsubscribe) ProtoMessage()    {}

func (m *CMsgGCToGCSOCacheUnsubscribe) GetSubscriber() uint64 {
	if m != nil && m.Subscriber != nil {
		return *m.Subscriber
	}
	return 0
}

func (m *CMsgGCToGCSOCacheUnsubscribe) GetUnsubscribeFrom() uint64 {
	if m != nil && m.UnsubscribeFrom != nil {
		return *m.UnsubscribeFrom
	}
	return 0
}

type CMsgGCClientPing struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCClientPing) Reset()         { *m = CMsgGCClientPing{} }
func (m *CMsgGCClientPing) String() string { return proto.CompactTextString(m) }
func (*CMsgGCClientPing) ProtoMessage()    {}

type CWorkshop_PopulateItemDescriptions_Request struct {
	Appid            *uint32                                                                     `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Languages        []*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock `protobuf:"bytes,2,rep,name=languages" json:"languages,omitempty"`
	XXX_unrecognized []byte                                                                      `json:"-"`
}

func (m *CWorkshop_PopulateItemDescriptions_Request) Reset() {
	*m = CWorkshop_PopulateItemDescriptions_Request{}
}
func (m *CWorkshop_PopulateItemDescriptions_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CWorkshop_PopulateItemDescriptions_Request) ProtoMessage() {}

func (m *CWorkshop_PopulateItemDescriptions_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CWorkshop_PopulateItemDescriptions_Request) GetLanguages() []*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock {
	if m != nil {
		return m.Languages
	}
	return nil
}

type CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription struct {
	Gameitemid       *uint32 `protobuf:"varint,1,opt,name=gameitemid" json:"gameitemid,omitempty"`
	ItemDescription  *string `protobuf:"bytes,2,opt,name=item_description" json:"item_description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) Reset() {
	*m = CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription{}
}
func (m *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) String() string {
	return proto.CompactTextString(m)
}
func (*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) ProtoMessage() {}

func (m *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetGameitemid() uint32 {
	if m != nil && m.Gameitemid != nil {
		return *m.Gameitemid
	}
	return 0
}

func (m *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetItemDescription() string {
	if m != nil && m.ItemDescription != nil {
		return *m.ItemDescription
	}
	return ""
}

type CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock struct {
	Language         *string                                                             `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Descriptions     []*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription `protobuf:"bytes,2,rep,name=descriptions" json:"descriptions,omitempty"`
	XXX_unrecognized []byte                                                              `json:"-"`
}

func (m *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) Reset() {
	*m = CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock{}
}
func (m *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) String() string {
	return proto.CompactTextString(m)
}
func (*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) ProtoMessage() {}

func (m *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) GetDescriptions() []*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription {
	if m != nil {
		return m.Descriptions
	}
	return nil
}

type CWorkshop_GetContributors_Request struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid       *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CWorkshop_GetContributors_Request) Reset()         { *m = CWorkshop_GetContributors_Request{} }
func (m *CWorkshop_GetContributors_Request) String() string { return proto.CompactTextString(m) }
func (*CWorkshop_GetContributors_Request) ProtoMessage()    {}

func (m *CWorkshop_GetContributors_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CWorkshop_GetContributors_Request) GetGameitemid() uint32 {
	if m != nil && m.Gameitemid != nil {
		return *m.Gameitemid
	}
	return 0
}

type CWorkshop_GetContributors_Response struct {
	Contributors     []uint64 `protobuf:"fixed64,1,rep,name=contributors" json:"contributors,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CWorkshop_GetContributors_Response) Reset()         { *m = CWorkshop_GetContributors_Response{} }
func (m *CWorkshop_GetContributors_Response) String() string { return proto.CompactTextString(m) }
func (*CWorkshop_GetContributors_Response) ProtoMessage()    {}

func (m *CWorkshop_GetContributors_Response) GetContributors() []uint64 {
	if m != nil {
		return m.Contributors
	}
	return nil
}

func init() {
	proto.RegisterEnum("PartnerAccountType", PartnerAccountType_name, PartnerAccountType_value)
	proto.RegisterEnum("GCConnectionStatus", GCConnectionStatus_name, GCConnectionStatus_value)
}
