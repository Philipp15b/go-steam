// Code generated by protoc-gen-go.
// source: tf_gcmessages.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import math "math"

// discarding unused import steammessages "steammessages.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ETFGCMsg int32

const (
	ETFGCMsg_k_EMsgGCReportWarKill                                  ETFGCMsg = 5001
	ETFGCMsg_k_EMsgGCVoteKickBanPlayer                              ETFGCMsg = 5018
	ETFGCMsg_k_EMsgGCVoteKickBanPlayerResult                        ETFGCMsg = 5019
	ETFGCMsg_k_EMsgGCKickPlayer_DEPRECATED                          ETFGCMsg = 5020
	ETFGCMsg_k_EMsgGCStartedTraining_DEPRECATED                     ETFGCMsg = 5021
	ETFGCMsg_k_EMsgGCFreeTrial_ChooseMostHelpfulFriend              ETFGCMsg = 5022
	ETFGCMsg_k_EMsgGCRequestTF2Friends                              ETFGCMsg = 5023
	ETFGCMsg_k_EMsgGCRequestTF2FriendsResponse                      ETFGCMsg = 5024
	ETFGCMsg_k_EMsgGCReplay_SubmitContestEntry                      ETFGCMsg = 5026
	ETFGCMsg_k_EMsgGCReplay_SubmitContestEntryResponse              ETFGCMsg = 5027
	ETFGCMsg_k_EMsgGCSaxxy_Awarded                                  ETFGCMsg = 5029
	ETFGCMsg_k_EMsgGCFreeTrial_ThankedBySomeone                     ETFGCMsg = 5028
	ETFGCMsg_k_EMsgGCFreeTrial_ThankedSomeone                       ETFGCMsg = 5030
	ETFGCMsg_k_EMsgGCFreeTrial_ConvertedToPremium                   ETFGCMsg = 5031
	ETFGCMsg_k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED    ETFGCMsg = 5032
	ETFGCMsg_k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED      ETFGCMsg = 5033
	ETFGCMsg_k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED             ETFGCMsg = 5034
	ETFGCMsg_k_EMsgGCCoaching_AddToCoaches                          ETFGCMsg = 5200
	ETFGCMsg_k_EMsgGCCoaching_AddToCoachesResponse                  ETFGCMsg = 5201
	ETFGCMsg_k_EMsgGCCoaching_RemoveFromCoaches                     ETFGCMsg = 5202
	ETFGCMsg_k_EMsgGCCoaching_RemoveFromCoachesResponse             ETFGCMsg = 5203
	ETFGCMsg_k_EMsgGCCoaching_FindCoach                             ETFGCMsg = 5204
	ETFGCMsg_k_EMsgGCCoaching_FindCoachResponse                     ETFGCMsg = 5205
	ETFGCMsg_k_EMsgGCCoaching_AskCoach                              ETFGCMsg = 5206
	ETFGCMsg_k_EMsgGCCoaching_AskCoachResponse                      ETFGCMsg = 5207
	ETFGCMsg_k_EMsgGCCoaching_CoachJoinGame                         ETFGCMsg = 5208
	ETFGCMsg_k_EMsgGCCoaching_CoachJoining                          ETFGCMsg = 5209
	ETFGCMsg_k_EMsgGCCoaching_CoachJoined                           ETFGCMsg = 5210
	ETFGCMsg_k_EMsgGCCoaching_LikeCurrentCoach                      ETFGCMsg = 5211
	ETFGCMsg_k_EMsgGCCoaching_RemoveCurrentCoach                    ETFGCMsg = 5212
	ETFGCMsg_k_EMsgGCCoaching_AlreadyRatedCoach                     ETFGCMsg = 5213
	ETFGCMsg_k_EMsgGC_Duel_Request                                  ETFGCMsg = 5500
	ETFGCMsg_k_EMsgGC_Duel_Response                                 ETFGCMsg = 5501
	ETFGCMsg_k_EMsgGC_Duel_Results                                  ETFGCMsg = 5502
	ETFGCMsg_k_EMsgGC_Duel_Status                                   ETFGCMsg = 5503
	ETFGCMsg_k_EMsgGC_Halloween_ReservedItem_DEPRECATED             ETFGCMsg = 5600
	ETFGCMsg_k_EMsgGC_Halloween_GrantItem_DEPRECATED                ETFGCMsg = 5601
	ETFGCMsg_k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED        ETFGCMsg = 5604
	ETFGCMsg_k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED      ETFGCMsg = 5605
	ETFGCMsg_k_EMsgGC_Halloween_ItemClaimed_DEPRECATED              ETFGCMsg = 5606
	ETFGCMsg_k_EMsgGC_Halloween_ReservedItem                        ETFGCMsg = 5607
	ETFGCMsg_k_EMsgGC_Halloween_GrantItem                           ETFGCMsg = 5608
	ETFGCMsg_k_EMsgGC_Halloween_GrantItemResponse                   ETFGCMsg = 5609
	ETFGCMsg_k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2    ETFGCMsg = 5610
	ETFGCMsg_k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2            ETFGCMsg = 5611
	ETFGCMsg_k_EMsgGC_Halloween_ServerBossEvent                     ETFGCMsg = 5612
	ETFGCMsg_k_EMsgGC_Halloween_Merasmus2012                        ETFGCMsg = 5613
	ETFGCMsg_k_EMsgGC_Halloween_UpdateMerasmusLootLevel             ETFGCMsg = 5614
	ETFGCMsg_k_EMsgGC_GameServer_LevelInfo                          ETFGCMsg = 5700
	ETFGCMsg_k_EMsgGC_GameServer_AuthChallenge                      ETFGCMsg = 5701
	ETFGCMsg_k_EMsgGC_GameServer_AuthChallengeResponse              ETFGCMsg = 5702
	ETFGCMsg_k_EMsgGC_GameServer_CreateIdentity                     ETFGCMsg = 5703
	ETFGCMsg_k_EMsgGC_GameServer_CreateIdentityResponse             ETFGCMsg = 5704
	ETFGCMsg_k_EMsgGC_GameServer_List                               ETFGCMsg = 5705
	ETFGCMsg_k_EMsgGC_GameServer_ListResponse                       ETFGCMsg = 5706
	ETFGCMsg_k_EMsgGC_GameServer_AuthResult                         ETFGCMsg = 5707
	ETFGCMsg_k_EMsgGC_GameServer_ResetIdentity                      ETFGCMsg = 5708
	ETFGCMsg_k_EMsgGC_GameServer_ResetIdentityResponse              ETFGCMsg = 5709
	ETFGCMsg_k_EMsgGC_Client_UseServerModificationItem              ETFGCMsg = 5710
	ETFGCMsg_k_EMsgGC_Client_UseServerModificationItem_Response     ETFGCMsg = 5711
	ETFGCMsg_k_EMsgGC_GameServer_UseServerModificationItem          ETFGCMsg = 5712
	ETFGCMsg_k_EMsgGC_GameServer_UseServerModificationItem_Response ETFGCMsg = 5713
	ETFGCMsg_k_EMsgGC_GameServer_ServerModificationItemExpired      ETFGCMsg = 5714
	ETFGCMsg_k_EMsgGC_GameServer_ModificationItemState              ETFGCMsg = 5715
	ETFGCMsg_k_EMsgGC_GameServer_AckPolicy                          ETFGCMsg = 5716
	ETFGCMsg_k_EMsgGC_GameServer_AckPolicyResponse                  ETFGCMsg = 5717
	ETFGCMsg_k_EMsgGC_QP_ScoreServers                               ETFGCMsg = 5800
	ETFGCMsg_k_EMsgGC_QP_ScoreServersResponse                       ETFGCMsg = 5801
	ETFGCMsg_k_EMsgGC_QP_PlayerJoining                              ETFGCMsg = 5802
	ETFGCMsg_k_EMsgGC_PickupItemEligibility_Query_DEPRECATED        ETFGCMsg = 6000
	ETFGCMsg_k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2      ETFGCMsg = 6001
	ETFGCMsg_k_EMsgGC_IncrementKillCountAttribute_DEPRECATED        ETFGCMsg = 6100
	ETFGCMsg_k_EMsgGC_IncrementKillCountResponse_DEPRECATED         ETFGCMsg = 6101
	ETFGCMsg_k_EMsgGCGameMatchSignOut                               ETFGCMsg = 6204
	ETFGCMsg_k_EMsgGCCreateOrUpdateParty                            ETFGCMsg = 6233
	ETFGCMsg_k_EMsgGCAbandonCurrentGame                             ETFGCMsg = 6235
	ETFGCMsg_k_EMsgForceSOCacheResend                               ETFGCMsg = 6237
	ETFGCMsg_k_EMsgGCRequestChatChannelList                         ETFGCMsg = 6260
	ETFGCMsg_k_EMsgGCRequestChatChannelListResponse                 ETFGCMsg = 6261
	ETFGCMsg_k_EMsgGCReadyUp                                        ETFGCMsg = 6270
	ETFGCMsg_k_EMsgGCKickedFromMatchmakingQueue                     ETFGCMsg = 6271
	ETFGCMsg_k_EMsgGCLeaverDetected                                 ETFGCMsg = 6272
	ETFGCMsg_k_EMsgGCLeaverDetectedResponse                         ETFGCMsg = 6287
	ETFGCMsg_k_EMsgGCPlayerFailedToConnect                          ETFGCMsg = 6288
	ETFGCMsg_k_EMsgGCExitMatchmaking                                ETFGCMsg = 6289
	ETFGCMsg_k_EMsgGCAcceptInvite                                   ETFGCMsg = 6291
	ETFGCMsg_k_EMsgGCAcceptInviteResponse                           ETFGCMsg = 6292
	ETFGCMsg_k_EMsgGCMatchmakingProgress                            ETFGCMsg = 6293
	ETFGCMsg_k_EMsgGCMvMVictoryInfo                                 ETFGCMsg = 6294
	ETFGCMsg_k_EMsgGCGameServerMatchmakingStatus                    ETFGCMsg = 6295
	ETFGCMsg_k_EMsgGCCreateOrUpdatePartyReply                       ETFGCMsg = 6296
	ETFGCMsg_k_EMsgGCMvMVictory                                     ETFGCMsg = 6297
	ETFGCMsg_k_EMsgGCMvMVictoryReply                                ETFGCMsg = 6298
	ETFGCMsg_k_EMsgGCGameServerKickingLobby                         ETFGCMsg = 6299
	ETFGCMsg_k_EMsgGCLeaveGameAndPrepareToJoinParty                 ETFGCMsg = 6300
	ETFGCMsg_k_EMsgGCRemovePlayerFromLobby                          ETFGCMsg = 6301
	ETFGCMsg_k_EMsgGCSetLobbySafeToLeave                            ETFGCMsg = 6302
	ETFGCMsg_k_EMsgGC_UpdatePeriodicEvent                           ETFGCMsg = 6400
	ETFGCMsg_k_EMsgGC_ClientVerificationChallenge                   ETFGCMsg = 6500
	ETFGCMsg_k_EMsgGC_ClientVerificationChallengeResponse           ETFGCMsg = 6501
	ETFGCMsg_k_EMsgGC_ClientVerificationVerboseResponse             ETFGCMsg = 6502
	ETFGCMsg_k_EMsgGC_ClientSetItemSlotAttribute                    ETFGCMsg = 6503
	ETFGCMsg_k_EMsgGCDev_GrantWarKill                               ETFGCMsg = 10001
)

var ETFGCMsg_name = map[int32]string{
	5001:  "k_EMsgGCReportWarKill",
	5018:  "k_EMsgGCVoteKickBanPlayer",
	5019:  "k_EMsgGCVoteKickBanPlayerResult",
	5020:  "k_EMsgGCKickPlayer_DEPRECATED",
	5021:  "k_EMsgGCStartedTraining_DEPRECATED",
	5022:  "k_EMsgGCFreeTrial_ChooseMostHelpfulFriend",
	5023:  "k_EMsgGCRequestTF2Friends",
	5024:  "k_EMsgGCRequestTF2FriendsResponse",
	5026:  "k_EMsgGCReplay_SubmitContestEntry",
	5027:  "k_EMsgGCReplay_SubmitContestEntryResponse",
	5029:  "k_EMsgGCSaxxy_Awarded",
	5028:  "k_EMsgGCFreeTrial_ThankedBySomeone",
	5030:  "k_EMsgGCFreeTrial_ThankedSomeone",
	5031:  "k_EMsgGCFreeTrial_ConvertedToPremium",
	5032:  "k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED",
	5033:  "k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED",
	5034:  "k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED",
	5200:  "k_EMsgGCCoaching_AddToCoaches",
	5201:  "k_EMsgGCCoaching_AddToCoachesResponse",
	5202:  "k_EMsgGCCoaching_RemoveFromCoaches",
	5203:  "k_EMsgGCCoaching_RemoveFromCoachesResponse",
	5204:  "k_EMsgGCCoaching_FindCoach",
	5205:  "k_EMsgGCCoaching_FindCoachResponse",
	5206:  "k_EMsgGCCoaching_AskCoach",
	5207:  "k_EMsgGCCoaching_AskCoachResponse",
	5208:  "k_EMsgGCCoaching_CoachJoinGame",
	5209:  "k_EMsgGCCoaching_CoachJoining",
	5210:  "k_EMsgGCCoaching_CoachJoined",
	5211:  "k_EMsgGCCoaching_LikeCurrentCoach",
	5212:  "k_EMsgGCCoaching_RemoveCurrentCoach",
	5213:  "k_EMsgGCCoaching_AlreadyRatedCoach",
	5500:  "k_EMsgGC_Duel_Request",
	5501:  "k_EMsgGC_Duel_Response",
	5502:  "k_EMsgGC_Duel_Results",
	5503:  "k_EMsgGC_Duel_Status",
	5600:  "k_EMsgGC_Halloween_ReservedItem_DEPRECATED",
	5601:  "k_EMsgGC_Halloween_GrantItem_DEPRECATED",
	5604:  "k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED",
	5605:  "k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED",
	5606:  "k_EMsgGC_Halloween_ItemClaimed_DEPRECATED",
	5607:  "k_EMsgGC_Halloween_ReservedItem",
	5608:  "k_EMsgGC_Halloween_GrantItem",
	5609:  "k_EMsgGC_Halloween_GrantItemResponse",
	5610:  "k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2",
	5611:  "k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2",
	5612:  "k_EMsgGC_Halloween_ServerBossEvent",
	5613:  "k_EMsgGC_Halloween_Merasmus2012",
	5614:  "k_EMsgGC_Halloween_UpdateMerasmusLootLevel",
	5700:  "k_EMsgGC_GameServer_LevelInfo",
	5701:  "k_EMsgGC_GameServer_AuthChallenge",
	5702:  "k_EMsgGC_GameServer_AuthChallengeResponse",
	5703:  "k_EMsgGC_GameServer_CreateIdentity",
	5704:  "k_EMsgGC_GameServer_CreateIdentityResponse",
	5705:  "k_EMsgGC_GameServer_List",
	5706:  "k_EMsgGC_GameServer_ListResponse",
	5707:  "k_EMsgGC_GameServer_AuthResult",
	5708:  "k_EMsgGC_GameServer_ResetIdentity",
	5709:  "k_EMsgGC_GameServer_ResetIdentityResponse",
	5710:  "k_EMsgGC_Client_UseServerModificationItem",
	5711:  "k_EMsgGC_Client_UseServerModificationItem_Response",
	5712:  "k_EMsgGC_GameServer_UseServerModificationItem",
	5713:  "k_EMsgGC_GameServer_UseServerModificationItem_Response",
	5714:  "k_EMsgGC_GameServer_ServerModificationItemExpired",
	5715:  "k_EMsgGC_GameServer_ModificationItemState",
	5716:  "k_EMsgGC_GameServer_AckPolicy",
	5717:  "k_EMsgGC_GameServer_AckPolicyResponse",
	5800:  "k_EMsgGC_QP_ScoreServers",
	5801:  "k_EMsgGC_QP_ScoreServersResponse",
	5802:  "k_EMsgGC_QP_PlayerJoining",
	6000:  "k_EMsgGC_PickupItemEligibility_Query_DEPRECATED",
	6001:  "k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2",
	6100:  "k_EMsgGC_IncrementKillCountAttribute_DEPRECATED",
	6101:  "k_EMsgGC_IncrementKillCountResponse_DEPRECATED",
	6204:  "k_EMsgGCGameMatchSignOut",
	6233:  "k_EMsgGCCreateOrUpdateParty",
	6235:  "k_EMsgGCAbandonCurrentGame",
	6237:  "k_EMsgForceSOCacheResend",
	6260:  "k_EMsgGCRequestChatChannelList",
	6261:  "k_EMsgGCRequestChatChannelListResponse",
	6270:  "k_EMsgGCReadyUp",
	6271:  "k_EMsgGCKickedFromMatchmakingQueue",
	6272:  "k_EMsgGCLeaverDetected",
	6287:  "k_EMsgGCLeaverDetectedResponse",
	6288:  "k_EMsgGCPlayerFailedToConnect",
	6289:  "k_EMsgGCExitMatchmaking",
	6291:  "k_EMsgGCAcceptInvite",
	6292:  "k_EMsgGCAcceptInviteResponse",
	6293:  "k_EMsgGCMatchmakingProgress",
	6294:  "k_EMsgGCMvMVictoryInfo",
	6295:  "k_EMsgGCGameServerMatchmakingStatus",
	6296:  "k_EMsgGCCreateOrUpdatePartyReply",
	6297:  "k_EMsgGCMvMVictory",
	6298:  "k_EMsgGCMvMVictoryReply",
	6299:  "k_EMsgGCGameServerKickingLobby",
	6300:  "k_EMsgGCLeaveGameAndPrepareToJoinParty",
	6301:  "k_EMsgGCRemovePlayerFromLobby",
	6302:  "k_EMsgGCSetLobbySafeToLeave",
	6400:  "k_EMsgGC_UpdatePeriodicEvent",
	6500:  "k_EMsgGC_ClientVerificationChallenge",
	6501:  "k_EMsgGC_ClientVerificationChallengeResponse",
	6502:  "k_EMsgGC_ClientVerificationVerboseResponse",
	6503:  "k_EMsgGC_ClientSetItemSlotAttribute",
	10001: "k_EMsgGCDev_GrantWarKill",
}
var ETFGCMsg_value = map[string]int32{
	"k_EMsgGCReportWarKill":                                  5001,
	"k_EMsgGCVoteKickBanPlayer":                              5018,
	"k_EMsgGCVoteKickBanPlayerResult":                        5019,
	"k_EMsgGCKickPlayer_DEPRECATED":                          5020,
	"k_EMsgGCStartedTraining_DEPRECATED":                     5021,
	"k_EMsgGCFreeTrial_ChooseMostHelpfulFriend":              5022,
	"k_EMsgGCRequestTF2Friends":                              5023,
	"k_EMsgGCRequestTF2FriendsResponse":                      5024,
	"k_EMsgGCReplay_SubmitContestEntry":                      5026,
	"k_EMsgGCReplay_SubmitContestEntryResponse":              5027,
	"k_EMsgGCSaxxy_Awarded":                                  5029,
	"k_EMsgGCFreeTrial_ThankedBySomeone":                     5028,
	"k_EMsgGCFreeTrial_ThankedSomeone":                       5030,
	"k_EMsgGCFreeTrial_ConvertedToPremium":                   5031,
	"k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED":    5032,
	"k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED":      5033,
	"k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED":             5034,
	"k_EMsgGCCoaching_AddToCoaches":                          5200,
	"k_EMsgGCCoaching_AddToCoachesResponse":                  5201,
	"k_EMsgGCCoaching_RemoveFromCoaches":                     5202,
	"k_EMsgGCCoaching_RemoveFromCoachesResponse":             5203,
	"k_EMsgGCCoaching_FindCoach":                             5204,
	"k_EMsgGCCoaching_FindCoachResponse":                     5205,
	"k_EMsgGCCoaching_AskCoach":                              5206,
	"k_EMsgGCCoaching_AskCoachResponse":                      5207,
	"k_EMsgGCCoaching_CoachJoinGame":                         5208,
	"k_EMsgGCCoaching_CoachJoining":                          5209,
	"k_EMsgGCCoaching_CoachJoined":                           5210,
	"k_EMsgGCCoaching_LikeCurrentCoach":                      5211,
	"k_EMsgGCCoaching_RemoveCurrentCoach":                    5212,
	"k_EMsgGCCoaching_AlreadyRatedCoach":                     5213,
	"k_EMsgGC_Duel_Request":                                  5500,
	"k_EMsgGC_Duel_Response":                                 5501,
	"k_EMsgGC_Duel_Results":                                  5502,
	"k_EMsgGC_Duel_Status":                                   5503,
	"k_EMsgGC_Halloween_ReservedItem_DEPRECATED":             5600,
	"k_EMsgGC_Halloween_GrantItem_DEPRECATED":                5601,
	"k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED":        5604,
	"k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED":      5605,
	"k_EMsgGC_Halloween_ItemClaimed_DEPRECATED":              5606,
	"k_EMsgGC_Halloween_ReservedItem":                        5607,
	"k_EMsgGC_Halloween_GrantItem":                           5608,
	"k_EMsgGC_Halloween_GrantItemResponse":                   5609,
	"k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2":    5610,
	"k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2":            5611,
	"k_EMsgGC_Halloween_ServerBossEvent":                     5612,
	"k_EMsgGC_Halloween_Merasmus2012":                        5613,
	"k_EMsgGC_Halloween_UpdateMerasmusLootLevel":             5614,
	"k_EMsgGC_GameServer_LevelInfo":                          5700,
	"k_EMsgGC_GameServer_AuthChallenge":                      5701,
	"k_EMsgGC_GameServer_AuthChallengeResponse":              5702,
	"k_EMsgGC_GameServer_CreateIdentity":                     5703,
	"k_EMsgGC_GameServer_CreateIdentityResponse":             5704,
	"k_EMsgGC_GameServer_List":                               5705,
	"k_EMsgGC_GameServer_ListResponse":                       5706,
	"k_EMsgGC_GameServer_AuthResult":                         5707,
	"k_EMsgGC_GameServer_ResetIdentity":                      5708,
	"k_EMsgGC_GameServer_ResetIdentityResponse":              5709,
	"k_EMsgGC_Client_UseServerModificationItem":              5710,
	"k_EMsgGC_Client_UseServerModificationItem_Response":     5711,
	"k_EMsgGC_GameServer_UseServerModificationItem":          5712,
	"k_EMsgGC_GameServer_UseServerModificationItem_Response": 5713,
	"k_EMsgGC_GameServer_ServerModificationItemExpired":      5714,
	"k_EMsgGC_GameServer_ModificationItemState":              5715,
	"k_EMsgGC_GameServer_AckPolicy":                          5716,
	"k_EMsgGC_GameServer_AckPolicyResponse":                  5717,
	"k_EMsgGC_QP_ScoreServers":                               5800,
	"k_EMsgGC_QP_ScoreServersResponse":                       5801,
	"k_EMsgGC_QP_PlayerJoining":                              5802,
	"k_EMsgGC_PickupItemEligibility_Query_DEPRECATED":        6000,
	"k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2":      6001,
	"k_EMsgGC_IncrementKillCountAttribute_DEPRECATED":        6100,
	"k_EMsgGC_IncrementKillCountResponse_DEPRECATED":         6101,
	"k_EMsgGCGameMatchSignOut":                               6204,
	"k_EMsgGCCreateOrUpdateParty":                            6233,
	"k_EMsgGCAbandonCurrentGame":                             6235,
	"k_EMsgForceSOCacheResend":                               6237,
	"k_EMsgGCRequestChatChannelList":                         6260,
	"k_EMsgGCRequestChatChannelListResponse":                 6261,
	"k_EMsgGCReadyUp":                                        6270,
	"k_EMsgGCKickedFromMatchmakingQueue":                     6271,
	"k_EMsgGCLeaverDetected":                                 6272,
	"k_EMsgGCLeaverDetectedResponse":                         6287,
	"k_EMsgGCPlayerFailedToConnect":                          6288,
	"k_EMsgGCExitMatchmaking":                                6289,
	"k_EMsgGCAcceptInvite":                                   6291,
	"k_EMsgGCAcceptInviteResponse":                           6292,
	"k_EMsgGCMatchmakingProgress":                            6293,
	"k_EMsgGCMvMVictoryInfo":                                 6294,
	"k_EMsgGCGameServerMatchmakingStatus":                    6295,
	"k_EMsgGCCreateOrUpdatePartyReply":                       6296,
	"k_EMsgGCMvMVictory":                                     6297,
	"k_EMsgGCMvMVictoryReply":                                6298,
	"k_EMsgGCGameServerKickingLobby":                         6299,
	"k_EMsgGCLeaveGameAndPrepareToJoinParty":                 6300,
	"k_EMsgGCRemovePlayerFromLobby":                          6301,
	"k_EMsgGCSetLobbySafeToLeave":                            6302,
	"k_EMsgGC_UpdatePeriodicEvent":                           6400,
	"k_EMsgGC_ClientVerificationChallenge":                   6500,
	"k_EMsgGC_ClientVerificationChallengeResponse":           6501,
	"k_EMsgGC_ClientVerificationVerboseResponse":             6502,
	"k_EMsgGC_ClientSetItemSlotAttribute":                    6503,
	"k_EMsgGCDev_GrantWarKill":                               10001,
}

func (x ETFGCMsg) Enum() *ETFGCMsg {
	p := new(ETFGCMsg)
	*p = x
	return p
}
func (x ETFGCMsg) String() string {
	return proto.EnumName(ETFGCMsg_name, int32(x))
}
func (x *ETFGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETFGCMsg_value, data, "ETFGCMsg")
	if err != nil {
		return err
	}
	*x = ETFGCMsg(value)
	return nil
}

type EServerModificationItemType int32

const (
	EServerModificationItemType_kGameServerModificationItem_Halloween EServerModificationItemType = 1
)

var EServerModificationItemType_name = map[int32]string{
	1: "kGameServerModificationItem_Halloween",
}
var EServerModificationItemType_value = map[string]int32{
	"kGameServerModificationItem_Halloween": 1,
}

func (x EServerModificationItemType) Enum() *EServerModificationItemType {
	p := new(EServerModificationItemType)
	*p = x
	return p
}
func (x EServerModificationItemType) String() string {
	return proto.EnumName(EServerModificationItemType_name, int32(x))
}
func (x *EServerModificationItemType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EServerModificationItemType_value, data, "EServerModificationItemType")
	if err != nil {
		return err
	}
	*x = EServerModificationItemType(value)
	return nil
}

type TF_MatchmakingMode int32

const (
	TF_MatchmakingMode_TF_Matchmaking_INVALID   TF_MatchmakingMode = 0
	TF_MatchmakingMode_TF_Matchmaking_QUICKPLAY TF_MatchmakingMode = 1
	TF_MatchmakingMode_TF_Matchmaking_TOBOR     TF_MatchmakingMode = 2
)

var TF_MatchmakingMode_name = map[int32]string{
	0: "TF_Matchmaking_INVALID",
	1: "TF_Matchmaking_QUICKPLAY",
	2: "TF_Matchmaking_TOBOR",
}
var TF_MatchmakingMode_value = map[string]int32{
	"TF_Matchmaking_INVALID":   0,
	"TF_Matchmaking_QUICKPLAY": 1,
	"TF_Matchmaking_TOBOR":     2,
}

func (x TF_MatchmakingMode) Enum() *TF_MatchmakingMode {
	p := new(TF_MatchmakingMode)
	*p = x
	return p
}
func (x TF_MatchmakingMode) String() string {
	return proto.EnumName(TF_MatchmakingMode_name, int32(x))
}
func (x *TF_MatchmakingMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_MatchmakingMode_value, data, "TF_MatchmakingMode")
	if err != nil {
		return err
	}
	*x = TF_MatchmakingMode(value)
	return nil
}

type TF_Matchmaking_WizardStep int32

const (
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID                        TF_Matchmaking_WizardStep = 0
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_TOBOR_PLAY_FOR_BRAGGING_RIGHTS TF_Matchmaking_WizardStep = 1
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_TOBOR_TOUR_OF_DUTY             TF_Matchmaking_WizardStep = 2
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_TOBOR_CHALLENGE                TF_Matchmaking_WizardStep = 3
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_QUICKPLAY                      TF_Matchmaking_WizardStep = 4
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_SEARCHING                      TF_Matchmaking_WizardStep = 5
)

var TF_Matchmaking_WizardStep_name = map[int32]string{
	0: "TF_Matchmaking_WizardStep_INVALID",
	1: "TF_Matchmaking_WizardStep_TOBOR_PLAY_FOR_BRAGGING_RIGHTS",
	2: "TF_Matchmaking_WizardStep_TOBOR_TOUR_OF_DUTY",
	3: "TF_Matchmaking_WizardStep_TOBOR_CHALLENGE",
	4: "TF_Matchmaking_WizardStep_QUICKPLAY",
	5: "TF_Matchmaking_WizardStep_SEARCHING",
}
var TF_Matchmaking_WizardStep_value = map[string]int32{
	"TF_Matchmaking_WizardStep_INVALID":                        0,
	"TF_Matchmaking_WizardStep_TOBOR_PLAY_FOR_BRAGGING_RIGHTS": 1,
	"TF_Matchmaking_WizardStep_TOBOR_TOUR_OF_DUTY":             2,
	"TF_Matchmaking_WizardStep_TOBOR_CHALLENGE":                3,
	"TF_Matchmaking_WizardStep_QUICKPLAY":                      4,
	"TF_Matchmaking_WizardStep_SEARCHING":                      5,
}

func (x TF_Matchmaking_WizardStep) Enum() *TF_Matchmaking_WizardStep {
	p := new(TF_Matchmaking_WizardStep)
	*p = x
	return p
}
func (x TF_Matchmaking_WizardStep) String() string {
	return proto.EnumName(TF_Matchmaking_WizardStep_name, int32(x))
}
func (x *TF_Matchmaking_WizardStep) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_Matchmaking_WizardStep_value, data, "TF_Matchmaking_WizardStep")
	if err != nil {
		return err
	}
	*x = TF_Matchmaking_WizardStep(value)
	return nil
}

type TF_GC_GameState int32

const (
	TF_GC_GameState_TF_GC_GAMESTATE_STATE_INIT               TF_GC_GameState = 0
	TF_GC_GameState_TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD TF_GC_GameState = 1
	TF_GC_GameState_TF_GC_GAMESTATE_STRATEGY_TIME            TF_GC_GameState = 3
	TF_GC_GameState_TF_GC_GAMESTATE_GAME_IN_PROGRESS         TF_GC_GameState = 5
	TF_GC_GameState_TF_GC_GAMESTATE_POST_GAME                TF_GC_GameState = 6
	TF_GC_GameState_TF_GC_GAMESTATE_DISCONNECT               TF_GC_GameState = 7
	TF_GC_GameState_TF_GC_GAMESTATE_LAST                     TF_GC_GameState = 8
)

var TF_GC_GameState_name = map[int32]string{
	0: "TF_GC_GAMESTATE_STATE_INIT",
	1: "TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD",
	3: "TF_GC_GAMESTATE_STRATEGY_TIME",
	5: "TF_GC_GAMESTATE_GAME_IN_PROGRESS",
	6: "TF_GC_GAMESTATE_POST_GAME",
	7: "TF_GC_GAMESTATE_DISCONNECT",
	8: "TF_GC_GAMESTATE_LAST",
}
var TF_GC_GameState_value = map[string]int32{
	"TF_GC_GAMESTATE_STATE_INIT":               0,
	"TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD": 1,
	"TF_GC_GAMESTATE_STRATEGY_TIME":            3,
	"TF_GC_GAMESTATE_GAME_IN_PROGRESS":         5,
	"TF_GC_GAMESTATE_POST_GAME":                6,
	"TF_GC_GAMESTATE_DISCONNECT":               7,
	"TF_GC_GAMESTATE_LAST":                     8,
}

func (x TF_GC_GameState) Enum() *TF_GC_GameState {
	p := new(TF_GC_GameState)
	*p = x
	return p
}
func (x TF_GC_GameState) String() string {
	return proto.EnumName(TF_GC_GameState_name, int32(x))
}
func (x *TF_GC_GameState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_GC_GameState_value, data, "TF_GC_GameState")
	if err != nil {
		return err
	}
	*x = TF_GC_GameState(value)
	return nil
}

type TF_GC_TEAM int32

const (
	TF_GC_TEAM_TF_GC_TEAM_DEFENDERS   TF_GC_TEAM = 0
	TF_GC_TEAM_TF_GC_TEAM_BROADCASTER TF_GC_TEAM = 2
	TF_GC_TEAM_TF_GC_TEAM_SPECTATOR   TF_GC_TEAM = 3
	TF_GC_TEAM_TF_GC_TEAM_PLAYER_POOL TF_GC_TEAM = 4
	TF_GC_TEAM_TF_GC_TEAM_NOTEAM      TF_GC_TEAM = 5
)

var TF_GC_TEAM_name = map[int32]string{
	0: "TF_GC_TEAM_DEFENDERS",
	2: "TF_GC_TEAM_BROADCASTER",
	3: "TF_GC_TEAM_SPECTATOR",
	4: "TF_GC_TEAM_PLAYER_POOL",
	5: "TF_GC_TEAM_NOTEAM",
}
var TF_GC_TEAM_value = map[string]int32{
	"TF_GC_TEAM_DEFENDERS":   0,
	"TF_GC_TEAM_BROADCASTER": 2,
	"TF_GC_TEAM_SPECTATOR":   3,
	"TF_GC_TEAM_PLAYER_POOL": 4,
	"TF_GC_TEAM_NOTEAM":      5,
}

func (x TF_GC_TEAM) Enum() *TF_GC_TEAM {
	p := new(TF_GC_TEAM)
	*p = x
	return p
}
func (x TF_GC_TEAM) String() string {
	return proto.EnumName(TF_GC_TEAM_name, int32(x))
}
func (x *TF_GC_TEAM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_GC_TEAM_value, data, "TF_GC_TEAM")
	if err != nil {
		return err
	}
	*x = TF_GC_TEAM(value)
	return nil
}

type TFLobbyReadyState int32

const (
	TFLobbyReadyState_TFLobbyReadyState_UNDECLARED TFLobbyReadyState = 0
	TFLobbyReadyState_TFLobbyReadyState_ACCEPTED   TFLobbyReadyState = 1
	TFLobbyReadyState_TFLobbyReadyState_DECLINED   TFLobbyReadyState = 2
)

var TFLobbyReadyState_name = map[int32]string{
	0: "TFLobbyReadyState_UNDECLARED",
	1: "TFLobbyReadyState_ACCEPTED",
	2: "TFLobbyReadyState_DECLINED",
}
var TFLobbyReadyState_value = map[string]int32{
	"TFLobbyReadyState_UNDECLARED": 0,
	"TFLobbyReadyState_ACCEPTED":   1,
	"TFLobbyReadyState_DECLINED":   2,
}

func (x TFLobbyReadyState) Enum() *TFLobbyReadyState {
	p := new(TFLobbyReadyState)
	*p = x
	return p
}
func (x TFLobbyReadyState) String() string {
	return proto.EnumName(TFLobbyReadyState_name, int32(x))
}
func (x *TFLobbyReadyState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TFLobbyReadyState_value, data, "TFLobbyReadyState")
	if err != nil {
		return err
	}
	*x = TFLobbyReadyState(value)
	return nil
}

type ChatChannelTypeT int32

const (
	ChatChannelTypeT_ChatChannelType_Regional ChatChannelTypeT = 0
	ChatChannelTypeT_ChatChannelType_Custom   ChatChannelTypeT = 1
	ChatChannelTypeT_ChatChannelType_Party    ChatChannelTypeT = 2
	ChatChannelTypeT_ChatChannelType_Lobby    ChatChannelTypeT = 3
)

var ChatChannelTypeT_name = map[int32]string{
	0: "ChatChannelType_Regional",
	1: "ChatChannelType_Custom",
	2: "ChatChannelType_Party",
	3: "ChatChannelType_Lobby",
}
var ChatChannelTypeT_value = map[string]int32{
	"ChatChannelType_Regional": 0,
	"ChatChannelType_Custom":   1,
	"ChatChannelType_Party":    2,
	"ChatChannelType_Lobby":    3,
}

func (x ChatChannelTypeT) Enum() *ChatChannelTypeT {
	p := new(ChatChannelTypeT)
	*p = x
	return p
}
func (x ChatChannelTypeT) String() string {
	return proto.EnumName(ChatChannelTypeT_name, int32(x))
}
func (x *ChatChannelTypeT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatChannelTypeT_value, data, "ChatChannelTypeT")
	if err != nil {
		return err
	}
	*x = ChatChannelTypeT(value)
	return nil
}

type ServerMatchmakingState int32

const (
	ServerMatchmakingState_ServerMatchmakingState_INVALID                ServerMatchmakingState = 0
	ServerMatchmakingState_ServerMatchmakingState_NOT_PARTICIPATING      ServerMatchmakingState = 1
	ServerMatchmakingState_ServerMatchmakingState_EMPTY                  ServerMatchmakingState = 2
	ServerMatchmakingState_ServerMatchmakingState_ACTIVE_SLOTS_AVAILABLE ServerMatchmakingState = 3
	ServerMatchmakingState_ServerMatchmakingState_ACTIVE_FULL            ServerMatchmakingState = 4
)

var ServerMatchmakingState_name = map[int32]string{
	0: "ServerMatchmakingState_INVALID",
	1: "ServerMatchmakingState_NOT_PARTICIPATING",
	2: "ServerMatchmakingState_EMPTY",
	3: "ServerMatchmakingState_ACTIVE_SLOTS_AVAILABLE",
	4: "ServerMatchmakingState_ACTIVE_FULL",
}
var ServerMatchmakingState_value = map[string]int32{
	"ServerMatchmakingState_INVALID":                0,
	"ServerMatchmakingState_NOT_PARTICIPATING":      1,
	"ServerMatchmakingState_EMPTY":                  2,
	"ServerMatchmakingState_ACTIVE_SLOTS_AVAILABLE": 3,
	"ServerMatchmakingState_ACTIVE_FULL":            4,
}

func (x ServerMatchmakingState) Enum() *ServerMatchmakingState {
	p := new(ServerMatchmakingState)
	*p = x
	return p
}
func (x ServerMatchmakingState) String() string {
	return proto.EnumName(ServerMatchmakingState_name, int32(x))
}
func (x *ServerMatchmakingState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerMatchmakingState_value, data, "ServerMatchmakingState")
	if err != nil {
		return err
	}
	*x = ServerMatchmakingState(value)
	return nil
}

type CMsgGC_GameServer_CreateIdentityResponse_EStatus int32

const (
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_GenericFailure CMsgGC_GameServer_CreateIdentityResponse_EStatus = 0
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_TooMany        CMsgGC_GameServer_CreateIdentityResponse_EStatus = -1
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_NoPrivs        CMsgGC_GameServer_CreateIdentityResponse_EStatus = -2
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_Created        CMsgGC_GameServer_CreateIdentityResponse_EStatus = 1
)

var CMsgGC_GameServer_CreateIdentityResponse_EStatus_name = map[int32]string{
	0:  "kStatus_GenericFailure",
	-1: "kStatus_TooMany",
	-2: "kStatus_NoPrivs",
	1:  "kStatus_Created",
}
var CMsgGC_GameServer_CreateIdentityResponse_EStatus_value = map[string]int32{
	"kStatus_GenericFailure": 0,
	"kStatus_TooMany":        -1,
	"kStatus_NoPrivs":        -2,
	"kStatus_Created":        1,
}

func (x CMsgGC_GameServer_CreateIdentityResponse_EStatus) Enum() *CMsgGC_GameServer_CreateIdentityResponse_EStatus {
	p := new(CMsgGC_GameServer_CreateIdentityResponse_EStatus)
	*p = x
	return p
}
func (x CMsgGC_GameServer_CreateIdentityResponse_EStatus) String() string {
	return proto.EnumName(CMsgGC_GameServer_CreateIdentityResponse_EStatus_name, int32(x))
}
func (x *CMsgGC_GameServer_CreateIdentityResponse_EStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_GameServer_CreateIdentityResponse_EStatus_value, data, "CMsgGC_GameServer_CreateIdentityResponse_EStatus")
	if err != nil {
		return err
	}
	*x = CMsgGC_GameServer_CreateIdentityResponse_EStatus(value)
	return nil
}

type CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse int32

const (
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_AlreadyInUse             CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 1
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_NotOnAuthenticatedServer CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 2
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_ServerReject             CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 3
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_InternalError            CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 4
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_EventAlreadyActive       CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 5
)

var CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_name = map[int32]string{
	1: "kServerModificationItemResponse_AlreadyInUse",
	2: "kServerModificationItemResponse_NotOnAuthenticatedServer",
	3: "kServerModificationItemResponse_ServerReject",
	4: "kServerModificationItemResponse_InternalError",
	5: "kServerModificationItemResponse_EventAlreadyActive",
}
var CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_value = map[string]int32{
	"kServerModificationItemResponse_AlreadyInUse":             1,
	"kServerModificationItemResponse_NotOnAuthenticatedServer": 2,
	"kServerModificationItemResponse_ServerReject":             3,
	"kServerModificationItemResponse_InternalError":            4,
	"kServerModificationItemResponse_EventAlreadyActive":       5,
}

func (x CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) Enum() *CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
	p := new(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse)
	*p = x
	return p
}
func (x CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) String() string {
	return proto.EnumName(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_name, int32(x))
}
func (x *CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_value, data, "CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse")
	if err != nil {
		return err
	}
	*x = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse(value)
	return nil
}

type CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse int32

const (
	CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_Accepted     CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = 1
	CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_NoVoteCalled CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = 2
	CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_VoteFailed   CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = 3
)

var CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_name = map[int32]string{
	1: "kServerModificationItemServerResponse_Accepted",
	2: "kServerModificationItemServerResponse_NoVoteCalled",
	3: "kServerModificationItemServerResponse_VoteFailed",
}
var CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_value = map[string]int32{
	"kServerModificationItemServerResponse_Accepted":     1,
	"kServerModificationItemServerResponse_NoVoteCalled": 2,
	"kServerModificationItemServerResponse_VoteFailed":   3,
}

func (x CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) Enum() *CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
	p := new(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse)
	*p = x
	return p
}
func (x CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) String() string {
	return proto.EnumName(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_name, int32(x))
}
func (x *CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_value, data, "CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse")
	if err != nil {
		return err
	}
	*x = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse(value)
	return nil
}

type CSOTFParty_State int32

const (
	CSOTFParty_UI                                CSOTFParty_State = 0
	CSOTFParty_FINDING_MATCH                     CSOTFParty_State = 1
	CSOTFParty_IN_MATCH                          CSOTFParty_State = 2
	CSOTFParty_AWAITING_RESERVATION_CONFIRMATION CSOTFParty_State = 3
)

var CSOTFParty_State_name = map[int32]string{
	0: "UI",
	1: "FINDING_MATCH",
	2: "IN_MATCH",
	3: "AWAITING_RESERVATION_CONFIRMATION",
}
var CSOTFParty_State_value = map[string]int32{
	"UI":                                0,
	"FINDING_MATCH":                     1,
	"IN_MATCH":                          2,
	"AWAITING_RESERVATION_CONFIRMATION": 3,
}

func (x CSOTFParty_State) Enum() *CSOTFParty_State {
	p := new(CSOTFParty_State)
	*p = x
	return p
}
func (x CSOTFParty_State) String() string {
	return proto.EnumName(CSOTFParty_State_name, int32(x))
}
func (x *CSOTFParty_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFParty_State_value, data, "CSOTFParty_State")
	if err != nil {
		return err
	}
	*x = CSOTFParty_State(value)
	return nil
}

type CTFLobbyMember_ConnectState int32

const (
	CTFLobbyMember_INVALID             CTFLobbyMember_ConnectState = 0
	CTFLobbyMember_RESERVATION_PENDING CTFLobbyMember_ConnectState = 1
	CTFLobbyMember_RESERVED            CTFLobbyMember_ConnectState = 2
	CTFLobbyMember_CONNECTED           CTFLobbyMember_ConnectState = 3
	CTFLobbyMember_DISCONNECTED        CTFLobbyMember_ConnectState = 5
)

var CTFLobbyMember_ConnectState_name = map[int32]string{
	0: "INVALID",
	1: "RESERVATION_PENDING",
	2: "RESERVED",
	3: "CONNECTED",
	5: "DISCONNECTED",
}
var CTFLobbyMember_ConnectState_value = map[string]int32{
	"INVALID":             0,
	"RESERVATION_PENDING": 1,
	"RESERVED":            2,
	"CONNECTED":           3,
	"DISCONNECTED":        5,
}

func (x CTFLobbyMember_ConnectState) Enum() *CTFLobbyMember_ConnectState {
	p := new(CTFLobbyMember_ConnectState)
	*p = x
	return p
}
func (x CTFLobbyMember_ConnectState) String() string {
	return proto.EnumName(CTFLobbyMember_ConnectState_name, int32(x))
}
func (x *CTFLobbyMember_ConnectState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CTFLobbyMember_ConnectState_value, data, "CTFLobbyMember_ConnectState")
	if err != nil {
		return err
	}
	*x = CTFLobbyMember_ConnectState(value)
	return nil
}

type CSOTFLobby_State int32

const (
	CSOTFLobby_SERVERSETUP  CSOTFLobby_State = 1
	CSOTFLobby_RUN          CSOTFLobby_State = 2
	CSOTFLobby_POSTGAME     CSOTFLobby_State = 3
	CSOTFLobby_NOTREADY     CSOTFLobby_State = 5
	CSOTFLobby_SERVERASSIGN CSOTFLobby_State = 6
)

var CSOTFLobby_State_name = map[int32]string{
	1: "SERVERSETUP",
	2: "RUN",
	3: "POSTGAME",
	5: "NOTREADY",
	6: "SERVERASSIGN",
}
var CSOTFLobby_State_value = map[string]int32{
	"SERVERSETUP":  1,
	"RUN":          2,
	"POSTGAME":     3,
	"NOTREADY":     5,
	"SERVERASSIGN": 6,
}

func (x CSOTFLobby_State) Enum() *CSOTFLobby_State {
	p := new(CSOTFLobby_State)
	*p = x
	return p
}
func (x CSOTFLobby_State) String() string {
	return proto.EnumName(CSOTFLobby_State_name, int32(x))
}
func (x *CSOTFLobby_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFLobby_State_value, data, "CSOTFLobby_State")
	if err != nil {
		return err
	}
	*x = CSOTFLobby_State(value)
	return nil
}

type CSOTFLobby_LobbyType int32

const (
	CSOTFLobby_INVALID    CSOTFLobby_LobbyType = -1
	CSOTFLobby_MATCH      CSOTFLobby_LobbyType = 0
	CSOTFLobby_PRACTICE   CSOTFLobby_LobbyType = 1
	CSOTFLobby_TOURNAMENT CSOTFLobby_LobbyType = 2
	CSOTFLobby_TUTORIAL   CSOTFLobby_LobbyType = 3
)

var CSOTFLobby_LobbyType_name = map[int32]string{
	-1: "INVALID",
	0:  "MATCH",
	1:  "PRACTICE",
	2:  "TOURNAMENT",
	3:  "TUTORIAL",
}
var CSOTFLobby_LobbyType_value = map[string]int32{
	"INVALID":    -1,
	"MATCH":      0,
	"PRACTICE":   1,
	"TOURNAMENT": 2,
	"TUTORIAL":   3,
}

func (x CSOTFLobby_LobbyType) Enum() *CSOTFLobby_LobbyType {
	p := new(CSOTFLobby_LobbyType)
	*p = x
	return p
}
func (x CSOTFLobby_LobbyType) String() string {
	return proto.EnumName(CSOTFLobby_LobbyType_name, int32(x))
}
func (x *CSOTFLobby_LobbyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFLobby_LobbyType_value, data, "CSOTFLobby_LobbyType")
	if err != nil {
		return err
	}
	*x = CSOTFLobby_LobbyType(value)
	return nil
}

type CMsgGameServerMatchmakingStatus_PlayerConnectState int32

const (
	CMsgGameServerMatchmakingStatus_INVALID   CMsgGameServerMatchmakingStatus_PlayerConnectState = 0
	CMsgGameServerMatchmakingStatus_CONNECTED CMsgGameServerMatchmakingStatus_PlayerConnectState = 1
	CMsgGameServerMatchmakingStatus_RESERVED  CMsgGameServerMatchmakingStatus_PlayerConnectState = 2
)

var CMsgGameServerMatchmakingStatus_PlayerConnectState_name = map[int32]string{
	0: "INVALID",
	1: "CONNECTED",
	2: "RESERVED",
}
var CMsgGameServerMatchmakingStatus_PlayerConnectState_value = map[string]int32{
	"INVALID":   0,
	"CONNECTED": 1,
	"RESERVED":  2,
}

func (x CMsgGameServerMatchmakingStatus_PlayerConnectState) Enum() *CMsgGameServerMatchmakingStatus_PlayerConnectState {
	p := new(CMsgGameServerMatchmakingStatus_PlayerConnectState)
	*p = x
	return p
}
func (x CMsgGameServerMatchmakingStatus_PlayerConnectState) String() string {
	return proto.EnumName(CMsgGameServerMatchmakingStatus_PlayerConnectState_name, int32(x))
}
func (x *CMsgGameServerMatchmakingStatus_PlayerConnectState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerMatchmakingStatus_PlayerConnectState_value, data, "CMsgGameServerMatchmakingStatus_PlayerConnectState")
	if err != nil {
		return err
	}
	*x = CMsgGameServerMatchmakingStatus_PlayerConnectState(value)
	return nil
}

type CMsgGameServerMatchmakingStatus_Event int32

const (
	CMsgGameServerMatchmakingStatus_None               CMsgGameServerMatchmakingStatus_Event = 0
	CMsgGameServerMatchmakingStatus_MvMVictory         CMsgGameServerMatchmakingStatus_Event = 1
	CMsgGameServerMatchmakingStatus_MvMDefeat          CMsgGameServerMatchmakingStatus_Event = 2
	CMsgGameServerMatchmakingStatus_AcknowledgePlayers CMsgGameServerMatchmakingStatus_Event = 3
)

var CMsgGameServerMatchmakingStatus_Event_name = map[int32]string{
	0: "None",
	1: "MvMVictory",
	2: "MvMDefeat",
	3: "AcknowledgePlayers",
}
var CMsgGameServerMatchmakingStatus_Event_value = map[string]int32{
	"None":               0,
	"MvMVictory":         1,
	"MvMDefeat":          2,
	"AcknowledgePlayers": 3,
}

func (x CMsgGameServerMatchmakingStatus_Event) Enum() *CMsgGameServerMatchmakingStatus_Event {
	p := new(CMsgGameServerMatchmakingStatus_Event)
	*p = x
	return p
}
func (x CMsgGameServerMatchmakingStatus_Event) String() string {
	return proto.EnumName(CMsgGameServerMatchmakingStatus_Event_name, int32(x))
}
func (x *CMsgGameServerMatchmakingStatus_Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerMatchmakingStatus_Event_value, data, "CMsgGameServerMatchmakingStatus_Event")
	if err != nil {
		return err
	}
	*x = CMsgGameServerMatchmakingStatus_Event(value)
	return nil
}

type CMsgMvMVictoryInfo_GrantReason int32

const (
	CMsgMvMVictoryInfo_INVALID       CMsgMvMVictoryInfo_GrantReason = 0
	CMsgMvMVictoryInfo_BADGE_LEVELED CMsgMvMVictoryInfo_GrantReason = 1
	CMsgMvMVictoryInfo_SQUAD_SURPLUS CMsgMvMVictoryInfo_GrantReason = 2
	CMsgMvMVictoryInfo_MANN_UP       CMsgMvMVictoryInfo_GrantReason = 3
	CMsgMvMVictoryInfo_HELP_A_NOOB   CMsgMvMVictoryInfo_GrantReason = 4
)

var CMsgMvMVictoryInfo_GrantReason_name = map[int32]string{
	0: "INVALID",
	1: "BADGE_LEVELED",
	2: "SQUAD_SURPLUS",
	3: "MANN_UP",
	4: "HELP_A_NOOB",
}
var CMsgMvMVictoryInfo_GrantReason_value = map[string]int32{
	"INVALID":       0,
	"BADGE_LEVELED": 1,
	"SQUAD_SURPLUS": 2,
	"MANN_UP":       3,
	"HELP_A_NOOB":   4,
}

func (x CMsgMvMVictoryInfo_GrantReason) Enum() *CMsgMvMVictoryInfo_GrantReason {
	p := new(CMsgMvMVictoryInfo_GrantReason)
	*p = x
	return p
}
func (x CMsgMvMVictoryInfo_GrantReason) String() string {
	return proto.EnumName(CMsgMvMVictoryInfo_GrantReason_name, int32(x))
}
func (x *CMsgMvMVictoryInfo_GrantReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgMvMVictoryInfo_GrantReason_value, data, "CMsgMvMVictoryInfo_GrantReason")
	if err != nil {
		return err
	}
	*x = CMsgMvMVictoryInfo_GrantReason(value)
	return nil
}

type CMsgRemovePlayerFromLobby_RemoveReason int32

const (
	CMsgRemovePlayerFromLobby_VOTE_KICK  CMsgRemovePlayerFromLobby_RemoveReason = 0
	CMsgRemovePlayerFromLobby_IDLE_KICK  CMsgRemovePlayerFromLobby_RemoveReason = 1
	CMsgRemovePlayerFromLobby_ADMIN_KICK CMsgRemovePlayerFromLobby_RemoveReason = 2
)

var CMsgRemovePlayerFromLobby_RemoveReason_name = map[int32]string{
	0: "VOTE_KICK",
	1: "IDLE_KICK",
	2: "ADMIN_KICK",
}
var CMsgRemovePlayerFromLobby_RemoveReason_value = map[string]int32{
	"VOTE_KICK":  0,
	"IDLE_KICK":  1,
	"ADMIN_KICK": 2,
}

func (x CMsgRemovePlayerFromLobby_RemoveReason) Enum() *CMsgRemovePlayerFromLobby_RemoveReason {
	p := new(CMsgRemovePlayerFromLobby_RemoveReason)
	*p = x
	return p
}
func (x CMsgRemovePlayerFromLobby_RemoveReason) String() string {
	return proto.EnumName(CMsgRemovePlayerFromLobby_RemoveReason_name, int32(x))
}
func (x *CMsgRemovePlayerFromLobby_RemoveReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgRemovePlayerFromLobby_RemoveReason_value, data, "CMsgRemovePlayerFromLobby_RemoveReason")
	if err != nil {
		return err
	}
	*x = CMsgRemovePlayerFromLobby_RemoveReason(value)
	return nil
}

type CMsgTFGoldenWrenchBroadcast struct {
	WrenchNumber     *int32  `protobuf:"varint,1,opt,name=wrench_number" json:"wrench_number,omitempty"`
	Deleted          *bool   `protobuf:"varint,2,opt,name=deleted" json:"deleted,omitempty"`
	UserName         *string `protobuf:"bytes,3,opt,name=user_name" json:"user_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFGoldenWrenchBroadcast) Reset()         { *m = CMsgTFGoldenWrenchBroadcast{} }
func (m *CMsgTFGoldenWrenchBroadcast) String() string { return proto.CompactTextString(m) }
func (*CMsgTFGoldenWrenchBroadcast) ProtoMessage()    {}

func (m *CMsgTFGoldenWrenchBroadcast) GetWrenchNumber() int32 {
	if m != nil && m.WrenchNumber != nil {
		return *m.WrenchNumber
	}
	return 0
}

func (m *CMsgTFGoldenWrenchBroadcast) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return false
}

func (m *CMsgTFGoldenWrenchBroadcast) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

type CMsgTFSaxxyBroadcast struct {
	CategoryNumber   *int32  `protobuf:"varint,1,opt,name=category_number" json:"category_number,omitempty"`
	UserName         *string `protobuf:"bytes,2,opt,name=user_name" json:"user_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFSaxxyBroadcast) Reset()         { *m = CMsgTFSaxxyBroadcast{} }
func (m *CMsgTFSaxxyBroadcast) String() string { return proto.CompactTextString(m) }
func (*CMsgTFSaxxyBroadcast) ProtoMessage()    {}

func (m *CMsgTFSaxxyBroadcast) GetCategoryNumber() int32 {
	if m != nil && m.CategoryNumber != nil {
		return *m.CategoryNumber
	}
	return 0
}

func (m *CMsgTFSaxxyBroadcast) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

type CMsgGCTFSpecificItemBroadcast struct {
	ItemDefIndex     *uint32 `protobuf:"varint,1,opt,name=item_def_index" json:"item_def_index,omitempty"`
	WasDestruction   *bool   `protobuf:"varint,2,opt,name=was_destruction" json:"was_destruction,omitempty"`
	UserName         *string `protobuf:"bytes,3,opt,name=user_name" json:"user_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCTFSpecificItemBroadcast) Reset()         { *m = CMsgGCTFSpecificItemBroadcast{} }
func (m *CMsgGCTFSpecificItemBroadcast) String() string { return proto.CompactTextString(m) }
func (*CMsgGCTFSpecificItemBroadcast) ProtoMessage()    {}

func (m *CMsgGCTFSpecificItemBroadcast) GetItemDefIndex() uint32 {
	if m != nil && m.ItemDefIndex != nil {
		return *m.ItemDefIndex
	}
	return 0
}

func (m *CMsgGCTFSpecificItemBroadcast) GetWasDestruction() bool {
	if m != nil && m.WasDestruction != nil {
		return *m.WasDestruction
	}
	return false
}

func (m *CMsgGCTFSpecificItemBroadcast) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

type CSOTFDuelSummary struct {
	AccountId         *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	DuelWins          *uint32 `protobuf:"varint,2,opt,name=duel_wins" json:"duel_wins,omitempty"`
	DuelLosses        *uint32 `protobuf:"varint,3,opt,name=duel_losses" json:"duel_losses,omitempty"`
	LastDuelAccountId *uint32 `protobuf:"varint,4,opt,name=last_duel_account_id" json:"last_duel_account_id,omitempty"`
	LastDuelTimestamp *uint32 `protobuf:"varint,5,opt,name=last_duel_timestamp" json:"last_duel_timestamp,omitempty"`
	LastDuelStatus    *uint32 `protobuf:"varint,6,opt,name=last_duel_status" json:"last_duel_status,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFDuelSummary) Reset()         { *m = CSOTFDuelSummary{} }
func (m *CSOTFDuelSummary) String() string { return proto.CompactTextString(m) }
func (*CSOTFDuelSummary) ProtoMessage()    {}

func (m *CSOTFDuelSummary) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOTFDuelSummary) GetDuelWins() uint32 {
	if m != nil && m.DuelWins != nil {
		return *m.DuelWins
	}
	return 0
}

func (m *CSOTFDuelSummary) GetDuelLosses() uint32 {
	if m != nil && m.DuelLosses != nil {
		return *m.DuelLosses
	}
	return 0
}

func (m *CSOTFDuelSummary) GetLastDuelAccountId() uint32 {
	if m != nil && m.LastDuelAccountId != nil {
		return *m.LastDuelAccountId
	}
	return 0
}

func (m *CSOTFDuelSummary) GetLastDuelTimestamp() uint32 {
	if m != nil && m.LastDuelTimestamp != nil {
		return *m.LastDuelTimestamp
	}
	return 0
}

func (m *CSOTFDuelSummary) GetLastDuelStatus() uint32 {
	if m != nil && m.LastDuelStatus != nil {
		return *m.LastDuelStatus
	}
	return 0
}

type CSOTFMapContribution struct {
	AccountId         *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	DefIndex          *uint32 `protobuf:"varint,2,opt,name=def_index" json:"def_index,omitempty"`
	ContributionLevel *uint32 `protobuf:"varint,3,opt,name=contribution_level" json:"contribution_level,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFMapContribution) Reset()         { *m = CSOTFMapContribution{} }
func (m *CSOTFMapContribution) String() string { return proto.CompactTextString(m) }
func (*CSOTFMapContribution) ProtoMessage()    {}

func (m *CSOTFMapContribution) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOTFMapContribution) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CSOTFMapContribution) GetContributionLevel() uint32 {
	if m != nil && m.ContributionLevel != nil {
		return *m.ContributionLevel
	}
	return 0
}

type CMsgTFVoteKickBanPlayer struct {
	AccountIdSubject *uint32 `protobuf:"varint,1,opt,name=account_id_subject" json:"account_id_subject,omitempty"`
	KickReason       *uint32 `protobuf:"varint,2,opt,name=kick_reason" json:"kick_reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFVoteKickBanPlayer) Reset()         { *m = CMsgTFVoteKickBanPlayer{} }
func (m *CMsgTFVoteKickBanPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgTFVoteKickBanPlayer) ProtoMessage()    {}

func (m *CMsgTFVoteKickBanPlayer) GetAccountIdSubject() uint32 {
	if m != nil && m.AccountIdSubject != nil {
		return *m.AccountIdSubject
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayer) GetKickReason() uint32 {
	if m != nil && m.KickReason != nil {
		return *m.KickReason
	}
	return 0
}

type CMsgTFVoteKickBanPlayerResult struct {
	AccountIdInitiator *uint32 `protobuf:"varint,1,opt,name=account_id_initiator" json:"account_id_initiator,omitempty"`
	AccountIdSubject   *uint32 `protobuf:"varint,2,opt,name=account_id_subject" json:"account_id_subject,omitempty"`
	KickReason         *uint32 `protobuf:"varint,3,opt,name=kick_reason" json:"kick_reason,omitempty"`
	KickSuccessful     *bool   `protobuf:"varint,4,opt,name=kick_successful" json:"kick_successful,omitempty"`
	NumYesVotes        *uint32 `protobuf:"varint,5,opt,name=num_yes_votes" json:"num_yes_votes,omitempty"`
	NumNoVotes         *uint32 `protobuf:"varint,6,opt,name=num_no_votes" json:"num_no_votes,omitempty"`
	NumPossibleVotes   *uint32 `protobuf:"varint,7,opt,name=num_possible_votes" json:"num_possible_votes,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgTFVoteKickBanPlayerResult) Reset()         { *m = CMsgTFVoteKickBanPlayerResult{} }
func (m *CMsgTFVoteKickBanPlayerResult) String() string { return proto.CompactTextString(m) }
func (*CMsgTFVoteKickBanPlayerResult) ProtoMessage()    {}

func (m *CMsgTFVoteKickBanPlayerResult) GetAccountIdInitiator() uint32 {
	if m != nil && m.AccountIdInitiator != nil {
		return *m.AccountIdInitiator
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetAccountIdSubject() uint32 {
	if m != nil && m.AccountIdSubject != nil {
		return *m.AccountIdSubject
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetKickReason() uint32 {
	if m != nil && m.KickReason != nil {
		return *m.KickReason
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetKickSuccessful() bool {
	if m != nil && m.KickSuccessful != nil {
		return *m.KickSuccessful
	}
	return false
}

func (m *CMsgTFVoteKickBanPlayerResult) GetNumYesVotes() uint32 {
	if m != nil && m.NumYesVotes != nil {
		return *m.NumYesVotes
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetNumNoVotes() uint32 {
	if m != nil && m.NumNoVotes != nil {
		return *m.NumNoVotes
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetNumPossibleVotes() uint32 {
	if m != nil && m.NumPossibleVotes != nil {
		return *m.NumPossibleVotes
	}
	return 0
}

type CMsgTFFreeTrialChooseMostHelpfulFriend struct {
	AccountIdFriend  *uint32 `protobuf:"varint,1,opt,name=account_id_friend" json:"account_id_friend,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFFreeTrialChooseMostHelpfulFriend) Reset() {
	*m = CMsgTFFreeTrialChooseMostHelpfulFriend{}
}
func (m *CMsgTFFreeTrialChooseMostHelpfulFriend) String() string { return proto.CompactTextString(m) }
func (*CMsgTFFreeTrialChooseMostHelpfulFriend) ProtoMessage()    {}

func (m *CMsgTFFreeTrialChooseMostHelpfulFriend) GetAccountIdFriend() uint32 {
	if m != nil && m.AccountIdFriend != nil {
		return *m.AccountIdFriend
	}
	return 0
}

type CMsgTFRequestTF2Friends struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFRequestTF2Friends) Reset()         { *m = CMsgTFRequestTF2Friends{} }
func (m *CMsgTFRequestTF2Friends) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestTF2Friends) ProtoMessage()    {}

func (m *CMsgTFRequestTF2Friends) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgTFRequestTF2FriendsResponse struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFRequestTF2FriendsResponse) Reset()         { *m = CMsgTFRequestTF2FriendsResponse{} }
func (m *CMsgTFRequestTF2FriendsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestTF2FriendsResponse) ProtoMessage()    {}

func (m *CMsgTFRequestTF2FriendsResponse) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CSOTFPlayerInfo struct {
	NumNewUsersHelped *uint32 `protobuf:"varint,1,opt,name=num_new_users_helped" json:"num_new_users_helped,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFPlayerInfo) Reset()         { *m = CSOTFPlayerInfo{} }
func (m *CSOTFPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CSOTFPlayerInfo) ProtoMessage()    {}

func (m *CSOTFPlayerInfo) GetNumNewUsersHelped() uint32 {
	if m != nil && m.NumNewUsersHelped != nil {
		return *m.NumNewUsersHelped
	}
	return 0
}

type CMsgTFThankedBySomeone struct {
	ThankerSteamId   *uint64 `protobuf:"varint,1,opt,name=thanker_steam_id" json:"thanker_steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFThankedBySomeone) Reset()         { *m = CMsgTFThankedBySomeone{} }
func (m *CMsgTFThankedBySomeone) String() string { return proto.CompactTextString(m) }
func (*CMsgTFThankedBySomeone) ProtoMessage()    {}

func (m *CMsgTFThankedBySomeone) GetThankerSteamId() uint64 {
	if m != nil && m.ThankerSteamId != nil {
		return *m.ThankerSteamId
	}
	return 0
}

type CMsgTFThankedSomeone struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFThankedSomeone) Reset()         { *m = CMsgTFThankedSomeone{} }
func (m *CMsgTFThankedSomeone) String() string { return proto.CompactTextString(m) }
func (*CMsgTFThankedSomeone) ProtoMessage()    {}

type CMsgTFFreeTrialConvertedToPremium struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFFreeTrialConvertedToPremium) Reset()         { *m = CMsgTFFreeTrialConvertedToPremium{} }
func (m *CMsgTFFreeTrialConvertedToPremium) String() string { return proto.CompactTextString(m) }
func (*CMsgTFFreeTrialConvertedToPremium) ProtoMessage()    {}

type CMsgSaxxyAwarded struct {
	Category         *uint32  `protobuf:"varint,1,opt,name=category" json:"category,omitempty"`
	WinnerNames      []string `protobuf:"bytes,2,rep,name=winner_names" json:"winner_names,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSaxxyAwarded) Reset()         { *m = CMsgSaxxyAwarded{} }
func (m *CMsgSaxxyAwarded) String() string { return proto.CompactTextString(m) }
func (*CMsgSaxxyAwarded) ProtoMessage()    {}

func (m *CMsgSaxxyAwarded) GetCategory() uint32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

func (m *CMsgSaxxyAwarded) GetWinnerNames() []string {
	if m != nil {
		return m.WinnerNames
	}
	return nil
}

type CMsgReplaySubmitContestEntry struct {
	YoutubeUrl       *string `protobuf:"bytes,1,opt,name=youtube_url" json:"youtube_url,omitempty"`
	Category         *uint32 `protobuf:"varint,2,opt,name=category" json:"category,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgReplaySubmitContestEntry) Reset()         { *m = CMsgReplaySubmitContestEntry{} }
func (m *CMsgReplaySubmitContestEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgReplaySubmitContestEntry) ProtoMessage()    {}

func (m *CMsgReplaySubmitContestEntry) GetYoutubeUrl() string {
	if m != nil && m.YoutubeUrl != nil {
		return *m.YoutubeUrl
	}
	return ""
}

func (m *CMsgReplaySubmitContestEntry) GetCategory() uint32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

type CMsgReplaySubmitContestEntryResponse struct {
	Success          *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgReplaySubmitContestEntryResponse) Reset()         { *m = CMsgReplaySubmitContestEntryResponse{} }
func (m *CMsgReplaySubmitContestEntryResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgReplaySubmitContestEntryResponse) ProtoMessage()    {}

func (m *CMsgReplaySubmitContestEntryResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CReplayCachedContestData struct {
	Timestamp        *uint32  `protobuf:"fixed32,1,opt,name=timestamp" json:"timestamp,omitempty"`
	NumVotesLastDay  *uint32  `protobuf:"varint,2,opt,name=num_votes_last_day" json:"num_votes_last_day,omitempty"`
	VideoEntryIds    []uint32 `protobuf:"varint,3,rep,name=video_entry_ids" json:"video_entry_ids,omitempty"`
	NumFlagsLastDay  *uint32  `protobuf:"varint,4,opt,name=num_flags_last_day" json:"num_flags_last_day,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CReplayCachedContestData) Reset()         { *m = CReplayCachedContestData{} }
func (m *CReplayCachedContestData) String() string { return proto.CompactTextString(m) }
func (*CReplayCachedContestData) ProtoMessage()    {}

func (m *CReplayCachedContestData) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CReplayCachedContestData) GetNumVotesLastDay() uint32 {
	if m != nil && m.NumVotesLastDay != nil {
		return *m.NumVotesLastDay
	}
	return 0
}

func (m *CReplayCachedContestData) GetVideoEntryIds() []uint32 {
	if m != nil {
		return m.VideoEntryIds
	}
	return nil
}

func (m *CReplayCachedContestData) GetNumFlagsLastDay() uint32 {
	if m != nil && m.NumFlagsLastDay != nil {
		return *m.NumFlagsLastDay
	}
	return 0
}

type CMsgTFCoaching_AddToCoaches struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFCoaching_AddToCoaches) Reset()         { *m = CMsgTFCoaching_AddToCoaches{} }
func (m *CMsgTFCoaching_AddToCoaches) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_AddToCoaches) ProtoMessage()    {}

type CMsgTFCoaching_RemoveFromCoaches struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFCoaching_RemoveFromCoaches) Reset()         { *m = CMsgTFCoaching_RemoveFromCoaches{} }
func (m *CMsgTFCoaching_RemoveFromCoaches) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_RemoveFromCoaches) ProtoMessage()    {}

type CMsgTFCoaching_FindCoach struct {
	AccountIdFriendAsCoach *uint32 `protobuf:"varint,1,opt,name=account_id_friend_as_coach" json:"account_id_friend_as_coach,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgTFCoaching_FindCoach) Reset()         { *m = CMsgTFCoaching_FindCoach{} }
func (m *CMsgTFCoaching_FindCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_FindCoach) ProtoMessage()    {}

func (m *CMsgTFCoaching_FindCoach) GetAccountIdFriendAsCoach() uint32 {
	if m != nil && m.AccountIdFriendAsCoach != nil {
		return *m.AccountIdFriendAsCoach
	}
	return 0
}

type CMsgTFCoaching_FindCoachResponse struct {
	FoundCoach       *bool   `protobuf:"varint,1,opt,name=found_coach" json:"found_coach,omitempty"`
	NumLikes         *uint32 `protobuf:"varint,2,opt,name=num_likes" json:"num_likes,omitempty"`
	CoachName        *string `protobuf:"bytes,3,opt,name=coach_name" json:"coach_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_FindCoachResponse) Reset()         { *m = CMsgTFCoaching_FindCoachResponse{} }
func (m *CMsgTFCoaching_FindCoachResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_FindCoachResponse) ProtoMessage()    {}

func (m *CMsgTFCoaching_FindCoachResponse) GetFoundCoach() bool {
	if m != nil && m.FoundCoach != nil {
		return *m.FoundCoach
	}
	return false
}

func (m *CMsgTFCoaching_FindCoachResponse) GetNumLikes() uint32 {
	if m != nil && m.NumLikes != nil {
		return *m.NumLikes
	}
	return 0
}

func (m *CMsgTFCoaching_FindCoachResponse) GetCoachName() string {
	if m != nil && m.CoachName != nil {
		return *m.CoachName
	}
	return ""
}

type CMsgTFCoaching_AskCoach struct {
	AccountIdStudent *uint32 `protobuf:"varint,1,opt,name=account_id_student" json:"account_id_student,omitempty"`
	StudentIsFriend  *bool   `protobuf:"varint,2,opt,name=student_is_friend" json:"student_is_friend,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_AskCoach) Reset()         { *m = CMsgTFCoaching_AskCoach{} }
func (m *CMsgTFCoaching_AskCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_AskCoach) ProtoMessage()    {}

func (m *CMsgTFCoaching_AskCoach) GetAccountIdStudent() uint32 {
	if m != nil && m.AccountIdStudent != nil {
		return *m.AccountIdStudent
	}
	return 0
}

func (m *CMsgTFCoaching_AskCoach) GetStudentIsFriend() bool {
	if m != nil && m.StudentIsFriend != nil {
		return *m.StudentIsFriend
	}
	return false
}

type CMsgTFCoaching_AskCoachResponse struct {
	AcceptCoachingAssignment *bool  `protobuf:"varint,1,opt,name=accept_coaching_assignment" json:"accept_coaching_assignment,omitempty"`
	XXX_unrecognized         []byte `json:"-"`
}

func (m *CMsgTFCoaching_AskCoachResponse) Reset()         { *m = CMsgTFCoaching_AskCoachResponse{} }
func (m *CMsgTFCoaching_AskCoachResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_AskCoachResponse) ProtoMessage()    {}

func (m *CMsgTFCoaching_AskCoachResponse) GetAcceptCoachingAssignment() bool {
	if m != nil && m.AcceptCoachingAssignment != nil {
		return *m.AcceptCoachingAssignment
	}
	return false
}

type CMsgTFCoaching_CoachJoinGame struct {
	JoinGame         *bool   `protobuf:"varint,1,opt,name=join_game" json:"join_game,omitempty"`
	ServerAddress    *uint32 `protobuf:"varint,2,opt,name=server_address" json:"server_address,omitempty"`
	ServerPort       *uint32 `protobuf:"varint,3,opt,name=server_port" json:"server_port,omitempty"`
	AccountIdStudent *uint32 `protobuf:"varint,4,opt,name=account_id_student" json:"account_id_student,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_CoachJoinGame) Reset()         { *m = CMsgTFCoaching_CoachJoinGame{} }
func (m *CMsgTFCoaching_CoachJoinGame) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_CoachJoinGame) ProtoMessage()    {}

func (m *CMsgTFCoaching_CoachJoinGame) GetJoinGame() bool {
	if m != nil && m.JoinGame != nil {
		return *m.JoinGame
	}
	return false
}

func (m *CMsgTFCoaching_CoachJoinGame) GetServerAddress() uint32 {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return 0
}

func (m *CMsgTFCoaching_CoachJoinGame) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgTFCoaching_CoachJoinGame) GetAccountIdStudent() uint32 {
	if m != nil && m.AccountIdStudent != nil {
		return *m.AccountIdStudent
	}
	return 0
}

type CMsgTFCoaching_CoachJoining struct {
	AccountIdCoach   *uint32 `protobuf:"varint,1,opt,name=account_id_coach" json:"account_id_coach,omitempty"`
	AccountIdStudent *uint32 `protobuf:"varint,2,opt,name=account_id_student" json:"account_id_student,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_CoachJoining) Reset()         { *m = CMsgTFCoaching_CoachJoining{} }
func (m *CMsgTFCoaching_CoachJoining) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_CoachJoining) ProtoMessage()    {}

func (m *CMsgTFCoaching_CoachJoining) GetAccountIdCoach() uint32 {
	if m != nil && m.AccountIdCoach != nil {
		return *m.AccountIdCoach
	}
	return 0
}

func (m *CMsgTFCoaching_CoachJoining) GetAccountIdStudent() uint32 {
	if m != nil && m.AccountIdStudent != nil {
		return *m.AccountIdStudent
	}
	return 0
}

type CMsgTFCoaching_CoachJoined struct {
	AccountIdCoach   *uint32 `protobuf:"varint,1,opt,name=account_id_coach" json:"account_id_coach,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_CoachJoined) Reset()         { *m = CMsgTFCoaching_CoachJoined{} }
func (m *CMsgTFCoaching_CoachJoined) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_CoachJoined) ProtoMessage()    {}

func (m *CMsgTFCoaching_CoachJoined) GetAccountIdCoach() uint32 {
	if m != nil && m.AccountIdCoach != nil {
		return *m.AccountIdCoach
	}
	return 0
}

type CMsgTFCoaching_LikeCurrentCoach struct {
	LikeCoach        *bool  `protobuf:"varint,1,opt,name=like_coach" json:"like_coach,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFCoaching_LikeCurrentCoach) Reset()         { *m = CMsgTFCoaching_LikeCurrentCoach{} }
func (m *CMsgTFCoaching_LikeCurrentCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_LikeCurrentCoach) ProtoMessage()    {}

func (m *CMsgTFCoaching_LikeCurrentCoach) GetLikeCoach() bool {
	if m != nil && m.LikeCoach != nil {
		return *m.LikeCoach
	}
	return false
}

type CMsgTFCoaching_RemoveCurrentCoach struct {
	AccountIdCoach   *uint32 `protobuf:"varint,1,opt,name=account_id_coach" json:"account_id_coach,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_RemoveCurrentCoach) Reset()         { *m = CMsgTFCoaching_RemoveCurrentCoach{} }
func (m *CMsgTFCoaching_RemoveCurrentCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_RemoveCurrentCoach) ProtoMessage()    {}

func (m *CMsgTFCoaching_RemoveCurrentCoach) GetAccountIdCoach() uint32 {
	if m != nil && m.AccountIdCoach != nil {
		return *m.AccountIdCoach
	}
	return 0
}

type CMsgTFQuickplay_ScoreServers struct {
	Servers          []*CMsgTFQuickplay_ScoreServers_ServerInfo `protobuf:"bytes,1,rep,name=servers" json:"servers,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServers) Reset()         { *m = CMsgTFQuickplay_ScoreServers{} }
func (m *CMsgTFQuickplay_ScoreServers) String() string { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_ScoreServers) ProtoMessage()    {}

func (m *CMsgTFQuickplay_ScoreServers) GetServers() []*CMsgTFQuickplay_ScoreServers_ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

type CMsgTFQuickplay_ScoreServers_ServerInfo struct {
	ServerAddress    *uint32  `protobuf:"varint,1,opt,name=server_address" json:"server_address,omitempty"`
	ServerPort       *uint32  `protobuf:"varint,2,opt,name=server_port" json:"server_port,omitempty"`
	NumUsers         *uint32  `protobuf:"varint,3,opt,name=num_users" json:"num_users,omitempty"`
	SteamId          *uint64  `protobuf:"varint,4,opt,name=steam_id" json:"steam_id,omitempty"`
	MaxUsers         *uint32  `protobuf:"varint,5,opt,name=max_users" json:"max_users,omitempty"`
	UserScore        *float32 `protobuf:"fixed32,6,opt,name=user_score" json:"user_score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) Reset() {
	*m = CMsgTFQuickplay_ScoreServers_ServerInfo{}
}
func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_ScoreServers_ServerInfo) ProtoMessage()    {}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetServerAddress() uint32 {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetNumUsers() uint32 {
	if m != nil && m.NumUsers != nil {
		return *m.NumUsers
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetMaxUsers() uint32 {
	if m != nil && m.MaxUsers != nil {
		return *m.MaxUsers
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetUserScore() float32 {
	if m != nil && m.UserScore != nil {
		return *m.UserScore
	}
	return 0
}

type CMsgTFQuickplay_ScoreServersResponse struct {
	Servers          []*CMsgTFQuickplay_ScoreServersResponse_ServerInfo `protobuf:"bytes,1,rep,name=servers" json:"servers,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServersResponse) Reset()         { *m = CMsgTFQuickplay_ScoreServersResponse{} }
func (m *CMsgTFQuickplay_ScoreServersResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_ScoreServersResponse) ProtoMessage()    {}

func (m *CMsgTFQuickplay_ScoreServersResponse) GetServers() []*CMsgTFQuickplay_ScoreServersResponse_ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

type CMsgTFQuickplay_ScoreServersResponse_ServerInfo struct {
	ServerAddress    *uint32  `protobuf:"varint,1,opt,name=server_address" json:"server_address,omitempty"`
	ServerPort       *uint32  `protobuf:"varint,2,opt,name=server_port" json:"server_port,omitempty"`
	TotalScore       *float32 `protobuf:"fixed32,3,opt,name=total_score" json:"total_score,omitempty"`
	SteamId          *uint64  `protobuf:"varint,4,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) Reset() {
	*m = CMsgTFQuickplay_ScoreServersResponse_ServerInfo{}
}
func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgTFQuickplay_ScoreServersResponse_ServerInfo) ProtoMessage() {}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetServerAddress() uint32 {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetTotalScore() float32 {
	if m != nil && m.TotalScore != nil {
		return *m.TotalScore
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgTFQuickplay_PlayerJoining struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFQuickplay_PlayerJoining) Reset()         { *m = CMsgTFQuickplay_PlayerJoining{} }
func (m *CMsgTFQuickplay_PlayerJoining) String() string { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_PlayerJoining) ProtoMessage()    {}

func (m *CMsgTFQuickplay_PlayerJoining) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGC_GameServer_LevelInfo struct {
	LevelLoaded      *bool   `protobuf:"varint,1,opt,name=level_loaded" json:"level_loaded,omitempty"`
	LevelName        *string `protobuf:"bytes,2,opt,name=level_name" json:"level_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_LevelInfo) Reset()         { *m = CMsgGC_GameServer_LevelInfo{} }
func (m *CMsgGC_GameServer_LevelInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_LevelInfo) ProtoMessage()    {}

func (m *CMsgGC_GameServer_LevelInfo) GetLevelLoaded() bool {
	if m != nil && m.LevelLoaded != nil {
		return *m.LevelLoaded
	}
	return false
}

func (m *CMsgGC_GameServer_LevelInfo) GetLevelName() string {
	if m != nil && m.LevelName != nil {
		return *m.LevelName
	}
	return ""
}

type CMsgGC_GameServer_AuthChallenge struct {
	ChallengeString  *string `protobuf:"bytes,1,opt,name=challenge_string" json:"challenge_string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AuthChallenge) Reset()         { *m = CMsgGC_GameServer_AuthChallenge{} }
func (m *CMsgGC_GameServer_AuthChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AuthChallenge) ProtoMessage()    {}

func (m *CMsgGC_GameServer_AuthChallenge) GetChallengeString() string {
	if m != nil && m.ChallengeString != nil {
		return *m.ChallengeString
	}
	return ""
}

type CMsgGC_GameServer_AuthResult struct {
	Authenticated           *bool   `protobuf:"varint,1,opt,name=authenticated" json:"authenticated,omitempty"`
	GameServerStanding      *int32  `protobuf:"varint,2,opt,name=game_server_standing" json:"game_server_standing,omitempty"`
	GameServerStandingTrend *int32  `protobuf:"varint,3,opt,name=game_server_standing_trend" json:"game_server_standing_trend,omitempty"`
	IsValveServer           *bool   `protobuf:"varint,4,opt,name=is_valve_server" json:"is_valve_server,omitempty"`
	Message                 *string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AuthResult) Reset()         { *m = CMsgGC_GameServer_AuthResult{} }
func (m *CMsgGC_GameServer_AuthResult) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AuthResult) ProtoMessage()    {}

func (m *CMsgGC_GameServer_AuthResult) GetAuthenticated() bool {
	if m != nil && m.Authenticated != nil {
		return *m.Authenticated
	}
	return false
}

func (m *CMsgGC_GameServer_AuthResult) GetGameServerStanding() int32 {
	if m != nil && m.GameServerStanding != nil {
		return *m.GameServerStanding
	}
	return 0
}

func (m *CMsgGC_GameServer_AuthResult) GetGameServerStandingTrend() int32 {
	if m != nil && m.GameServerStandingTrend != nil {
		return *m.GameServerStandingTrend
	}
	return 0
}

func (m *CMsgGC_GameServer_AuthResult) GetIsValveServer() bool {
	if m != nil && m.IsValveServer != nil {
		return *m.IsValveServer
	}
	return false
}

func (m *CMsgGC_GameServer_AuthResult) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgGC_GameServer_AuthChallengeResponse struct {
	GameServerAccountId   *uint32 `protobuf:"varint,1,opt,name=game_server_account_id" json:"game_server_account_id,omitempty"`
	HashedChallengeString []byte  `protobuf:"bytes,2,opt,name=hashed_challenge_string" json:"hashed_challenge_string,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AuthChallengeResponse) Reset() {
	*m = CMsgGC_GameServer_AuthChallengeResponse{}
}
func (m *CMsgGC_GameServer_AuthChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AuthChallengeResponse) ProtoMessage()    {}

func (m *CMsgGC_GameServer_AuthChallengeResponse) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_AuthChallengeResponse) GetHashedChallengeString() []byte {
	if m != nil {
		return m.HashedChallengeString
	}
	return nil
}

type CMsgGC_GameServer_CreateIdentity struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_CreateIdentity) Reset()         { *m = CMsgGC_GameServer_CreateIdentity{} }
func (m *CMsgGC_GameServer_CreateIdentity) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_CreateIdentity) ProtoMessage()    {}

func (m *CMsgGC_GameServer_CreateIdentity) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGC_GameServer_CreateIdentityResponse struct {
	AccountCreated          *bool                                             `protobuf:"varint,1,opt,name=account_created" json:"account_created,omitempty"`
	GameServerAccountId     *uint32                                           `protobuf:"varint,2,opt,name=game_server_account_id" json:"game_server_account_id,omitempty"`
	GameServerIdentityToken *string                                           `protobuf:"bytes,3,opt,name=game_server_identity_token" json:"game_server_identity_token,omitempty"`
	Status                  *CMsgGC_GameServer_CreateIdentityResponse_EStatus `protobuf:"varint,4,opt,name=status,enum=CMsgGC_GameServer_CreateIdentityResponse_EStatus,def=0" json:"status,omitempty"`
	XXX_unrecognized        []byte                                            `json:"-"`
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) Reset() {
	*m = CMsgGC_GameServer_CreateIdentityResponse{}
}
func (m *CMsgGC_GameServer_CreateIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_CreateIdentityResponse) ProtoMessage()    {}

const Default_CMsgGC_GameServer_CreateIdentityResponse_Status CMsgGC_GameServer_CreateIdentityResponse_EStatus = CMsgGC_GameServer_CreateIdentityResponse_kStatus_GenericFailure

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetAccountCreated() bool {
	if m != nil && m.AccountCreated != nil {
		return *m.AccountCreated
	}
	return false
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetGameServerIdentityToken() string {
	if m != nil && m.GameServerIdentityToken != nil {
		return *m.GameServerIdentityToken
	}
	return ""
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetStatus() CMsgGC_GameServer_CreateIdentityResponse_EStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_CMsgGC_GameServer_CreateIdentityResponse_Status
}

type CMsgGC_GameServer_List struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_List) Reset()         { *m = CMsgGC_GameServer_List{} }
func (m *CMsgGC_GameServer_List) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_List) ProtoMessage()    {}

func (m *CMsgGC_GameServer_List) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGC_GameServer_ListResponse struct {
	OwnedGameServers []*CMsgGC_GameServer_ListResponse_GameServerIdentity `protobuf:"bytes,1,rep,name=owned_game_servers" json:"owned_game_servers,omitempty"`
	XXX_unrecognized []byte                                               `json:"-"`
}

func (m *CMsgGC_GameServer_ListResponse) Reset()         { *m = CMsgGC_GameServer_ListResponse{} }
func (m *CMsgGC_GameServer_ListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ListResponse) ProtoMessage()    {}

func (m *CMsgGC_GameServer_ListResponse) GetOwnedGameServers() []*CMsgGC_GameServer_ListResponse_GameServerIdentity {
	if m != nil {
		return m.OwnedGameServers
	}
	return nil
}

type CMsgGC_GameServer_ListResponse_GameServerIdentity struct {
	GameServerAccountId     *uint32 `protobuf:"varint,1,opt,name=game_server_account_id" json:"game_server_account_id,omitempty"`
	GameServerIdentityToken *string `protobuf:"bytes,2,opt,name=game_server_identity_token" json:"game_server_identity_token,omitempty"`
	GameServerStanding      *int32  `protobuf:"varint,3,opt,name=game_server_standing" json:"game_server_standing,omitempty"`
	GameServerStandingTrend *int32  `protobuf:"varint,4,opt,name=game_server_standing_trend" json:"game_server_standing_trend,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) Reset() {
	*m = CMsgGC_GameServer_ListResponse_GameServerIdentity{}
}
func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_ListResponse_GameServerIdentity) ProtoMessage() {}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerIdentityToken() string {
	if m != nil && m.GameServerIdentityToken != nil {
		return *m.GameServerIdentityToken
	}
	return ""
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerStanding() int32 {
	if m != nil && m.GameServerStanding != nil {
		return *m.GameServerStanding
	}
	return 0
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerStandingTrend() int32 {
	if m != nil && m.GameServerStandingTrend != nil {
		return *m.GameServerStandingTrend
	}
	return 0
}

type CMsgGC_GameServer_ResetIdentity struct {
	GameServerAccountId *uint32 `protobuf:"varint,1,opt,name=game_server_account_id" json:"game_server_account_id,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_ResetIdentity) Reset()         { *m = CMsgGC_GameServer_ResetIdentity{} }
func (m *CMsgGC_GameServer_ResetIdentity) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ResetIdentity) ProtoMessage()    {}

func (m *CMsgGC_GameServer_ResetIdentity) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

type CMsgGC_GameServer_ResetIdentityResponse struct {
	GameServerIdentityTokenReset *bool   `protobuf:"varint,1,opt,name=game_server_identity_token_reset" json:"game_server_identity_token_reset,omitempty"`
	GameServerAccountId          *uint32 `protobuf:"varint,2,opt,name=game_server_account_id" json:"game_server_account_id,omitempty"`
	GameServerIdentityToken      *string `protobuf:"bytes,3,opt,name=game_server_identity_token" json:"game_server_identity_token,omitempty"`
	XXX_unrecognized             []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) Reset() {
	*m = CMsgGC_GameServer_ResetIdentityResponse{}
}
func (m *CMsgGC_GameServer_ResetIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ResetIdentityResponse) ProtoMessage()    {}

func (m *CMsgGC_GameServer_ResetIdentityResponse) GetGameServerIdentityTokenReset() bool {
	if m != nil && m.GameServerIdentityTokenReset != nil {
		return *m.GameServerIdentityTokenReset
	}
	return false
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) GetGameServerIdentityToken() string {
	if m != nil && m.GameServerIdentityToken != nil {
		return *m.GameServerIdentityToken
	}
	return ""
}

type CMsgGC_GameServer_AckPolicy struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_GameServer_AckPolicy) Reset()         { *m = CMsgGC_GameServer_AckPolicy{} }
func (m *CMsgGC_GameServer_AckPolicy) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AckPolicy) ProtoMessage()    {}

type CMsgGC_GameServer_AckPolicyResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AckPolicyResponse) Reset()         { *m = CMsgGC_GameServer_AckPolicyResponse{} }
func (m *CMsgGC_GameServer_AckPolicyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AckPolicyResponse) ProtoMessage()    {}

func (m *CMsgGC_GameServer_AckPolicyResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgGC_GameServer_AckPolicyResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgGC_Client_UseServerModificationItem struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_Client_UseServerModificationItem) Reset() {
	*m = CMsgGC_Client_UseServerModificationItem{}
}
func (m *CMsgGC_Client_UseServerModificationItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Client_UseServerModificationItem) ProtoMessage()    {}

func (m *CMsgGC_Client_UseServerModificationItem) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgGC_Client_UseServerModificationItem_Response struct {
	ResponseCode     *CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse `protobuf:"varint,1,opt,name=response_code,enum=CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse,def=1" json:"response_code,omitempty"`
	XXX_unrecognized []byte                                                                            `json:"-"`
}

func (m *CMsgGC_Client_UseServerModificationItem_Response) Reset() {
	*m = CMsgGC_Client_UseServerModificationItem_Response{}
}
func (m *CMsgGC_Client_UseServerModificationItem_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_Client_UseServerModificationItem_Response) ProtoMessage() {}

const Default_CMsgGC_Client_UseServerModificationItem_Response_ResponseCode CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_AlreadyInUse

func (m *CMsgGC_Client_UseServerModificationItem_Response) GetResponseCode() CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return Default_CMsgGC_Client_UseServerModificationItem_Response_ResponseCode
}

type CMsgGC_GameServer_UseServerModificationItem struct {
	ModificationType *EServerModificationItemType `protobuf:"varint,1,opt,name=modification_type,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_GameServer_UseServerModificationItem) Reset() {
	*m = CMsgGC_GameServer_UseServerModificationItem{}
}
func (m *CMsgGC_GameServer_UseServerModificationItem) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_UseServerModificationItem) ProtoMessage() {}

const Default_CMsgGC_GameServer_UseServerModificationItem_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween

func (m *CMsgGC_GameServer_UseServerModificationItem) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_UseServerModificationItem_ModificationType
}

type CMsgGC_GameServer_UseServerModificationItem_Response struct {
	ModificationType   *EServerModificationItemType                                                                `protobuf:"varint,1,opt,name=modification_type,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	ServerResponseCode *CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse `protobuf:"varint,2,opt,name=server_response_code,enum=CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse,def=1" json:"server_response_code,omitempty"`
	XXX_unrecognized   []byte                                                                                      `json:"-"`
}

func (m *CMsgGC_GameServer_UseServerModificationItem_Response) Reset() {
	*m = CMsgGC_GameServer_UseServerModificationItem_Response{}
}
func (m *CMsgGC_GameServer_UseServerModificationItem_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_UseServerModificationItem_Response) ProtoMessage() {}

const Default_CMsgGC_GameServer_UseServerModificationItem_Response_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween
const Default_CMsgGC_GameServer_UseServerModificationItem_Response_ServerResponseCode CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_Accepted

func (m *CMsgGC_GameServer_UseServerModificationItem_Response) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_UseServerModificationItem_Response_ModificationType
}

func (m *CMsgGC_GameServer_UseServerModificationItem_Response) GetServerResponseCode() CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
	if m != nil && m.ServerResponseCode != nil {
		return *m.ServerResponseCode
	}
	return Default_CMsgGC_GameServer_UseServerModificationItem_Response_ServerResponseCode
}

type CMsgGC_GameServer_ServerModificationItemExpired struct {
	ModificationType *EServerModificationItemType `protobuf:"varint,1,opt,name=modification_type,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_GameServer_ServerModificationItemExpired) Reset() {
	*m = CMsgGC_GameServer_ServerModificationItemExpired{}
}
func (m *CMsgGC_GameServer_ServerModificationItemExpired) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_ServerModificationItemExpired) ProtoMessage() {}

const Default_CMsgGC_GameServer_ServerModificationItemExpired_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween

func (m *CMsgGC_GameServer_ServerModificationItemExpired) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_ServerModificationItemExpired_ModificationType
}

type CMsgGC_GameServer_ServerModificationItem struct {
	ModificationType *EServerModificationItemType `protobuf:"varint,1,opt,name=modification_type,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	Active           *bool                        `protobuf:"varint,2,opt,name=active" json:"active,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_GameServer_ServerModificationItem) Reset() {
	*m = CMsgGC_GameServer_ServerModificationItem{}
}
func (m *CMsgGC_GameServer_ServerModificationItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ServerModificationItem) ProtoMessage()    {}

const Default_CMsgGC_GameServer_ServerModificationItem_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween

func (m *CMsgGC_GameServer_ServerModificationItem) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_ServerModificationItem_ModificationType
}

func (m *CMsgGC_GameServer_ServerModificationItem) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

type CMsgGC_Halloween_ReservedItem struct {
	X                []float32 `protobuf:"fixed32,1,rep,name=x" json:"x,omitempty"`
	Y                []float32 `protobuf:"fixed32,2,rep,name=y" json:"y,omitempty"`
	Z                []float32 `protobuf:"fixed32,3,rep,name=z" json:"z,omitempty"`
	SpawnMetaInfo    *uint32   `protobuf:"varint,7,opt,name=spawn_meta_info" json:"spawn_meta_info,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CMsgGC_Halloween_ReservedItem) Reset()         { *m = CMsgGC_Halloween_ReservedItem{} }
func (m *CMsgGC_Halloween_ReservedItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_ReservedItem) ProtoMessage()    {}

func (m *CMsgGC_Halloween_ReservedItem) GetX() []float32 {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *CMsgGC_Halloween_ReservedItem) GetY() []float32 {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *CMsgGC_Halloween_ReservedItem) GetZ() []float32 {
	if m != nil {
		return m.Z
	}
	return nil
}

func (m *CMsgGC_Halloween_ReservedItem) GetSpawnMetaInfo() uint32 {
	if m != nil && m.SpawnMetaInfo != nil {
		return *m.SpawnMetaInfo
	}
	return 0
}

type CMsgGC_Halloween_GrantItem struct {
	RecipientAccountId *uint32 `protobuf:"varint,1,opt,name=recipient_account_id" json:"recipient_account_id,omitempty"`
	LevelId            *uint32 `protobuf:"varint,2,opt,name=level_id" json:"level_id,omitempty"`
	Flagged            *bool   `protobuf:"varint,3,opt,name=flagged" json:"flagged,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgGC_Halloween_GrantItem) Reset()         { *m = CMsgGC_Halloween_GrantItem{} }
func (m *CMsgGC_Halloween_GrantItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_GrantItem) ProtoMessage()    {}

func (m *CMsgGC_Halloween_GrantItem) GetRecipientAccountId() uint32 {
	if m != nil && m.RecipientAccountId != nil {
		return *m.RecipientAccountId
	}
	return 0
}

func (m *CMsgGC_Halloween_GrantItem) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *CMsgGC_Halloween_GrantItem) GetFlagged() bool {
	if m != nil && m.Flagged != nil {
		return *m.Flagged
	}
	return false
}

type CMsgGC_Halloween_GrantItemResponse struct {
	RecipientAccountId *uint32 `protobuf:"varint,1,opt,name=recipient_account_id" json:"recipient_account_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgGC_Halloween_GrantItemResponse) Reset()         { *m = CMsgGC_Halloween_GrantItemResponse{} }
func (m *CMsgGC_Halloween_GrantItemResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_GrantItemResponse) ProtoMessage()    {}

func (m *CMsgGC_Halloween_GrantItemResponse) GetRecipientAccountId() uint32 {
	if m != nil && m.RecipientAccountId != nil {
		return *m.RecipientAccountId
	}
	return 0
}

type CMsgGC_Halloween_ItemClaimed struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_Halloween_ItemClaimed) Reset()         { *m = CMsgGC_Halloween_ItemClaimed{} }
func (m *CMsgGC_Halloween_ItemClaimed) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_ItemClaimed) ProtoMessage()    {}

type CMsgGC_PickupItemEligibility_Query struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	SecondsAgo       *uint32 `protobuf:"varint,2,opt,name=seconds_ago" json:"seconds_ago,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_PickupItemEligibility_Query) Reset()         { *m = CMsgGC_PickupItemEligibility_Query{} }
func (m *CMsgGC_PickupItemEligibility_Query) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_PickupItemEligibility_Query) ProtoMessage()    {}

func (m *CMsgGC_PickupItemEligibility_Query) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGC_PickupItemEligibility_Query) GetSecondsAgo() uint32 {
	if m != nil && m.SecondsAgo != nil {
		return *m.SecondsAgo
	}
	return 0
}

type CMsgGC_PickupItemEligibility_QueryResponse struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	WasEligible      *bool   `protobuf:"varint,2,opt,name=was_eligible" json:"was_eligible,omitempty"`
	LevelId          *uint32 `protobuf:"varint,3,opt,name=level_id" json:"level_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) Reset() {
	*m = CMsgGC_PickupItemEligibility_QueryResponse{}
}
func (m *CMsgGC_PickupItemEligibility_QueryResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_PickupItemEligibility_QueryResponse) ProtoMessage() {}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) GetWasEligible() bool {
	if m != nil && m.WasEligible != nil {
		return *m.WasEligible
	}
	return false
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

type CSOTFPartyMember struct {
	OwnsTicket        *bool   `protobuf:"varint,2,opt,name=owns_ticket" json:"owns_ticket,omitempty"`
	CompletedMissions *uint32 `protobuf:"varint,3,opt,name=completed_missions" json:"completed_missions,omitempty"`
	BadgeLevel        *uint32 `protobuf:"varint,4,opt,name=badge_level" json:"badge_level,omitempty"`
	SquadSurplus      *bool   `protobuf:"varint,5,opt,name=squad_surplus" json:"squad_surplus,omitempty"`
	IsBanned          *bool   `protobuf:"varint,8,opt,name=is_banned,def=0" json:"is_banned,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFPartyMember) Reset()         { *m = CSOTFPartyMember{} }
func (m *CSOTFPartyMember) String() string { return proto.CompactTextString(m) }
func (*CSOTFPartyMember) ProtoMessage()    {}

const Default_CSOTFPartyMember_IsBanned bool = false

func (m *CSOTFPartyMember) GetOwnsTicket() bool {
	if m != nil && m.OwnsTicket != nil {
		return *m.OwnsTicket
	}
	return false
}

func (m *CSOTFPartyMember) GetCompletedMissions() uint32 {
	if m != nil && m.CompletedMissions != nil {
		return *m.CompletedMissions
	}
	return 0
}

func (m *CSOTFPartyMember) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CSOTFPartyMember) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

func (m *CSOTFPartyMember) GetIsBanned() bool {
	if m != nil && m.IsBanned != nil {
		return *m.IsBanned
	}
	return Default_CSOTFPartyMember_IsBanned
}

type CMsgMatchSearchCriteria struct {
	MatchmakingMode       *TF_MatchmakingMode `protobuf:"varint,7,opt,name=matchmaking_mode,enum=TF_MatchmakingMode,def=0" json:"matchmaking_mode,omitempty"`
	LateJoinOk            *bool               `protobuf:"varint,5,opt,name=late_join_ok" json:"late_join_ok,omitempty"`
	MvmMannupTour         *string             `protobuf:"bytes,10,opt,name=mvm_mannup_tour" json:"mvm_mannup_tour,omitempty"`
	MvmMissions           []string            `protobuf:"bytes,9,rep,name=mvm_missions" json:"mvm_missions,omitempty"`
	PlayForBraggingRights *bool               `protobuf:"varint,6,opt,name=play_for_bragging_rights" json:"play_for_bragging_rights,omitempty"`
	QuickplayGameType     *uint32             `protobuf:"varint,8,opt,name=quickplay_game_type" json:"quickplay_game_type,omitempty"`
	XXX_unrecognized      []byte              `json:"-"`
}

func (m *CMsgMatchSearchCriteria) Reset()         { *m = CMsgMatchSearchCriteria{} }
func (m *CMsgMatchSearchCriteria) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchSearchCriteria) ProtoMessage()    {}

const Default_CMsgMatchSearchCriteria_MatchmakingMode TF_MatchmakingMode = TF_MatchmakingMode_TF_Matchmaking_INVALID

func (m *CMsgMatchSearchCriteria) GetMatchmakingMode() TF_MatchmakingMode {
	if m != nil && m.MatchmakingMode != nil {
		return *m.MatchmakingMode
	}
	return Default_CMsgMatchSearchCriteria_MatchmakingMode
}

func (m *CMsgMatchSearchCriteria) GetLateJoinOk() bool {
	if m != nil && m.LateJoinOk != nil {
		return *m.LateJoinOk
	}
	return false
}

func (m *CMsgMatchSearchCriteria) GetMvmMannupTour() string {
	if m != nil && m.MvmMannupTour != nil {
		return *m.MvmMannupTour
	}
	return ""
}

func (m *CMsgMatchSearchCriteria) GetMvmMissions() []string {
	if m != nil {
		return m.MvmMissions
	}
	return nil
}

func (m *CMsgMatchSearchCriteria) GetPlayForBraggingRights() bool {
	if m != nil && m.PlayForBraggingRights != nil {
		return *m.PlayForBraggingRights
	}
	return false
}

func (m *CMsgMatchSearchCriteria) GetQuickplayGameType() uint32 {
	if m != nil && m.QuickplayGameType != nil {
		return *m.QuickplayGameType
	}
	return 0
}

type CMsgCreateOrUpdateParty struct {
	SearchCriteria   *CMsgMatchSearchCriteria   `protobuf:"bytes,1,opt,name=search_criteria" json:"search_criteria,omitempty"`
	SteamLobbyId     *uint64                    `protobuf:"fixed64,3,opt,name=steam_lobby_id" json:"steam_lobby_id,omitempty"`
	SquadSurplus     *bool                      `protobuf:"varint,4,opt,name=squad_surplus" json:"squad_surplus,omitempty"`
	WizardStep       *TF_Matchmaking_WizardStep `protobuf:"varint,5,opt,name=wizard_step,enum=TF_Matchmaking_WizardStep,def=0" json:"wizard_step,omitempty"`
	ClientVersion    *uint32                    `protobuf:"varint,6,opt,name=client_version,def=1225" json:"client_version,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgCreateOrUpdateParty) Reset()         { *m = CMsgCreateOrUpdateParty{} }
func (m *CMsgCreateOrUpdateParty) String() string { return proto.CompactTextString(m) }
func (*CMsgCreateOrUpdateParty) ProtoMessage()    {}

const Default_CMsgCreateOrUpdateParty_WizardStep TF_Matchmaking_WizardStep = TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID
const Default_CMsgCreateOrUpdateParty_ClientVersion uint32 = 1225

func (m *CMsgCreateOrUpdateParty) GetSearchCriteria() *CMsgMatchSearchCriteria {
	if m != nil {
		return m.SearchCriteria
	}
	return nil
}

func (m *CMsgCreateOrUpdateParty) GetSteamLobbyId() uint64 {
	if m != nil && m.SteamLobbyId != nil {
		return *m.SteamLobbyId
	}
	return 0
}

func (m *CMsgCreateOrUpdateParty) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

func (m *CMsgCreateOrUpdateParty) GetWizardStep() TF_Matchmaking_WizardStep {
	if m != nil && m.WizardStep != nil {
		return *m.WizardStep
	}
	return Default_CMsgCreateOrUpdateParty_WizardStep
}

func (m *CMsgCreateOrUpdateParty) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return Default_CMsgCreateOrUpdateParty_ClientVersion
}

type CMsgCreateOrUpdatePartyReply struct {
	Result           *uint32                    `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Message          *string                    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	WizardStep       *TF_Matchmaking_WizardStep `protobuf:"varint,3,opt,name=wizard_step,enum=TF_Matchmaking_WizardStep,def=0" json:"wizard_step,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgCreateOrUpdatePartyReply) Reset()         { *m = CMsgCreateOrUpdatePartyReply{} }
func (m *CMsgCreateOrUpdatePartyReply) String() string { return proto.CompactTextString(m) }
func (*CMsgCreateOrUpdatePartyReply) ProtoMessage()    {}

const Default_CMsgCreateOrUpdatePartyReply_WizardStep TF_Matchmaking_WizardStep = TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID

func (m *CMsgCreateOrUpdatePartyReply) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgCreateOrUpdatePartyReply) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgCreateOrUpdatePartyReply) GetWizardStep() TF_Matchmaking_WizardStep {
	if m != nil && m.WizardStep != nil {
		return *m.WizardStep
	}
	return Default_CMsgCreateOrUpdatePartyReply_WizardStep
}

type CSOTFParty struct {
	PartyId                     *uint64                    `protobuf:"varint,1,opt,name=party_id" json:"party_id,omitempty"`
	LeaderId                    *uint64                    `protobuf:"fixed64,2,opt,name=leader_id" json:"leader_id,omitempty"`
	MemberIds                   []uint64                   `protobuf:"fixed64,3,rep,name=member_ids" json:"member_ids,omitempty"`
	Members                     []*CSOTFPartyMember        `protobuf:"bytes,13,rep,name=members" json:"members,omitempty"`
	PendingInvites              []uint64                   `protobuf:"fixed64,5,rep,name=pending_invites" json:"pending_invites,omitempty"`
	State                       *CSOTFParty_State          `protobuf:"varint,6,opt,name=state,enum=CSOTFParty_State,def=0" json:"state,omitempty"`
	WizardStep                  *TF_Matchmaking_WizardStep `protobuf:"varint,29,opt,name=wizard_step,enum=TF_Matchmaking_WizardStep,def=0" json:"wizard_step,omitempty"`
	StartedMatchmakingTime      *uint32                    `protobuf:"varint,7,opt,name=started_matchmaking_time" json:"started_matchmaking_time,omitempty"`
	SearchingPlayersByGroup     []uint32                   `protobuf:"varint,10,rep,name=searching_players_by_group" json:"searching_players_by_group,omitempty"`
	SteamLobbyId                *uint64                    `protobuf:"fixed64,27,opt,name=steam_lobby_id" json:"steam_lobby_id,omitempty"`
	MatchmakingMode             *TF_MatchmakingMode        `protobuf:"varint,30,opt,name=matchmaking_mode,enum=TF_MatchmakingMode,def=0" json:"matchmaking_mode,omitempty"`
	SearchLateJoinOk            *bool                      `protobuf:"varint,23,opt,name=search_late_join_ok" json:"search_late_join_ok,omitempty"`
	SearchMvmMannupTour         *string                    `protobuf:"bytes,32,opt,name=search_mvm_mannup_tour" json:"search_mvm_mannup_tour,omitempty"`
	SearchMvmMissions           []string                   `protobuf:"bytes,31,rep,name=search_mvm_missions" json:"search_mvm_missions,omitempty"`
	SearchPlayForBraggingRights *bool                      `protobuf:"varint,26,opt,name=search_play_for_bragging_rights" json:"search_play_for_bragging_rights,omitempty"`
	SearchQuickplayGameType     *uint32                    `protobuf:"varint,28,opt,name=search_quickplay_game_type" json:"search_quickplay_game_type,omitempty"`
	PreventMatchUntilDate       *uint32                    `protobuf:"varint,18,opt,name=prevent_match_until_date" json:"prevent_match_until_date,omitempty"`
	PreventMatchAccountId       *uint32                    `protobuf:"varint,19,opt,name=prevent_match_account_id" json:"prevent_match_account_id,omitempty"`
	XXX_unrecognized            []byte                     `json:"-"`
}

func (m *CSOTFParty) Reset()         { *m = CSOTFParty{} }
func (m *CSOTFParty) String() string { return proto.CompactTextString(m) }
func (*CSOTFParty) ProtoMessage()    {}

const Default_CSOTFParty_State CSOTFParty_State = CSOTFParty_UI
const Default_CSOTFParty_WizardStep TF_Matchmaking_WizardStep = TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID
const Default_CSOTFParty_MatchmakingMode TF_MatchmakingMode = TF_MatchmakingMode_TF_Matchmaking_INVALID

func (m *CSOTFParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CSOTFParty) GetLeaderId() uint64 {
	if m != nil && m.LeaderId != nil {
		return *m.LeaderId
	}
	return 0
}

func (m *CSOTFParty) GetMemberIds() []uint64 {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

func (m *CSOTFParty) GetMembers() []*CSOTFPartyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CSOTFParty) GetPendingInvites() []uint64 {
	if m != nil {
		return m.PendingInvites
	}
	return nil
}

func (m *CSOTFParty) GetState() CSOTFParty_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CSOTFParty_State
}

func (m *CSOTFParty) GetWizardStep() TF_Matchmaking_WizardStep {
	if m != nil && m.WizardStep != nil {
		return *m.WizardStep
	}
	return Default_CSOTFParty_WizardStep
}

func (m *CSOTFParty) GetStartedMatchmakingTime() uint32 {
	if m != nil && m.StartedMatchmakingTime != nil {
		return *m.StartedMatchmakingTime
	}
	return 0
}

func (m *CSOTFParty) GetSearchingPlayersByGroup() []uint32 {
	if m != nil {
		return m.SearchingPlayersByGroup
	}
	return nil
}

func (m *CSOTFParty) GetSteamLobbyId() uint64 {
	if m != nil && m.SteamLobbyId != nil {
		return *m.SteamLobbyId
	}
	return 0
}

func (m *CSOTFParty) GetMatchmakingMode() TF_MatchmakingMode {
	if m != nil && m.MatchmakingMode != nil {
		return *m.MatchmakingMode
	}
	return Default_CSOTFParty_MatchmakingMode
}

func (m *CSOTFParty) GetSearchLateJoinOk() bool {
	if m != nil && m.SearchLateJoinOk != nil {
		return *m.SearchLateJoinOk
	}
	return false
}

func (m *CSOTFParty) GetSearchMvmMannupTour() string {
	if m != nil && m.SearchMvmMannupTour != nil {
		return *m.SearchMvmMannupTour
	}
	return ""
}

func (m *CSOTFParty) GetSearchMvmMissions() []string {
	if m != nil {
		return m.SearchMvmMissions
	}
	return nil
}

func (m *CSOTFParty) GetSearchPlayForBraggingRights() bool {
	if m != nil && m.SearchPlayForBraggingRights != nil {
		return *m.SearchPlayForBraggingRights
	}
	return false
}

func (m *CSOTFParty) GetSearchQuickplayGameType() uint32 {
	if m != nil && m.SearchQuickplayGameType != nil {
		return *m.SearchQuickplayGameType
	}
	return 0
}

func (m *CSOTFParty) GetPreventMatchUntilDate() uint32 {
	if m != nil && m.PreventMatchUntilDate != nil {
		return *m.PreventMatchUntilDate
	}
	return 0
}

func (m *CSOTFParty) GetPreventMatchAccountId() uint32 {
	if m != nil && m.PreventMatchAccountId != nil {
		return *m.PreventMatchAccountId
	}
	return 0
}

type CSOTFPartyInvite struct {
	GroupId          *uint64                         `protobuf:"varint,1,opt,name=group_id" json:"group_id,omitempty"`
	SenderId         *uint64                         `protobuf:"fixed64,2,opt,name=sender_id" json:"sender_id,omitempty"`
	SenderName       *string                         `protobuf:"bytes,3,opt,name=sender_name" json:"sender_name,omitempty"`
	Members          []*CSOTFPartyInvite_PartyMember `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CSOTFPartyInvite) Reset()         { *m = CSOTFPartyInvite{} }
func (m *CSOTFPartyInvite) String() string { return proto.CompactTextString(m) }
func (*CSOTFPartyInvite) ProtoMessage()    {}

func (m *CSOTFPartyInvite) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *CSOTFPartyInvite) GetSenderId() uint64 {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return 0
}

func (m *CSOTFPartyInvite) GetSenderName() string {
	if m != nil && m.SenderName != nil {
		return *m.SenderName
	}
	return ""
}

func (m *CSOTFPartyInvite) GetMembers() []*CSOTFPartyInvite_PartyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CSOTFPartyInvite_PartyMember struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id" json:"steam_id,omitempty"`
	Avatar           *uint32 `protobuf:"varint,3,opt,name=avatar" json:"avatar,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSOTFPartyInvite_PartyMember) Reset()         { *m = CSOTFPartyInvite_PartyMember{} }
func (m *CSOTFPartyInvite_PartyMember) String() string { return proto.CompactTextString(m) }
func (*CSOTFPartyInvite_PartyMember) ProtoMessage()    {}

func (m *CSOTFPartyInvite_PartyMember) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSOTFPartyInvite_PartyMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CSOTFPartyInvite_PartyMember) GetAvatar() uint32 {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return 0
}

type CTFLobbyMember struct {
	Id                       *uint64                      `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
	Team                     *TF_GC_TEAM                  `protobuf:"varint,3,opt,name=team,enum=TF_GC_TEAM,def=0" json:"team,omitempty"`
	ConnectState             *CTFLobbyMember_ConnectState `protobuf:"varint,13,opt,name=connect_state,enum=CTFLobbyMember_ConnectState,def=0" json:"connect_state,omitempty"`
	Name                     *string                      `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Latitude                 *float32                     `protobuf:"fixed32,8,opt,name=latitude" json:"latitude,omitempty"`
	Longitude                *float32                     `protobuf:"fixed32,9,opt,name=longitude" json:"longitude,omitempty"`
	ReadyState               *TFLobbyReadyState           `protobuf:"varint,11,opt,name=ready_state,enum=TFLobbyReadyState,def=0" json:"ready_state,omitempty"`
	PartyId                  *uint64                      `protobuf:"varint,12,opt,name=party_id" json:"party_id,omitempty"`
	SquadSurplus             *bool                        `protobuf:"varint,14,opt,name=squad_surplus" json:"squad_surplus,omitempty"`
	BadgeLevel               *uint32                      `protobuf:"varint,15,opt,name=badge_level" json:"badge_level,omitempty"`
	AbandonTime              *uint32                      `protobuf:"varint,16,opt,name=abandon_time,def=0" json:"abandon_time,omitempty"`
	LastConnectTime          *uint32                      `protobuf:"varint,17,opt,name=last_connect_time" json:"last_connect_time,omitempty"`
	QuittingResultsInPenalty *bool                        `protobuf:"varint,18,opt,name=quitting_results_in_penalty" json:"quitting_results_in_penalty,omitempty"`
	XXX_unrecognized         []byte                       `json:"-"`
}

func (m *CTFLobbyMember) Reset()         { *m = CTFLobbyMember{} }
func (m *CTFLobbyMember) String() string { return proto.CompactTextString(m) }
func (*CTFLobbyMember) ProtoMessage()    {}

const Default_CTFLobbyMember_Team TF_GC_TEAM = TF_GC_TEAM_TF_GC_TEAM_DEFENDERS
const Default_CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState = CTFLobbyMember_INVALID
const Default_CTFLobbyMember_ReadyState TFLobbyReadyState = TFLobbyReadyState_TFLobbyReadyState_UNDECLARED
const Default_CTFLobbyMember_AbandonTime uint32 = 0

func (m *CTFLobbyMember) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CTFLobbyMember) GetTeam() TF_GC_TEAM {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return Default_CTFLobbyMember_Team
}

func (m *CTFLobbyMember) GetConnectState() CTFLobbyMember_ConnectState {
	if m != nil && m.ConnectState != nil {
		return *m.ConnectState
	}
	return Default_CTFLobbyMember_ConnectState
}

func (m *CTFLobbyMember) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CTFLobbyMember) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *CTFLobbyMember) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *CTFLobbyMember) GetReadyState() TFLobbyReadyState {
	if m != nil && m.ReadyState != nil {
		return *m.ReadyState
	}
	return Default_CTFLobbyMember_ReadyState
}

func (m *CTFLobbyMember) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CTFLobbyMember) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

func (m *CTFLobbyMember) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CTFLobbyMember) GetAbandonTime() uint32 {
	if m != nil && m.AbandonTime != nil {
		return *m.AbandonTime
	}
	return Default_CTFLobbyMember_AbandonTime
}

func (m *CTFLobbyMember) GetLastConnectTime() uint32 {
	if m != nil && m.LastConnectTime != nil {
		return *m.LastConnectTime
	}
	return 0
}

func (m *CTFLobbyMember) GetQuittingResultsInPenalty() bool {
	if m != nil && m.QuittingResultsInPenalty != nil {
		return *m.QuittingResultsInPenalty
	}
	return false
}

type CLobbyPendingPlayerReport struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Date             *uint32 `protobuf:"fixed32,2,opt,name=date" json:"date,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CLobbyPendingPlayerReport) Reset()         { *m = CLobbyPendingPlayerReport{} }
func (m *CLobbyPendingPlayerReport) String() string { return proto.CompactTextString(m) }
func (*CLobbyPendingPlayerReport) ProtoMessage()    {}

func (m *CLobbyPendingPlayerReport) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CLobbyPendingPlayerReport) GetDate() uint32 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

type CMsgGameMatchSignOut struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGameMatchSignOut) Reset()         { *m = CMsgGameMatchSignOut{} }
func (m *CMsgGameMatchSignOut) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOut) ProtoMessage()    {}

type CSOTFLobby struct {
	LobbyId              *uint64               `protobuf:"varint,1,opt,name=lobby_id" json:"lobby_id,omitempty"`
	Members              []*CTFLobbyMember     `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	LeftMembers          []*CTFLobbyMember     `protobuf:"bytes,7,rep,name=left_members" json:"left_members,omitempty"`
	LeaderId             *uint64               `protobuf:"fixed64,11,opt,name=leader_id" json:"leader_id,omitempty"`
	ServerId             *uint64               `protobuf:"fixed64,6,opt,name=server_id,def=0" json:"server_id,omitempty"`
	PendingInvites       []uint64              `protobuf:"fixed64,10,rep,name=pending_invites" json:"pending_invites,omitempty"`
	State                *CSOTFLobby_State     `protobuf:"varint,4,opt,name=state,enum=CSOTFLobby_State,def=1" json:"state,omitempty"`
	Connect              *string               `protobuf:"bytes,5,opt,name=connect" json:"connect,omitempty"`
	LobbyType            *CSOTFLobby_LobbyType `protobuf:"varint,12,opt,name=lobby_type,enum=CSOTFLobby_LobbyType,def=-1" json:"lobby_type,omitempty"`
	AllowCheats          *bool                 `protobuf:"varint,13,opt,name=allow_cheats" json:"allow_cheats,omitempty"`
	GameName             *string               `protobuf:"bytes,16,opt,name=game_name" json:"game_name,omitempty"`
	ServerRegion         *uint32               `protobuf:"varint,21,opt,name=server_region,def=0" json:"server_region,omitempty"`
	GameState            *TF_GC_GameState      `protobuf:"varint,22,opt,name=game_state,enum=TF_GC_GameState,def=0" json:"game_state,omitempty"`
	NumSpectators        *uint32               `protobuf:"varint,23,opt,name=num_spectators" json:"num_spectators,omitempty"`
	Matchgroup           *uint32               `protobuf:"varint,25,opt,name=matchgroup" json:"matchgroup,omitempty"`
	ReadyupRemainingTime *float32              `protobuf:"fixed32,26,opt,name=readyup_remaining_time" json:"readyup_remaining_time,omitempty"`
	LeaverDetected       *bool                 `protobuf:"varint,27,opt,name=leaver_detected" json:"leaver_detected,omitempty"`
	AllowSpectating      *bool                 `protobuf:"varint,31,opt,name=allow_spectating,def=1" json:"allow_spectating,omitempty"`
	LoadGameLobbyId      *uint64               `protobuf:"fixed64,33,opt,name=load_game_lobby_id" json:"load_game_lobby_id,omitempty"`
	LoadGameSaveNumber   *uint32               `protobuf:"varint,34,opt,name=load_game_save_number" json:"load_game_save_number,omitempty"`
	MannupTourName       *string               `protobuf:"bytes,42,opt,name=mannup_tour_name" json:"mannup_tour_name,omitempty"`
	MapName              *string               `protobuf:"bytes,38,opt,name=map_name" json:"map_name,omitempty"`
	MissionName          *string               `protobuf:"bytes,39,opt,name=mission_name" json:"mission_name,omitempty"`
	MatchGroup           *uint32               `protobuf:"varint,41,opt,name=match_group" json:"match_group,omitempty"`
	MatchId              *uint32               `protobuf:"varint,30,opt,name=match_id" json:"match_id,omitempty"`
	ReplaySalt           *uint32               `protobuf:"fixed32,35,opt,name=replay_salt" json:"replay_salt,omitempty"`
	XXX_unrecognized     []byte                `json:"-"`
}

func (m *CSOTFLobby) Reset()         { *m = CSOTFLobby{} }
func (m *CSOTFLobby) String() string { return proto.CompactTextString(m) }
func (*CSOTFLobby) ProtoMessage()    {}

const Default_CSOTFLobby_ServerId uint64 = 0
const Default_CSOTFLobby_State CSOTFLobby_State = CSOTFLobby_SERVERSETUP
const Default_CSOTFLobby_LobbyType CSOTFLobby_LobbyType = CSOTFLobby_INVALID
const Default_CSOTFLobby_ServerRegion uint32 = 0
const Default_CSOTFLobby_GameState TF_GC_GameState = TF_GC_GameState_TF_GC_GAMESTATE_STATE_INIT
const Default_CSOTFLobby_AllowSpectating bool = true

func (m *CSOTFLobby) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CSOTFLobby) GetMembers() []*CTFLobbyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CSOTFLobby) GetLeftMembers() []*CTFLobbyMember {
	if m != nil {
		return m.LeftMembers
	}
	return nil
}

func (m *CSOTFLobby) GetLeaderId() uint64 {
	if m != nil && m.LeaderId != nil {
		return *m.LeaderId
	}
	return 0
}

func (m *CSOTFLobby) GetServerId() uint64 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return Default_CSOTFLobby_ServerId
}

func (m *CSOTFLobby) GetPendingInvites() []uint64 {
	if m != nil {
		return m.PendingInvites
	}
	return nil
}

func (m *CSOTFLobby) GetState() CSOTFLobby_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CSOTFLobby_State
}

func (m *CSOTFLobby) GetConnect() string {
	if m != nil && m.Connect != nil {
		return *m.Connect
	}
	return ""
}

func (m *CSOTFLobby) GetLobbyType() CSOTFLobby_LobbyType {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return Default_CSOTFLobby_LobbyType
}

func (m *CSOTFLobby) GetAllowCheats() bool {
	if m != nil && m.AllowCheats != nil {
		return *m.AllowCheats
	}
	return false
}

func (m *CSOTFLobby) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CSOTFLobby) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return Default_CSOTFLobby_ServerRegion
}

func (m *CSOTFLobby) GetGameState() TF_GC_GameState {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return Default_CSOTFLobby_GameState
}

func (m *CSOTFLobby) GetNumSpectators() uint32 {
	if m != nil && m.NumSpectators != nil {
		return *m.NumSpectators
	}
	return 0
}

func (m *CSOTFLobby) GetMatchgroup() uint32 {
	if m != nil && m.Matchgroup != nil {
		return *m.Matchgroup
	}
	return 0
}

func (m *CSOTFLobby) GetReadyupRemainingTime() float32 {
	if m != nil && m.ReadyupRemainingTime != nil {
		return *m.ReadyupRemainingTime
	}
	return 0
}

func (m *CSOTFLobby) GetLeaverDetected() bool {
	if m != nil && m.LeaverDetected != nil {
		return *m.LeaverDetected
	}
	return false
}

func (m *CSOTFLobby) GetAllowSpectating() bool {
	if m != nil && m.AllowSpectating != nil {
		return *m.AllowSpectating
	}
	return Default_CSOTFLobby_AllowSpectating
}

func (m *CSOTFLobby) GetLoadGameLobbyId() uint64 {
	if m != nil && m.LoadGameLobbyId != nil {
		return *m.LoadGameLobbyId
	}
	return 0
}

func (m *CSOTFLobby) GetLoadGameSaveNumber() uint32 {
	if m != nil && m.LoadGameSaveNumber != nil {
		return *m.LoadGameSaveNumber
	}
	return 0
}

func (m *CSOTFLobby) GetMannupTourName() string {
	if m != nil && m.MannupTourName != nil {
		return *m.MannupTourName
	}
	return ""
}

func (m *CSOTFLobby) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSOTFLobby) GetMissionName() string {
	if m != nil && m.MissionName != nil {
		return *m.MissionName
	}
	return ""
}

func (m *CSOTFLobby) GetMatchGroup() uint32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CSOTFLobby) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CSOTFLobby) GetReplaySalt() uint32 {
	if m != nil && m.ReplaySalt != nil {
		return *m.ReplaySalt
	}
	return 0
}

type CMsgExitMatchmaking struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgExitMatchmaking) Reset()         { *m = CMsgExitMatchmaking{} }
func (m *CMsgExitMatchmaking) String() string { return proto.CompactTextString(m) }
func (*CMsgExitMatchmaking) ProtoMessage()    {}

type CMsgAcceptInvite struct {
	PartyId          *uint64 `protobuf:"varint,1,opt,name=party_id" json:"party_id,omitempty"`
	SteamidLobby     *uint64 `protobuf:"fixed64,2,opt,name=steamid_lobby" json:"steamid_lobby,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,3,opt,name=client_version,def=1225" json:"client_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgAcceptInvite) Reset()         { *m = CMsgAcceptInvite{} }
func (m *CMsgAcceptInvite) String() string { return proto.CompactTextString(m) }
func (*CMsgAcceptInvite) ProtoMessage()    {}

const Default_CMsgAcceptInvite_ClientVersion uint32 = 1225

func (m *CMsgAcceptInvite) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgAcceptInvite) GetSteamidLobby() uint64 {
	if m != nil && m.SteamidLobby != nil {
		return *m.SteamidLobby
	}
	return 0
}

func (m *CMsgAcceptInvite) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return Default_CMsgAcceptInvite_ClientVersion
}

type CMsgAcceptInviteResponse struct {
	ResultCode       *int32 `protobuf:"varint,1,opt,name=result_code" json:"result_code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgAcceptInviteResponse) Reset()         { *m = CMsgAcceptInviteResponse{} }
func (m *CMsgAcceptInviteResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgAcceptInviteResponse) ProtoMessage()    {}

func (m *CMsgAcceptInviteResponse) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

type CMsgReadyUp struct {
	State            *TFLobbyReadyState `protobuf:"varint,1,opt,name=state,enum=TFLobbyReadyState,def=0" json:"state,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsgReadyUp) Reset()         { *m = CMsgReadyUp{} }
func (m *CMsgReadyUp) String() string { return proto.CompactTextString(m) }
func (*CMsgReadyUp) ProtoMessage()    {}

const Default_CMsgReadyUp_State TFLobbyReadyState = TFLobbyReadyState_TFLobbyReadyState_UNDECLARED

func (m *CMsgReadyUp) GetState() TFLobbyReadyState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgReadyUp_State
}

type CMsgMatchmakingSearchCountRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgMatchmakingSearchCountRequest) Reset()         { *m = CMsgMatchmakingSearchCountRequest{} }
func (m *CMsgMatchmakingSearchCountRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchmakingSearchCountRequest) ProtoMessage()    {}

type CMsgMatchmakingSearchCountResponse struct {
	SearchingPlayersByGroup []uint32 `protobuf:"varint,1,rep,name=searching_players_by_group" json:"searching_players_by_group,omitempty"`
	XXX_unrecognized        []byte   `json:"-"`
}

func (m *CMsgMatchmakingSearchCountResponse) Reset()         { *m = CMsgMatchmakingSearchCountResponse{} }
func (m *CMsgMatchmakingSearchCountResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchmakingSearchCountResponse) ProtoMessage()    {}

func (m *CMsgMatchmakingSearchCountResponse) GetSearchingPlayersByGroup() []uint32 {
	if m != nil {
		return m.SearchingPlayersByGroup
	}
	return nil
}

type CMsgKickedFromMatchmakingQueue struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgKickedFromMatchmakingQueue) Reset()         { *m = CMsgKickedFromMatchmakingQueue{} }
func (m *CMsgKickedFromMatchmakingQueue) String() string { return proto.CompactTextString(m) }
func (*CMsgKickedFromMatchmakingQueue) ProtoMessage()    {}

type CMsgTFPlayerFailedToConnect struct {
	FailedLoaders    []uint64 `protobuf:"fixed64,1,rep,name=failed_loaders" json:"failed_loaders,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFPlayerFailedToConnect) Reset()         { *m = CMsgTFPlayerFailedToConnect{} }
func (m *CMsgTFPlayerFailedToConnect) String() string { return proto.CompactTextString(m) }
func (*CMsgTFPlayerFailedToConnect) ProtoMessage()    {}

func (m *CMsgTFPlayerFailedToConnect) GetFailedLoaders() []uint64 {
	if m != nil {
		return m.FailedLoaders
	}
	return nil
}

type CMsgTFJoinChatChannel struct {
	PersonaName      *string           `protobuf:"bytes,1,opt,name=persona_name" json:"persona_name,omitempty"`
	ChannelName      *string           `protobuf:"bytes,2,opt,name=channel_name" json:"channel_name,omitempty"`
	Password         *string           `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	ChannelType      *ChatChannelTypeT `protobuf:"varint,4,opt,name=channel_type,enum=ChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgTFJoinChatChannel) Reset()         { *m = CMsgTFJoinChatChannel{} }
func (m *CMsgTFJoinChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgTFJoinChatChannel) ProtoMessage()    {}

const Default_CMsgTFJoinChatChannel_ChannelType ChatChannelTypeT = ChatChannelTypeT_ChatChannelType_Regional

func (m *CMsgTFJoinChatChannel) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgTFJoinChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFJoinChatChannel) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgTFJoinChatChannel) GetChannelType() ChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgTFJoinChatChannel_ChannelType
}

type CMsgTFLeaveChatChannel struct {
	ChannelName      *string `protobuf:"bytes,1,opt,name=channel_name" json:"channel_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFLeaveChatChannel) Reset()         { *m = CMsgTFLeaveChatChannel{} }
func (m *CMsgTFLeaveChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgTFLeaveChatChannel) ProtoMessage()    {}

func (m *CMsgTFLeaveChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

type CMsgTFJoinChatChannelResponse struct {
	Response         *uint32                                     `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	ChannelName      *string                                     `protobuf:"bytes,2,opt,name=channel_name" json:"channel_name,omitempty"`
	ChannelId        *uint64                                     `protobuf:"fixed64,3,opt,name=channel_id" json:"channel_id,omitempty"`
	MaxMembers       *uint32                                     `protobuf:"varint,4,opt,name=max_members" json:"max_members,omitempty"`
	Members          []*CMsgTFJoinChatChannelResponse_ChatMember `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgTFJoinChatChannelResponse) Reset()         { *m = CMsgTFJoinChatChannelResponse{} }
func (m *CMsgTFJoinChatChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFJoinChatChannelResponse) ProtoMessage()    {}

func (m *CMsgTFJoinChatChannelResponse) GetResponse() uint32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFJoinChatChannelResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse) GetMaxMembers() uint32 {
	if m != nil && m.MaxMembers != nil {
		return *m.MaxMembers
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse) GetMembers() []*CMsgTFJoinChatChannelResponse_ChatMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgTFJoinChatChannelResponse_ChatMember struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name" json:"persona_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFJoinChatChannelResponse_ChatMember) Reset() {
	*m = CMsgTFJoinChatChannelResponse_ChatMember{}
}
func (m *CMsgTFJoinChatChannelResponse_ChatMember) String() string { return proto.CompactTextString(m) }
func (*CMsgTFJoinChatChannelResponse_ChatMember) ProtoMessage()    {}

func (m *CMsgTFJoinChatChannelResponse_ChatMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse_ChatMember) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

type CMsgTFOtherJoinedChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name" json:"persona_name,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,3,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFOtherJoinedChatChannel) Reset()         { *m = CMsgTFOtherJoinedChatChannel{} }
func (m *CMsgTFOtherJoinedChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgTFOtherJoinedChatChannel) ProtoMessage()    {}

func (m *CMsgTFOtherJoinedChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgTFOtherJoinedChatChannel) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgTFOtherJoinedChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgTFOtherLeftChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFOtherLeftChatChannel) Reset()         { *m = CMsgTFOtherLeftChatChannel{} }
func (m *CMsgTFOtherLeftChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgTFOtherLeftChatChannel) ProtoMessage()    {}

func (m *CMsgTFOtherLeftChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgTFOtherLeftChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgTFRequestDefaultChatChannel struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFRequestDefaultChatChannel) Reset()         { *m = CMsgTFRequestDefaultChatChannel{} }
func (m *CMsgTFRequestDefaultChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestDefaultChatChannel) ProtoMessage()    {}

type CMsgTFRequestDefaultChatChannelResponse struct {
	ChannelName      *string `protobuf:"bytes,1,opt,name=channel_name" json:"channel_name,omitempty"`
	ChannelId        *uint64 `protobuf:"fixed64,2,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFRequestDefaultChatChannelResponse) Reset() {
	*m = CMsgTFRequestDefaultChatChannelResponse{}
}
func (m *CMsgTFRequestDefaultChatChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestDefaultChatChannelResponse) ProtoMessage()    {}

func (m *CMsgTFRequestDefaultChatChannelResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFRequestDefaultChatChannelResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type CMsgTFRequestChatChannelList struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFRequestChatChannelList) Reset()         { *m = CMsgTFRequestChatChannelList{} }
func (m *CMsgTFRequestChatChannelList) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestChatChannelList) ProtoMessage()    {}

type CMsgTFRequestChatChannelListResponse struct {
	Channels         []*CMsgTFRequestChatChannelListResponse_ChatChannel `protobuf:"bytes,1,rep,name=channels" json:"channels,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMsgTFRequestChatChannelListResponse) Reset()         { *m = CMsgTFRequestChatChannelListResponse{} }
func (m *CMsgTFRequestChatChannelListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestChatChannelListResponse) ProtoMessage()    {}

func (m *CMsgTFRequestChatChannelListResponse) GetChannels() []*CMsgTFRequestChatChannelListResponse_ChatChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type CMsgTFRequestChatChannelListResponse_ChatChannel struct {
	ChannelName      *string           `protobuf:"bytes,1,opt,name=channel_name" json:"channel_name,omitempty"`
	NumMembers       *uint32           `protobuf:"varint,2,opt,name=num_members" json:"num_members,omitempty"`
	ChannelType      *ChatChannelTypeT `protobuf:"varint,3,opt,name=channel_type,enum=ChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) Reset() {
	*m = CMsgTFRequestChatChannelListResponse_ChatChannel{}
}
func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgTFRequestChatChannelListResponse_ChatChannel) ProtoMessage() {}

const Default_CMsgTFRequestChatChannelListResponse_ChatChannel_ChannelType ChatChannelTypeT = ChatChannelTypeT_ChatChannelType_Regional

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) GetNumMembers() uint32 {
	if m != nil && m.NumMembers != nil {
		return *m.NumMembers
	}
	return 0
}

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) GetChannelType() ChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgTFRequestChatChannelListResponse_ChatChannel_ChannelType
}

type CMsgGameServerMatchmakingStatus struct {
	ServerVersion      *uint32                                   `protobuf:"varint,16,opt,name=server_version,def=1225" json:"server_version,omitempty"`
	MatchmakingState   *ServerMatchmakingState                   `protobuf:"varint,1,opt,name=matchmaking_state,enum=ServerMatchmakingState,def=0" json:"matchmaking_state,omitempty"`
	MatchmakingMode    *TF_MatchmakingMode                       `protobuf:"varint,2,opt,name=matchmaking_mode,enum=TF_MatchmakingMode,def=0" json:"matchmaking_mode,omitempty"`
	Map                *string                                   `protobuf:"bytes,3,opt,name=map" json:"map,omitempty"`
	Tags               *string                                   `protobuf:"bytes,4,opt,name=tags" json:"tags,omitempty"`
	BotCount           *uint32                                   `protobuf:"varint,5,opt,name=bot_count" json:"bot_count,omitempty"`
	NumSpectators      *uint32                                   `protobuf:"varint,6,opt,name=num_spectators" json:"num_spectators,omitempty"`
	MaxPlayers         *uint32                                   `protobuf:"varint,7,opt,name=max_players" json:"max_players,omitempty"`
	SlotsFree          *uint32                                   `protobuf:"varint,8,opt,name=slots_free" json:"slots_free,omitempty"`
	ServerRegion       *uint32                                   `protobuf:"varint,9,opt,name=server_region" json:"server_region,omitempty"`
	ServerLoadavg      *float32                                  `protobuf:"fixed32,10,opt,name=server_loadavg" json:"server_loadavg,omitempty"`
	ServerTrusted      *bool                                     `protobuf:"varint,11,opt,name=server_trusted" json:"server_trusted,omitempty"`
	ServerDedicated    *bool                                     `protobuf:"varint,12,opt,name=server_dedicated" json:"server_dedicated,omitempty"`
	Strict             *uint32                                   `protobuf:"varint,17,opt,name=strict" json:"strict,omitempty"`
	Players            []*CMsgGameServerMatchmakingStatus_Player `protobuf:"bytes,13,rep,name=players" json:"players,omitempty"`
	GameState          *TF_GC_GameState                          `protobuf:"varint,14,opt,name=game_state,enum=TF_GC_GameState,def=0" json:"game_state,omitempty"`
	Event              *CMsgGameServerMatchmakingStatus_Event    `protobuf:"varint,15,opt,name=event,enum=CMsgGameServerMatchmakingStatus_Event,def=0" json:"event,omitempty"`
	MvmWave            *uint32                                   `protobuf:"varint,18,opt,name=mvm_wave" json:"mvm_wave,omitempty"`
	MvmCreditsAcquired *uint32                                   `protobuf:"varint,19,opt,name=mvm_credits_acquired" json:"mvm_credits_acquired,omitempty"`
	MvmCreditsDropped  *uint32                                   `protobuf:"varint,20,opt,name=mvm_credits_dropped" json:"mvm_credits_dropped,omitempty"`
	XXX_unrecognized   []byte                                    `json:"-"`
}

func (m *CMsgGameServerMatchmakingStatus) Reset()         { *m = CMsgGameServerMatchmakingStatus{} }
func (m *CMsgGameServerMatchmakingStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerMatchmakingStatus) ProtoMessage()    {}

const Default_CMsgGameServerMatchmakingStatus_ServerVersion uint32 = 1225
const Default_CMsgGameServerMatchmakingStatus_MatchmakingState ServerMatchmakingState = ServerMatchmakingState_ServerMatchmakingState_INVALID
const Default_CMsgGameServerMatchmakingStatus_MatchmakingMode TF_MatchmakingMode = TF_MatchmakingMode_TF_Matchmaking_INVALID
const Default_CMsgGameServerMatchmakingStatus_GameState TF_GC_GameState = TF_GC_GameState_TF_GC_GAMESTATE_STATE_INIT
const Default_CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event = CMsgGameServerMatchmakingStatus_None

func (m *CMsgGameServerMatchmakingStatus) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return Default_CMsgGameServerMatchmakingStatus_ServerVersion
}

func (m *CMsgGameServerMatchmakingStatus) GetMatchmakingState() ServerMatchmakingState {
	if m != nil && m.MatchmakingState != nil {
		return *m.MatchmakingState
	}
	return Default_CMsgGameServerMatchmakingStatus_MatchmakingState
}

func (m *CMsgGameServerMatchmakingStatus) GetMatchmakingMode() TF_MatchmakingMode {
	if m != nil && m.MatchmakingMode != nil {
		return *m.MatchmakingMode
	}
	return Default_CMsgGameServerMatchmakingStatus_MatchmakingMode
}

func (m *CMsgGameServerMatchmakingStatus) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

func (m *CMsgGameServerMatchmakingStatus) GetTags() string {
	if m != nil && m.Tags != nil {
		return *m.Tags
	}
	return ""
}

func (m *CMsgGameServerMatchmakingStatus) GetBotCount() uint32 {
	if m != nil && m.BotCount != nil {
		return *m.BotCount
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetNumSpectators() uint32 {
	if m != nil && m.NumSpectators != nil {
		return *m.NumSpectators
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMaxPlayers() uint32 {
	if m != nil && m.MaxPlayers != nil {
		return *m.MaxPlayers
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetSlotsFree() uint32 {
	if m != nil && m.SlotsFree != nil {
		return *m.SlotsFree
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetServerLoadavg() float32 {
	if m != nil && m.ServerLoadavg != nil {
		return *m.ServerLoadavg
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetServerTrusted() bool {
	if m != nil && m.ServerTrusted != nil {
		return *m.ServerTrusted
	}
	return false
}

func (m *CMsgGameServerMatchmakingStatus) GetServerDedicated() bool {
	if m != nil && m.ServerDedicated != nil {
		return *m.ServerDedicated
	}
	return false
}

func (m *CMsgGameServerMatchmakingStatus) GetStrict() uint32 {
	if m != nil && m.Strict != nil {
		return *m.Strict
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetPlayers() []*CMsgGameServerMatchmakingStatus_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgGameServerMatchmakingStatus) GetGameState() TF_GC_GameState {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return Default_CMsgGameServerMatchmakingStatus_GameState
}

func (m *CMsgGameServerMatchmakingStatus) GetEvent() CMsgGameServerMatchmakingStatus_Event {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return Default_CMsgGameServerMatchmakingStatus_Event
}

func (m *CMsgGameServerMatchmakingStatus) GetMvmWave() uint32 {
	if m != nil && m.MvmWave != nil {
		return *m.MvmWave
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMvmCreditsAcquired() uint32 {
	if m != nil && m.MvmCreditsAcquired != nil {
		return *m.MvmCreditsAcquired
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMvmCreditsDropped() uint32 {
	if m != nil && m.MvmCreditsDropped != nil {
		return *m.MvmCreditsDropped
	}
	return 0
}

type CMsgGameServerMatchmakingStatus_Player struct {
	SteamId          *uint64                                             `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	ConnectState     *CMsgGameServerMatchmakingStatus_PlayerConnectState `protobuf:"varint,2,opt,name=connect_state,enum=CMsgGameServerMatchmakingStatus_PlayerConnectState,def=0" json:"connect_state,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMsgGameServerMatchmakingStatus_Player) Reset() {
	*m = CMsgGameServerMatchmakingStatus_Player{}
}
func (m *CMsgGameServerMatchmakingStatus_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerMatchmakingStatus_Player) ProtoMessage()    {}

const Default_CMsgGameServerMatchmakingStatus_Player_ConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState = CMsgGameServerMatchmakingStatus_INVALID

func (m *CMsgGameServerMatchmakingStatus_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus_Player) GetConnectState() CMsgGameServerMatchmakingStatus_PlayerConnectState {
	if m != nil && m.ConnectState != nil {
		return *m.ConnectState
	}
	return Default_CMsgGameServerMatchmakingStatus_Player_ConnectState
}

type CMsgMatchmakingProgress struct {
	AvgWaitTimeNew                    *uint32 `protobuf:"varint,4,opt,name=avg_wait_time_new" json:"avg_wait_time_new,omitempty"`
	AvgWaitTimeJoinLate               *uint32 `protobuf:"varint,5,opt,name=avg_wait_time_join_late" json:"avg_wait_time_join_late,omitempty"`
	YourWaitTime                      *uint32 `protobuf:"varint,6,opt,name=your_wait_time" json:"your_wait_time,omitempty"`
	MatchingWorldwideSearchingPlayers *uint32 `protobuf:"varint,8,opt,name=matching_worldwide_searching_players" json:"matching_worldwide_searching_players,omitempty"`
	MatchingNearYouSearchingPlayers   *uint32 `protobuf:"varint,9,opt,name=matching_near_you_searching_players" json:"matching_near_you_searching_players,omitempty"`
	TotalWorldwideSearchingPlayers    *uint32 `protobuf:"varint,13,opt,name=total_worldwide_searching_players" json:"total_worldwide_searching_players,omitempty"`
	TotalNearYouSearchingPlayers      *uint32 `protobuf:"varint,14,opt,name=total_near_you_searching_players" json:"total_near_you_searching_players,omitempty"`
	MatchingWorldwideActivePlayers    *uint32 `protobuf:"varint,15,opt,name=matching_worldwide_active_players" json:"matching_worldwide_active_players,omitempty"`
	MatchingNearYouActivePlayers      *uint32 `protobuf:"varint,16,opt,name=matching_near_you_active_players" json:"matching_near_you_active_players,omitempty"`
	TotalWorldwideActivePlayers       *uint32 `protobuf:"varint,17,opt,name=total_worldwide_active_players" json:"total_worldwide_active_players,omitempty"`
	TotalNearYouActivePlayers         *uint32 `protobuf:"varint,18,opt,name=total_near_you_active_players" json:"total_near_you_active_players,omitempty"`
	MatchingWorldwideEmptyGameservers *uint32 `protobuf:"varint,19,opt,name=matching_worldwide_empty_gameservers" json:"matching_worldwide_empty_gameservers,omitempty"`
	MatchingNearYouEmptyGameservers   *uint32 `protobuf:"varint,20,opt,name=matching_near_you_empty_gameservers" json:"matching_near_you_empty_gameservers,omitempty"`
	TotalWorldwideEmptyGameservers    *uint32 `protobuf:"varint,21,opt,name=total_worldwide_empty_gameservers" json:"total_worldwide_empty_gameservers,omitempty"`
	TotalNearYouEmptyGameservers      *uint32 `protobuf:"varint,22,opt,name=total_near_you_empty_gameservers" json:"total_near_you_empty_gameservers,omitempty"`
	UrgencyPct                        *uint32 `protobuf:"varint,1,opt,name=urgency_pct" json:"urgency_pct,omitempty"`
	XXX_unrecognized                  []byte  `json:"-"`
}

func (m *CMsgMatchmakingProgress) Reset()         { *m = CMsgMatchmakingProgress{} }
func (m *CMsgMatchmakingProgress) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchmakingProgress) ProtoMessage()    {}

func (m *CMsgMatchmakingProgress) GetAvgWaitTimeNew() uint32 {
	if m != nil && m.AvgWaitTimeNew != nil {
		return *m.AvgWaitTimeNew
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetAvgWaitTimeJoinLate() uint32 {
	if m != nil && m.AvgWaitTimeJoinLate != nil {
		return *m.AvgWaitTimeJoinLate
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetYourWaitTime() uint32 {
	if m != nil && m.YourWaitTime != nil {
		return *m.YourWaitTime
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingWorldwideSearchingPlayers() uint32 {
	if m != nil && m.MatchingWorldwideSearchingPlayers != nil {
		return *m.MatchingWorldwideSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingNearYouSearchingPlayers() uint32 {
	if m != nil && m.MatchingNearYouSearchingPlayers != nil {
		return *m.MatchingNearYouSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalWorldwideSearchingPlayers() uint32 {
	if m != nil && m.TotalWorldwideSearchingPlayers != nil {
		return *m.TotalWorldwideSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalNearYouSearchingPlayers() uint32 {
	if m != nil && m.TotalNearYouSearchingPlayers != nil {
		return *m.TotalNearYouSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingWorldwideActivePlayers() uint32 {
	if m != nil && m.MatchingWorldwideActivePlayers != nil {
		return *m.MatchingWorldwideActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingNearYouActivePlayers() uint32 {
	if m != nil && m.MatchingNearYouActivePlayers != nil {
		return *m.MatchingNearYouActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalWorldwideActivePlayers() uint32 {
	if m != nil && m.TotalWorldwideActivePlayers != nil {
		return *m.TotalWorldwideActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalNearYouActivePlayers() uint32 {
	if m != nil && m.TotalNearYouActivePlayers != nil {
		return *m.TotalNearYouActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingWorldwideEmptyGameservers() uint32 {
	if m != nil && m.MatchingWorldwideEmptyGameservers != nil {
		return *m.MatchingWorldwideEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingNearYouEmptyGameservers() uint32 {
	if m != nil && m.MatchingNearYouEmptyGameservers != nil {
		return *m.MatchingNearYouEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalWorldwideEmptyGameservers() uint32 {
	if m != nil && m.TotalWorldwideEmptyGameservers != nil {
		return *m.TotalWorldwideEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalNearYouEmptyGameservers() uint32 {
	if m != nil && m.TotalNearYouEmptyGameservers != nil {
		return *m.TotalNearYouEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetUrgencyPct() uint32 {
	if m != nil && m.UrgencyPct != nil {
		return *m.UrgencyPct
	}
	return 0
}

type CMsgMvMVictoryInfo struct {
	Players          []*CMsgMvMVictoryInfo_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	TourName         *string                      `protobuf:"bytes,2,opt,name=tour_name" json:"tour_name,omitempty"`
	MissionName      *string                      `protobuf:"bytes,3,opt,name=mission_name" json:"mission_name,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgMvMVictoryInfo) Reset()         { *m = CMsgMvMVictoryInfo{} }
func (m *CMsgMvMVictoryInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgMvMVictoryInfo) ProtoMessage()    {}

func (m *CMsgMvMVictoryInfo) GetPlayers() []*CMsgMvMVictoryInfo_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgMvMVictoryInfo) GetTourName() string {
	if m != nil && m.TourName != nil {
		return *m.TourName
	}
	return ""
}

func (m *CMsgMvMVictoryInfo) GetMissionName() string {
	if m != nil && m.MissionName != nil {
		return *m.MissionName
	}
	return ""
}

type CMsgMvMVictoryInfo_Item struct {
	GrantReason                *CMsgMvMVictoryInfo_GrantReason `protobuf:"varint,1,opt,name=grant_reason,enum=CMsgMvMVictoryInfo_GrantReason,def=0" json:"grant_reason,omitempty"`
	ItemData                   []byte                          `protobuf:"bytes,2,opt,name=item_data" json:"item_data,omitempty"`
	SquadSurplusClaimerSteamId *uint64                         `protobuf:"fixed64,3,opt,name=squad_surplus_claimer_steam_id" json:"squad_surplus_claimer_steam_id,omitempty"`
	XXX_unrecognized           []byte                          `json:"-"`
}

func (m *CMsgMvMVictoryInfo_Item) Reset()         { *m = CMsgMvMVictoryInfo_Item{} }
func (m *CMsgMvMVictoryInfo_Item) String() string { return proto.CompactTextString(m) }
func (*CMsgMvMVictoryInfo_Item) ProtoMessage()    {}

const Default_CMsgMvMVictoryInfo_Item_GrantReason CMsgMvMVictoryInfo_GrantReason = CMsgMvMVictoryInfo_INVALID

func (m *CMsgMvMVictoryInfo_Item) GetGrantReason() CMsgMvMVictoryInfo_GrantReason {
	if m != nil && m.GrantReason != nil {
		return *m.GrantReason
	}
	return Default_CMsgMvMVictoryInfo_Item_GrantReason
}

func (m *CMsgMvMVictoryInfo_Item) GetItemData() []byte {
	if m != nil {
		return m.ItemData
	}
	return nil
}

func (m *CMsgMvMVictoryInfo_Item) GetSquadSurplusClaimerSteamId() uint64 {
	if m != nil && m.SquadSurplusClaimerSteamId != nil {
		return *m.SquadSurplusClaimerSteamId
	}
	return 0
}

type CMsgMvMVictoryInfo_Player struct {
	SteamId              *uint64                    `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	BadgeGranted         *bool                      `protobuf:"varint,3,opt,name=badge_granted" json:"badge_granted,omitempty"`
	BadgeProgressUpdated *bool                      `protobuf:"varint,4,opt,name=badge_progress_updated" json:"badge_progress_updated,omitempty"`
	BadgeLeveled         *bool                      `protobuf:"varint,5,opt,name=badge_leveled" json:"badge_leveled,omitempty"`
	BadgeLevel           *uint32                    `protobuf:"varint,6,opt,name=badge_level" json:"badge_level,omitempty"`
	BadgeProgressBits    *uint32                    `protobuf:"varint,7,opt,name=badge_progress_bits" json:"badge_progress_bits,omitempty"`
	Items                []*CMsgMvMVictoryInfo_Item `protobuf:"bytes,8,rep,name=items" json:"items,omitempty"`
	VoucherMissing       *bool                      `protobuf:"varint,9,opt,name=voucher_missing" json:"voucher_missing,omitempty"`
	XXX_unrecognized     []byte                     `json:"-"`
}

func (m *CMsgMvMVictoryInfo_Player) Reset()         { *m = CMsgMvMVictoryInfo_Player{} }
func (m *CMsgMvMVictoryInfo_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgMvMVictoryInfo_Player) ProtoMessage()    {}

func (m *CMsgMvMVictoryInfo_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeGranted() bool {
	if m != nil && m.BadgeGranted != nil {
		return *m.BadgeGranted
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeProgressUpdated() bool {
	if m != nil && m.BadgeProgressUpdated != nil {
		return *m.BadgeProgressUpdated
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeLeveled() bool {
	if m != nil && m.BadgeLeveled != nil {
		return *m.BadgeLeveled
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeProgressBits() uint32 {
	if m != nil && m.BadgeProgressBits != nil {
		return *m.BadgeProgressBits
	}
	return 0
}

func (m *CMsgMvMVictoryInfo_Player) GetItems() []*CMsgMvMVictoryInfo_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgMvMVictoryInfo_Player) GetVoucherMissing() bool {
	if m != nil && m.VoucherMissing != nil {
		return *m.VoucherMissing
	}
	return false
}

type CGCMsgTFHelloResponse struct {
	VersionCheck     *uint32  `protobuf:"varint,1,opt,name=version_check" json:"version_check,omitempty"`
	VersionChecksum  []uint64 `protobuf:"varint,2,rep,name=version_checksum" json:"version_checksum,omitempty"`
	VersionVerbose   *uint32  `protobuf:"varint,3,opt,name=version_verbose" json:"version_verbose,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CGCMsgTFHelloResponse) Reset()         { *m = CGCMsgTFHelloResponse{} }
func (m *CGCMsgTFHelloResponse) String() string { return proto.CompactTextString(m) }
func (*CGCMsgTFHelloResponse) ProtoMessage()    {}

func (m *CGCMsgTFHelloResponse) GetVersionCheck() uint32 {
	if m != nil && m.VersionCheck != nil {
		return *m.VersionCheck
	}
	return 0
}

func (m *CGCMsgTFHelloResponse) GetVersionChecksum() []uint64 {
	if m != nil {
		return m.VersionChecksum
	}
	return nil
}

func (m *CGCMsgTFHelloResponse) GetVersionVerbose() uint32 {
	if m != nil && m.VersionVerbose != nil {
		return *m.VersionVerbose
	}
	return 0
}

type CGCMsgTFSync struct {
	VersionChecksum   []byte  `protobuf:"bytes,1,opt,name=version_checksum" json:"version_checksum,omitempty"`
	VersionCheck      *uint32 `protobuf:"varint,2,opt,name=version_check" json:"version_check,omitempty"`
	VersionCheckEx    *uint32 `protobuf:"varint,3,opt,name=version_check_ex" json:"version_check_ex,omitempty"`
	VersionCheckEx2   *uint32 `protobuf:"varint,4,opt,name=version_check_ex2" json:"version_check_ex2,omitempty"`
	VersionChecksumEx []byte  `protobuf:"bytes,5,opt,name=version_checksum_ex" json:"version_checksum_ex,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CGCMsgTFSync) Reset()         { *m = CGCMsgTFSync{} }
func (m *CGCMsgTFSync) String() string { return proto.CompactTextString(m) }
func (*CGCMsgTFSync) ProtoMessage()    {}

func (m *CGCMsgTFSync) GetVersionChecksum() []byte {
	if m != nil {
		return m.VersionChecksum
	}
	return nil
}

func (m *CGCMsgTFSync) GetVersionCheck() uint32 {
	if m != nil && m.VersionCheck != nil {
		return *m.VersionCheck
	}
	return 0
}

func (m *CGCMsgTFSync) GetVersionCheckEx() uint32 {
	if m != nil && m.VersionCheckEx != nil {
		return *m.VersionCheckEx
	}
	return 0
}

func (m *CGCMsgTFSync) GetVersionCheckEx2() uint32 {
	if m != nil && m.VersionCheckEx2 != nil {
		return *m.VersionCheckEx2
	}
	return 0
}

func (m *CGCMsgTFSync) GetVersionChecksumEx() []byte {
	if m != nil {
		return m.VersionChecksumEx
	}
	return nil
}

type CGCMsgTFSyncEx struct {
	VersionChecksum   *string `protobuf:"bytes,1,opt,name=version_checksum" json:"version_checksum,omitempty"`
	VersionChecksumEx []byte  `protobuf:"bytes,2,opt,name=version_checksum_ex" json:"version_checksum_ex,omitempty"`
	VersionCheck      *uint32 `protobuf:"varint,3,opt,name=version_check" json:"version_check,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CGCMsgTFSyncEx) Reset()         { *m = CGCMsgTFSyncEx{} }
func (m *CGCMsgTFSyncEx) String() string { return proto.CompactTextString(m) }
func (*CGCMsgTFSyncEx) ProtoMessage()    {}

func (m *CGCMsgTFSyncEx) GetVersionChecksum() string {
	if m != nil && m.VersionChecksum != nil {
		return *m.VersionChecksum
	}
	return ""
}

func (m *CGCMsgTFSyncEx) GetVersionChecksumEx() []byte {
	if m != nil {
		return m.VersionChecksumEx
	}
	return nil
}

func (m *CGCMsgTFSyncEx) GetVersionCheck() uint32 {
	if m != nil && m.VersionCheck != nil {
		return *m.VersionCheck
	}
	return 0
}

type CMsgMvMVictory struct {
	LegacyMissionIndex *uint32                  `protobuf:"varint,1,opt,name=legacy_mission_index" json:"legacy_mission_index,omitempty"`
	TourNameMannup     *string                  `protobuf:"bytes,5,opt,name=tour_name_mannup" json:"tour_name_mannup,omitempty"`
	MissionName        *string                  `protobuf:"bytes,6,opt,name=mission_name" json:"mission_name,omitempty"`
	Players            []*CMsgMvMVictory_Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	LobbyId            *uint64                  `protobuf:"varint,3,opt,name=lobby_id" json:"lobby_id,omitempty"`
	EventTime          *uint32                  `protobuf:"fixed32,4,opt,name=event_time" json:"event_time,omitempty"`
	XXX_unrecognized   []byte                   `json:"-"`
}

func (m *CMsgMvMVictory) Reset()         { *m = CMsgMvMVictory{} }
func (m *CMsgMvMVictory) String() string { return proto.CompactTextString(m) }
func (*CMsgMvMVictory) ProtoMessage()    {}

func (m *CMsgMvMVictory) GetLegacyMissionIndex() uint32 {
	if m != nil && m.LegacyMissionIndex != nil {
		return *m.LegacyMissionIndex
	}
	return 0
}

func (m *CMsgMvMVictory) GetTourNameMannup() string {
	if m != nil && m.TourNameMannup != nil {
		return *m.TourNameMannup
	}
	return ""
}

func (m *CMsgMvMVictory) GetMissionName() string {
	if m != nil && m.MissionName != nil {
		return *m.MissionName
	}
	return ""
}

func (m *CMsgMvMVictory) GetPlayers() []*CMsgMvMVictory_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgMvMVictory) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgMvMVictory) GetEventTime() uint32 {
	if m != nil && m.EventTime != nil {
		return *m.EventTime
	}
	return 0
}

type CMsgMvMVictory_Player struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	SquadSurplus     *bool   `protobuf:"varint,2,opt,name=squad_surplus" json:"squad_surplus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgMvMVictory_Player) Reset()         { *m = CMsgMvMVictory_Player{} }
func (m *CMsgMvMVictory_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgMvMVictory_Player) ProtoMessage()    {}

func (m *CMsgMvMVictory_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgMvMVictory_Player) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

type CMsgMvMMannUpVictoryReply struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgMvMMannUpVictoryReply) Reset()         { *m = CMsgMvMMannUpVictoryReply{} }
func (m *CMsgMvMMannUpVictoryReply) String() string { return proto.CompactTextString(m) }
func (*CMsgMvMMannUpVictoryReply) ProtoMessage()    {}

func (m *CMsgMvMMannUpVictoryReply) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgGameServerKickingLobby struct {
	ConnectedPlayers []uint64 `protobuf:"fixed64,1,rep,name=connected_players" json:"connected_players,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGameServerKickingLobby) Reset()         { *m = CMsgGameServerKickingLobby{} }
func (m *CMsgGameServerKickingLobby) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerKickingLobby) ProtoMessage()    {}

func (m *CMsgGameServerKickingLobby) GetConnectedPlayers() []uint64 {
	if m != nil {
		return m.ConnectedPlayers
	}
	return nil
}

type CMsgLeaveGameAndPrepareToJoinParty struct {
	PartyId          *uint64 `protobuf:"fixed64,1,opt,name=party_id" json:"party_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgLeaveGameAndPrepareToJoinParty) Reset()         { *m = CMsgLeaveGameAndPrepareToJoinParty{} }
func (m *CMsgLeaveGameAndPrepareToJoinParty) String() string { return proto.CompactTextString(m) }
func (*CMsgLeaveGameAndPrepareToJoinParty) ProtoMessage()    {}

func (m *CMsgLeaveGameAndPrepareToJoinParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

type CMsgRemovePlayerFromLobby struct {
	SteamId          *uint64                                 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	RemoveReason     *CMsgRemovePlayerFromLobby_RemoveReason `protobuf:"varint,2,opt,name=remove_reason,enum=CMsgRemovePlayerFromLobby_RemoveReason,def=0" json:"remove_reason,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgRemovePlayerFromLobby) Reset()         { *m = CMsgRemovePlayerFromLobby{} }
func (m *CMsgRemovePlayerFromLobby) String() string { return proto.CompactTextString(m) }
func (*CMsgRemovePlayerFromLobby) ProtoMessage()    {}

const Default_CMsgRemovePlayerFromLobby_RemoveReason CMsgRemovePlayerFromLobby_RemoveReason = CMsgRemovePlayerFromLobby_VOTE_KICK

func (m *CMsgRemovePlayerFromLobby) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgRemovePlayerFromLobby) GetRemoveReason() CMsgRemovePlayerFromLobby_RemoveReason {
	if m != nil && m.RemoveReason != nil {
		return *m.RemoveReason
	}
	return Default_CMsgRemovePlayerFromLobby_RemoveReason
}

type CMsgSetLobbySafeToLeave struct {
	LobbyId          *uint64 `protobuf:"fixed64,1,opt,name=lobby_id" json:"lobby_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSetLobbySafeToLeave) Reset()         { *m = CMsgSetLobbySafeToLeave{} }
func (m *CMsgSetLobbySafeToLeave) String() string { return proto.CompactTextString(m) }
func (*CMsgSetLobbySafeToLeave) ProtoMessage()    {}

func (m *CMsgSetLobbySafeToLeave) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

type CMsgHalloween_ServerBossEvent struct {
	EventCounter     *uint32  `protobuf:"varint,1,opt,name=event_counter" json:"event_counter,omitempty"`
	Timestamp        *uint32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	BossType         *uint32  `protobuf:"varint,3,opt,name=boss_type" json:"boss_type,omitempty"`
	BossLevel        *uint32  `protobuf:"varint,4,opt,name=boss_level" json:"boss_level,omitempty"`
	EventType        *uint32  `protobuf:"varint,5,opt,name=event_type" json:"event_type,omitempty"`
	PlayersInvolved  *uint32  `protobuf:"varint,6,opt,name=players_involved" json:"players_involved,omitempty"`
	ElapsedTime      *float32 `protobuf:"fixed32,7,opt,name=elapsed_time" json:"elapsed_time,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgHalloween_ServerBossEvent) Reset()         { *m = CMsgHalloween_ServerBossEvent{} }
func (m *CMsgHalloween_ServerBossEvent) String() string { return proto.CompactTextString(m) }
func (*CMsgHalloween_ServerBossEvent) ProtoMessage()    {}

func (m *CMsgHalloween_ServerBossEvent) GetEventCounter() uint32 {
	if m != nil && m.EventCounter != nil {
		return *m.EventCounter
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetBossType() uint32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetBossLevel() uint32 {
	if m != nil && m.BossLevel != nil {
		return *m.BossLevel
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetPlayersInvolved() uint32 {
	if m != nil && m.PlayersInvolved != nil {
		return *m.PlayersInvolved
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetElapsedTime() float32 {
	if m != nil && m.ElapsedTime != nil {
		return *m.ElapsedTime
	}
	return 0
}

type CMsgHalloween_Merasmus2012 struct {
	EventCounter     *uint32 `protobuf:"varint,1,opt,name=event_counter" json:"event_counter,omitempty"`
	TimeSubmitted    *uint32 `protobuf:"fixed32,2,opt,name=time_submitted" json:"time_submitted,omitempty"`
	IsValveServer    *bool   `protobuf:"varint,3,opt,name=is_valve_server" json:"is_valve_server,omitempty"`
	BossLevel        *uint32 `protobuf:"varint,4,opt,name=boss_level" json:"boss_level,omitempty"`
	SpawnedHealth    *uint32 `protobuf:"varint,5,opt,name=spawned_health" json:"spawned_health,omitempty"`
	RemainingHealth  *uint32 `protobuf:"varint,6,opt,name=remaining_health" json:"remaining_health,omitempty"`
	LifeTime         *uint32 `protobuf:"varint,7,opt,name=life_time" json:"life_time,omitempty"`
	BombKills        *uint32 `protobuf:"varint,8,opt,name=bomb_kills" json:"bomb_kills,omitempty"`
	StaffKills       *uint32 `protobuf:"varint,9,opt,name=staff_kills" json:"staff_kills,omitempty"`
	PvpKills         *uint32 `protobuf:"varint,10,opt,name=pvp_kills" json:"pvp_kills,omitempty"`
	ProphuntTime1    *uint32 `protobuf:"varint,11,opt,name=prophunt_time1" json:"prophunt_time1,omitempty"`
	ProphuntTime2    *uint32 `protobuf:"varint,12,opt,name=prophunt_time2" json:"prophunt_time2,omitempty"`
	DmgScout         *uint32 `protobuf:"varint,13,opt,name=dmg_scout" json:"dmg_scout,omitempty"`
	DmgSniper        *uint32 `protobuf:"varint,14,opt,name=dmg_sniper" json:"dmg_sniper,omitempty"`
	DmgSoldier       *uint32 `protobuf:"varint,15,opt,name=dmg_soldier" json:"dmg_soldier,omitempty"`
	DmgDemo          *uint32 `protobuf:"varint,16,opt,name=dmg_demo" json:"dmg_demo,omitempty"`
	DmgMedic         *uint32 `protobuf:"varint,17,opt,name=dmg_medic" json:"dmg_medic,omitempty"`
	DmgHeavy         *uint32 `protobuf:"varint,18,opt,name=dmg_heavy" json:"dmg_heavy,omitempty"`
	DmgPyro          *uint32 `protobuf:"varint,19,opt,name=dmg_pyro" json:"dmg_pyro,omitempty"`
	DmgSpy           *uint32 `protobuf:"varint,20,opt,name=dmg_spy" json:"dmg_spy,omitempty"`
	DmgEngineer      *uint32 `protobuf:"varint,21,opt,name=dmg_engineer" json:"dmg_engineer,omitempty"`
	ScoutCount       *uint32 `protobuf:"varint,22,opt,name=scout_count" json:"scout_count,omitempty"`
	SniperCount      *uint32 `protobuf:"varint,23,opt,name=sniper_count" json:"sniper_count,omitempty"`
	SoliderCount     *uint32 `protobuf:"varint,24,opt,name=solider_count" json:"solider_count,omitempty"`
	DemoCount        *uint32 `protobuf:"varint,25,opt,name=demo_count" json:"demo_count,omitempty"`
	MedicCount       *uint32 `protobuf:"varint,26,opt,name=medic_count" json:"medic_count,omitempty"`
	HeavyCount       *uint32 `protobuf:"varint,27,opt,name=heavy_count" json:"heavy_count,omitempty"`
	PyroCount        *uint32 `protobuf:"varint,28,opt,name=pyro_count" json:"pyro_count,omitempty"`
	SpyCount         *uint32 `protobuf:"varint,29,opt,name=spy_count" json:"spy_count,omitempty"`
	EngineerCount    *uint32 `protobuf:"varint,30,opt,name=engineer_count" json:"engineer_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgHalloween_Merasmus2012) Reset()         { *m = CMsgHalloween_Merasmus2012{} }
func (m *CMsgHalloween_Merasmus2012) String() string { return proto.CompactTextString(m) }
func (*CMsgHalloween_Merasmus2012) ProtoMessage()    {}

func (m *CMsgHalloween_Merasmus2012) GetEventCounter() uint32 {
	if m != nil && m.EventCounter != nil {
		return *m.EventCounter
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetTimeSubmitted() uint32 {
	if m != nil && m.TimeSubmitted != nil {
		return *m.TimeSubmitted
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetIsValveServer() bool {
	if m != nil && m.IsValveServer != nil {
		return *m.IsValveServer
	}
	return false
}

func (m *CMsgHalloween_Merasmus2012) GetBossLevel() uint32 {
	if m != nil && m.BossLevel != nil {
		return *m.BossLevel
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSpawnedHealth() uint32 {
	if m != nil && m.SpawnedHealth != nil {
		return *m.SpawnedHealth
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetRemainingHealth() uint32 {
	if m != nil && m.RemainingHealth != nil {
		return *m.RemainingHealth
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetLifeTime() uint32 {
	if m != nil && m.LifeTime != nil {
		return *m.LifeTime
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetBombKills() uint32 {
	if m != nil && m.BombKills != nil {
		return *m.BombKills
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetStaffKills() uint32 {
	if m != nil && m.StaffKills != nil {
		return *m.StaffKills
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetPvpKills() uint32 {
	if m != nil && m.PvpKills != nil {
		return *m.PvpKills
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetProphuntTime1() uint32 {
	if m != nil && m.ProphuntTime1 != nil {
		return *m.ProphuntTime1
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetProphuntTime2() uint32 {
	if m != nil && m.ProphuntTime2 != nil {
		return *m.ProphuntTime2
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgScout() uint32 {
	if m != nil && m.DmgScout != nil {
		return *m.DmgScout
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgSniper() uint32 {
	if m != nil && m.DmgSniper != nil {
		return *m.DmgSniper
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgSoldier() uint32 {
	if m != nil && m.DmgSoldier != nil {
		return *m.DmgSoldier
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgDemo() uint32 {
	if m != nil && m.DmgDemo != nil {
		return *m.DmgDemo
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgMedic() uint32 {
	if m != nil && m.DmgMedic != nil {
		return *m.DmgMedic
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgHeavy() uint32 {
	if m != nil && m.DmgHeavy != nil {
		return *m.DmgHeavy
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgPyro() uint32 {
	if m != nil && m.DmgPyro != nil {
		return *m.DmgPyro
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgSpy() uint32 {
	if m != nil && m.DmgSpy != nil {
		return *m.DmgSpy
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgEngineer() uint32 {
	if m != nil && m.DmgEngineer != nil {
		return *m.DmgEngineer
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetScoutCount() uint32 {
	if m != nil && m.ScoutCount != nil {
		return *m.ScoutCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSniperCount() uint32 {
	if m != nil && m.SniperCount != nil {
		return *m.SniperCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSoliderCount() uint32 {
	if m != nil && m.SoliderCount != nil {
		return *m.SoliderCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDemoCount() uint32 {
	if m != nil && m.DemoCount != nil {
		return *m.DemoCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetMedicCount() uint32 {
	if m != nil && m.MedicCount != nil {
		return *m.MedicCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetHeavyCount() uint32 {
	if m != nil && m.HeavyCount != nil {
		return *m.HeavyCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetPyroCount() uint32 {
	if m != nil && m.PyroCount != nil {
		return *m.PyroCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSpyCount() uint32 {
	if m != nil && m.SpyCount != nil {
		return *m.SpyCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetEngineerCount() uint32 {
	if m != nil && m.EngineerCount != nil {
		return *m.EngineerCount
	}
	return 0
}

type CMsgUpdateHalloweenMerasmusLootLevel struct {
	Players          []*CMsgUpdateHalloweenMerasmusLootLevel_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	MerasmusLevel    *uint32                                        `protobuf:"varint,2,opt,name=merasmus_level" json:"merasmus_level,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel) Reset()         { *m = CMsgUpdateHalloweenMerasmusLootLevel{} }
func (m *CMsgUpdateHalloweenMerasmusLootLevel) String() string { return proto.CompactTextString(m) }
func (*CMsgUpdateHalloweenMerasmusLootLevel) ProtoMessage()    {}

func (m *CMsgUpdateHalloweenMerasmusLootLevel) GetPlayers() []*CMsgUpdateHalloweenMerasmusLootLevel_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel) GetMerasmusLevel() uint32 {
	if m != nil && m.MerasmusLevel != nil {
		return *m.MerasmusLevel
	}
	return 0
}

type CMsgUpdateHalloweenMerasmusLootLevel_Player struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel_Player) Reset() {
	*m = CMsgUpdateHalloweenMerasmusLootLevel_Player{}
}
func (m *CMsgUpdateHalloweenMerasmusLootLevel_Player) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgUpdateHalloweenMerasmusLootLevel_Player) ProtoMessage() {}

func (m *CMsgUpdateHalloweenMerasmusLootLevel_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CAttribute_String struct {
	Value            *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_String) Reset()         { *m = CAttribute_String{} }
func (m *CAttribute_String) String() string { return proto.CompactTextString(m) }
func (*CAttribute_String) ProtoMessage()    {}

func (m *CAttribute_String) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CAttribute_ItemDynamicRecipeComponentDefinedItem struct {
	ItemDef          *uint32 `protobuf:"varint,1,opt,name=item_def" json:"item_def,omitempty"`
	ItemQuality      *uint32 `protobuf:"varint,2,opt,name=item_quality" json:"item_quality,omitempty"`
	ItemFlags        *uint32 `protobuf:"varint,3,opt,name=item_flags" json:"item_flags,omitempty"`
	AttributesString *string `protobuf:"bytes,4,opt,name=attributes_string" json:"attributes_string,omitempty"`
	ItemCount        *uint32 `protobuf:"varint,5,opt,name=item_count" json:"item_count,omitempty"`
	ItemsFulfilled   *uint32 `protobuf:"varint,6,opt,name=items_fulfilled" json:"items_fulfilled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) Reset() {
	*m = CAttribute_ItemDynamicRecipeComponentDefinedItem{}
}
func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) String() string {
	return proto.CompactTextString(m)
}
func (*CAttribute_ItemDynamicRecipeComponentDefinedItem) ProtoMessage() {}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) GetItemQuality() uint32 {
	if m != nil && m.ItemQuality != nil {
		return *m.ItemQuality
	}
	return 0
}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) GetItemFlags() uint32 {
	if m != nil && m.ItemFlags != nil {
		return *m.ItemFlags
	}
	return 0
}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) GetAttributesString() string {
	if m != nil && m.AttributesString != nil {
		return *m.AttributesString
	}
	return ""
}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) GetItemCount() uint32 {
	if m != nil && m.ItemCount != nil {
		return *m.ItemCount
	}
	return 0
}

func (m *CAttribute_ItemDynamicRecipeComponentDefinedItem) GetItemsFulfilled() uint32 {
	if m != nil && m.ItemsFulfilled != nil {
		return *m.ItemsFulfilled
	}
	return 0
}

type CAttribute_ItemSlotCriteria struct {
	Tags             *string `protobuf:"bytes,1,opt,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_ItemSlotCriteria) Reset()         { *m = CAttribute_ItemSlotCriteria{} }
func (m *CAttribute_ItemSlotCriteria) String() string { return proto.CompactTextString(m) }
func (*CAttribute_ItemSlotCriteria) ProtoMessage()    {}

func (m *CAttribute_ItemSlotCriteria) GetTags() string {
	if m != nil && m.Tags != nil {
		return *m.Tags
	}
	return ""
}

type CMsgSetItemSlotAttribute struct {
	ItemId             *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	SlotItemOriginalId *uint64 `protobuf:"varint,2,opt,name=slot_item_original_id" json:"slot_item_original_id,omitempty"`
	SlotIndex          *uint32 `protobuf:"varint,3,opt,name=slot_index" json:"slot_index,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgSetItemSlotAttribute) Reset()         { *m = CMsgSetItemSlotAttribute{} }
func (m *CMsgSetItemSlotAttribute) String() string { return proto.CompactTextString(m) }
func (*CMsgSetItemSlotAttribute) ProtoMessage()    {}

func (m *CMsgSetItemSlotAttribute) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgSetItemSlotAttribute) GetSlotItemOriginalId() uint64 {
	if m != nil && m.SlotItemOriginalId != nil {
		return *m.SlotItemOriginalId
	}
	return 0
}

func (m *CMsgSetItemSlotAttribute) GetSlotIndex() uint32 {
	if m != nil && m.SlotIndex != nil {
		return *m.SlotIndex
	}
	return 0
}

func init() {
	proto.RegisterEnum("ETFGCMsg", ETFGCMsg_name, ETFGCMsg_value)
	proto.RegisterEnum("EServerModificationItemType", EServerModificationItemType_name, EServerModificationItemType_value)
	proto.RegisterEnum("TF_MatchmakingMode", TF_MatchmakingMode_name, TF_MatchmakingMode_value)
	proto.RegisterEnum("TF_Matchmaking_WizardStep", TF_Matchmaking_WizardStep_name, TF_Matchmaking_WizardStep_value)
	proto.RegisterEnum("TF_GC_GameState", TF_GC_GameState_name, TF_GC_GameState_value)
	proto.RegisterEnum("TF_GC_TEAM", TF_GC_TEAM_name, TF_GC_TEAM_value)
	proto.RegisterEnum("TFLobbyReadyState", TFLobbyReadyState_name, TFLobbyReadyState_value)
	proto.RegisterEnum("ChatChannelTypeT", ChatChannelTypeT_name, ChatChannelTypeT_value)
	proto.RegisterEnum("ServerMatchmakingState", ServerMatchmakingState_name, ServerMatchmakingState_value)
	proto.RegisterEnum("CMsgGC_GameServer_CreateIdentityResponse_EStatus", CMsgGC_GameServer_CreateIdentityResponse_EStatus_name, CMsgGC_GameServer_CreateIdentityResponse_EStatus_value)
	proto.RegisterEnum("CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse", CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_name, CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_value)
	proto.RegisterEnum("CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse", CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_name, CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_value)
	proto.RegisterEnum("CSOTFParty_State", CSOTFParty_State_name, CSOTFParty_State_value)
	proto.RegisterEnum("CTFLobbyMember_ConnectState", CTFLobbyMember_ConnectState_name, CTFLobbyMember_ConnectState_value)
	proto.RegisterEnum("CSOTFLobby_State", CSOTFLobby_State_name, CSOTFLobby_State_value)
	proto.RegisterEnum("CSOTFLobby_LobbyType", CSOTFLobby_LobbyType_name, CSOTFLobby_LobbyType_value)
	proto.RegisterEnum("CMsgGameServerMatchmakingStatus_PlayerConnectState", CMsgGameServerMatchmakingStatus_PlayerConnectState_name, CMsgGameServerMatchmakingStatus_PlayerConnectState_value)
	proto.RegisterEnum("CMsgGameServerMatchmakingStatus_Event", CMsgGameServerMatchmakingStatus_Event_name, CMsgGameServerMatchmakingStatus_Event_value)
	proto.RegisterEnum("CMsgMvMVictoryInfo_GrantReason", CMsgMvMVictoryInfo_GrantReason_name, CMsgMvMVictoryInfo_GrantReason_value)
	proto.RegisterEnum("CMsgRemovePlayerFromLobby_RemoveReason", CMsgRemovePlayerFromLobby_RemoveReason_name, CMsgRemovePlayerFromLobby_RemoveReason_value)
}
