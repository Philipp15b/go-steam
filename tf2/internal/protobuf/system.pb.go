// Code generated by protoc-gen-go.
// source: gcsystemmsgs.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type EGCSystemMsg int32

const (
	EGCSystemMsg_k_EGCMsgInvalid                           EGCSystemMsg = 0
	EGCSystemMsg_k_EGCMsgMulti                             EGCSystemMsg = 1
	EGCSystemMsg_k_EGCMsgGenericReply                      EGCSystemMsg = 10
	EGCSystemMsg_k_EGCMsgSystemBase                        EGCSystemMsg = 50
	EGCSystemMsg_k_EGCMsgAchievementAwarded                EGCSystemMsg = 51
	EGCSystemMsg_k_EGCMsgConCommand                        EGCSystemMsg = 52
	EGCSystemMsg_k_EGCMsgStartPlaying                      EGCSystemMsg = 53
	EGCSystemMsg_k_EGCMsgStopPlaying                       EGCSystemMsg = 54
	EGCSystemMsg_k_EGCMsgStartGameserver                   EGCSystemMsg = 55
	EGCSystemMsg_k_EGCMsgStopGameserver                    EGCSystemMsg = 56
	EGCSystemMsg_k_EGCMsgWGRequest                         EGCSystemMsg = 57
	EGCSystemMsg_k_EGCMsgWGResponse                        EGCSystemMsg = 58
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchema            EGCSystemMsg = 59
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchemaResponse    EGCSystemMsg = 60
	EGCSystemMsg_k_EGCMsgGetUserStatsDEPRECATED            EGCSystemMsg = 61
	EGCSystemMsg_k_EGCMsgGetUserStatsResponse              EGCSystemMsg = 62
	EGCSystemMsg_k_EGCMsgAppInfoUpdated                    EGCSystemMsg = 63
	EGCSystemMsg_k_EGCMsgValidateSession                   EGCSystemMsg = 64
	EGCSystemMsg_k_EGCMsgValidateSessionResponse           EGCSystemMsg = 65
	EGCSystemMsg_k_EGCMsgLookupAccountFromInput            EGCSystemMsg = 66
	EGCSystemMsg_k_EGCMsgSendHTTPRequest                   EGCSystemMsg = 67
	EGCSystemMsg_k_EGCMsgSendHTTPRequestResponse           EGCSystemMsg = 68
	EGCSystemMsg_k_EGCMsgPreTestSetup                      EGCSystemMsg = 69
	EGCSystemMsg_k_EGCMsgRecordSupportAction               EGCSystemMsg = 70
	EGCSystemMsg_k_EGCMsgGetAccountDetails_DEPRECATED      EGCSystemMsg = 71
	EGCSystemMsg_k_EGCMsgReceiveInterAppMessage            EGCSystemMsg = 73
	EGCSystemMsg_k_EGCMsgFindAccounts                      EGCSystemMsg = 74
	EGCSystemMsg_k_EGCMsgPostAlert                         EGCSystemMsg = 75
	EGCSystemMsg_k_EGCMsgGetLicenses                       EGCSystemMsg = 76
	EGCSystemMsg_k_EGCMsgGetUserStats                      EGCSystemMsg = 77
	EGCSystemMsg_k_EGCMsgGetCommands                       EGCSystemMsg = 78
	EGCSystemMsg_k_EGCMsgGetCommandsResponse               EGCSystemMsg = 79
	EGCSystemMsg_k_EGCMsgAddFreeLicense                    EGCSystemMsg = 80
	EGCSystemMsg_k_EGCMsgAddFreeLicenseResponse            EGCSystemMsg = 81
	EGCSystemMsg_k_EGCMsgGetIPLocation                     EGCSystemMsg = 82
	EGCSystemMsg_k_EGCMsgGetIPLocationResponse             EGCSystemMsg = 83
	EGCSystemMsg_k_EGCMsgSystemStatsSchema                 EGCSystemMsg = 84
	EGCSystemMsg_k_EGCMsgGetSystemStats                    EGCSystemMsg = 85
	EGCSystemMsg_k_EGCMsgGetSystemStatsResponse            EGCSystemMsg = 86
	EGCSystemMsg_k_EGCMsgSendEmail                         EGCSystemMsg = 87
	EGCSystemMsg_k_EGCMsgSendEmailResponse                 EGCSystemMsg = 88
	EGCSystemMsg_k_EGCMsgGetEmailTemplate                  EGCSystemMsg = 89
	EGCSystemMsg_k_EGCMsgGetEmailTemplateResponse          EGCSystemMsg = 90
	EGCSystemMsg_k_EGCMsgGrantGuestPass                    EGCSystemMsg = 91
	EGCSystemMsg_k_EGCMsgGrantGuestPassResponse            EGCSystemMsg = 92
	EGCSystemMsg_k_EGCMsgGetAccountDetails                 EGCSystemMsg = 93
	EGCSystemMsg_k_EGCMsgGetAccountDetailsResponse         EGCSystemMsg = 94
	EGCSystemMsg_k_EGCMsgGetPersonaNames                   EGCSystemMsg = 95
	EGCSystemMsg_k_EGCMsgGetPersonaNamesResponse           EGCSystemMsg = 96
	EGCSystemMsg_k_EGCMsgMultiplexMsg                      EGCSystemMsg = 97
	EGCSystemMsg_k_EGCMsgWebAPIRegisterInterfaces          EGCSystemMsg = 101
	EGCSystemMsg_k_EGCMsgWebAPIJobRequest                  EGCSystemMsg = 102
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestHttpResponse      EGCSystemMsg = 104
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestForwardResponse   EGCSystemMsg = 105
	EGCSystemMsg_k_EGCMsgMemCachedGet                      EGCSystemMsg = 200
	EGCSystemMsg_k_EGCMsgMemCachedGetResponse              EGCSystemMsg = 201
	EGCSystemMsg_k_EGCMsgMemCachedSet                      EGCSystemMsg = 202
	EGCSystemMsg_k_EGCMsgMemCachedDelete                   EGCSystemMsg = 203
	EGCSystemMsg_k_EGCMsgMemCachedStats                    EGCSystemMsg = 204
	EGCSystemMsg_k_EGCMsgMemCachedStatsResponse            EGCSystemMsg = 205
	EGCSystemMsg_k_EGCMsgSQLStats                          EGCSystemMsg = 210
	EGCSystemMsg_k_EGCMsgSQLStatsResponse                  EGCSystemMsg = 211
	EGCSystemMsg_k_EGCMsgMasterSetDirectory                EGCSystemMsg = 220
	EGCSystemMsg_k_EGCMsgMasterSetDirectoryResponse        EGCSystemMsg = 221
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRouting            EGCSystemMsg = 222
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRoutingResponse    EGCSystemMsg = 223
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRouting         EGCSystemMsg = 224
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRoutingResponse EGCSystemMsg = 225
	EGCSystemMsg_k_EGCMsgSetOptions                        EGCSystemMsg = 226
	EGCSystemMsg_k_EGCMsgSetOptionsResponse                EGCSystemMsg = 227
	EGCSystemMsg_k_EGCMsgSystemBase2                       EGCSystemMsg = 500
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatus            EGCSystemMsg = 501
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatusResponse    EGCSystemMsg = 502
	EGCSystemMsg_k_EGCMsgUpdateSession                     EGCSystemMsg = 503
	EGCSystemMsg_k_EGCMsgGCAccountVacStatusChange          EGCSystemMsg = 504
	EGCSystemMsg_k_EGCMsgCheckFriendship                   EGCSystemMsg = 505
	EGCSystemMsg_k_EGCMsgCheckFriendshipResponse           EGCSystemMsg = 506
	EGCSystemMsg_k_EGCMsgGetPartnerAccountLink             EGCSystemMsg = 507
	EGCSystemMsg_k_EGCMsgGetPartnerAccountLinkResponse     EGCSystemMsg = 508
	EGCSystemMsg_k_EGCMsgVSReportedSuspiciousActivity      EGCSystemMsg = 509
)

var EGCSystemMsg_name = map[int32]string{
	0:   "k_EGCMsgInvalid",
	1:   "k_EGCMsgMulti",
	10:  "k_EGCMsgGenericReply",
	50:  "k_EGCMsgSystemBase",
	51:  "k_EGCMsgAchievementAwarded",
	52:  "k_EGCMsgConCommand",
	53:  "k_EGCMsgStartPlaying",
	54:  "k_EGCMsgStopPlaying",
	55:  "k_EGCMsgStartGameserver",
	56:  "k_EGCMsgStopGameserver",
	57:  "k_EGCMsgWGRequest",
	58:  "k_EGCMsgWGResponse",
	59:  "k_EGCMsgGetUserGameStatsSchema",
	60:  "k_EGCMsgGetUserGameStatsSchemaResponse",
	61:  "k_EGCMsgGetUserStatsDEPRECATED",
	62:  "k_EGCMsgGetUserStatsResponse",
	63:  "k_EGCMsgAppInfoUpdated",
	64:  "k_EGCMsgValidateSession",
	65:  "k_EGCMsgValidateSessionResponse",
	66:  "k_EGCMsgLookupAccountFromInput",
	67:  "k_EGCMsgSendHTTPRequest",
	68:  "k_EGCMsgSendHTTPRequestResponse",
	69:  "k_EGCMsgPreTestSetup",
	70:  "k_EGCMsgRecordSupportAction",
	71:  "k_EGCMsgGetAccountDetails_DEPRECATED",
	73:  "k_EGCMsgReceiveInterAppMessage",
	74:  "k_EGCMsgFindAccounts",
	75:  "k_EGCMsgPostAlert",
	76:  "k_EGCMsgGetLicenses",
	77:  "k_EGCMsgGetUserStats",
	78:  "k_EGCMsgGetCommands",
	79:  "k_EGCMsgGetCommandsResponse",
	80:  "k_EGCMsgAddFreeLicense",
	81:  "k_EGCMsgAddFreeLicenseResponse",
	82:  "k_EGCMsgGetIPLocation",
	83:  "k_EGCMsgGetIPLocationResponse",
	84:  "k_EGCMsgSystemStatsSchema",
	85:  "k_EGCMsgGetSystemStats",
	86:  "k_EGCMsgGetSystemStatsResponse",
	87:  "k_EGCMsgSendEmail",
	88:  "k_EGCMsgSendEmailResponse",
	89:  "k_EGCMsgGetEmailTemplate",
	90:  "k_EGCMsgGetEmailTemplateResponse",
	91:  "k_EGCMsgGrantGuestPass",
	92:  "k_EGCMsgGrantGuestPassResponse",
	93:  "k_EGCMsgGetAccountDetails",
	94:  "k_EGCMsgGetAccountDetailsResponse",
	95:  "k_EGCMsgGetPersonaNames",
	96:  "k_EGCMsgGetPersonaNamesResponse",
	97:  "k_EGCMsgMultiplexMsg",
	101: "k_EGCMsgWebAPIRegisterInterfaces",
	102: "k_EGCMsgWebAPIJobRequest",
	104: "k_EGCMsgWebAPIJobRequestHttpResponse",
	105: "k_EGCMsgWebAPIJobRequestForwardResponse",
	200: "k_EGCMsgMemCachedGet",
	201: "k_EGCMsgMemCachedGetResponse",
	202: "k_EGCMsgMemCachedSet",
	203: "k_EGCMsgMemCachedDelete",
	204: "k_EGCMsgMemCachedStats",
	205: "k_EGCMsgMemCachedStatsResponse",
	210: "k_EGCMsgSQLStats",
	211: "k_EGCMsgSQLStatsResponse",
	220: "k_EGCMsgMasterSetDirectory",
	221: "k_EGCMsgMasterSetDirectoryResponse",
	222: "k_EGCMsgMasterSetWebAPIRouting",
	223: "k_EGCMsgMasterSetWebAPIRoutingResponse",
	224: "k_EGCMsgMasterSetClientMsgRouting",
	225: "k_EGCMsgMasterSetClientMsgRoutingResponse",
	226: "k_EGCMsgSetOptions",
	227: "k_EGCMsgSetOptionsResponse",
	500: "k_EGCMsgSystemBase2",
	501: "k_EGCMsgGetPurchaseTrustStatus",
	502: "k_EGCMsgGetPurchaseTrustStatusResponse",
	503: "k_EGCMsgUpdateSession",
	504: "k_EGCMsgGCAccountVacStatusChange",
	505: "k_EGCMsgCheckFriendship",
	506: "k_EGCMsgCheckFriendshipResponse",
	507: "k_EGCMsgGetPartnerAccountLink",
	508: "k_EGCMsgGetPartnerAccountLinkResponse",
	509: "k_EGCMsgVSReportedSuspiciousActivity",
}
var EGCSystemMsg_value = map[string]int32{
	"k_EGCMsgInvalid":                           0,
	"k_EGCMsgMulti":                             1,
	"k_EGCMsgGenericReply":                      10,
	"k_EGCMsgSystemBase":                        50,
	"k_EGCMsgAchievementAwarded":                51,
	"k_EGCMsgConCommand":                        52,
	"k_EGCMsgStartPlaying":                      53,
	"k_EGCMsgStopPlaying":                       54,
	"k_EGCMsgStartGameserver":                   55,
	"k_EGCMsgStopGameserver":                    56,
	"k_EGCMsgWGRequest":                         57,
	"k_EGCMsgWGResponse":                        58,
	"k_EGCMsgGetUserGameStatsSchema":            59,
	"k_EGCMsgGetUserGameStatsSchemaResponse":    60,
	"k_EGCMsgGetUserStatsDEPRECATED":            61,
	"k_EGCMsgGetUserStatsResponse":              62,
	"k_EGCMsgAppInfoUpdated":                    63,
	"k_EGCMsgValidateSession":                   64,
	"k_EGCMsgValidateSessionResponse":           65,
	"k_EGCMsgLookupAccountFromInput":            66,
	"k_EGCMsgSendHTTPRequest":                   67,
	"k_EGCMsgSendHTTPRequestResponse":           68,
	"k_EGCMsgPreTestSetup":                      69,
	"k_EGCMsgRecordSupportAction":               70,
	"k_EGCMsgGetAccountDetails_DEPRECATED":      71,
	"k_EGCMsgReceiveInterAppMessage":            73,
	"k_EGCMsgFindAccounts":                      74,
	"k_EGCMsgPostAlert":                         75,
	"k_EGCMsgGetLicenses":                       76,
	"k_EGCMsgGetUserStats":                      77,
	"k_EGCMsgGetCommands":                       78,
	"k_EGCMsgGetCommandsResponse":               79,
	"k_EGCMsgAddFreeLicense":                    80,
	"k_EGCMsgAddFreeLicenseResponse":            81,
	"k_EGCMsgGetIPLocation":                     82,
	"k_EGCMsgGetIPLocationResponse":             83,
	"k_EGCMsgSystemStatsSchema":                 84,
	"k_EGCMsgGetSystemStats":                    85,
	"k_EGCMsgGetSystemStatsResponse":            86,
	"k_EGCMsgSendEmail":                         87,
	"k_EGCMsgSendEmailResponse":                 88,
	"k_EGCMsgGetEmailTemplate":                  89,
	"k_EGCMsgGetEmailTemplateResponse":          90,
	"k_EGCMsgGrantGuestPass":                    91,
	"k_EGCMsgGrantGuestPassResponse":            92,
	"k_EGCMsgGetAccountDetails":                 93,
	"k_EGCMsgGetAccountDetailsResponse":         94,
	"k_EGCMsgGetPersonaNames":                   95,
	"k_EGCMsgGetPersonaNamesResponse":           96,
	"k_EGCMsgMultiplexMsg":                      97,
	"k_EGCMsgWebAPIRegisterInterfaces":          101,
	"k_EGCMsgWebAPIJobRequest":                  102,
	"k_EGCMsgWebAPIJobRequestHttpResponse":      104,
	"k_EGCMsgWebAPIJobRequestForwardResponse":   105,
	"k_EGCMsgMemCachedGet":                      200,
	"k_EGCMsgMemCachedGetResponse":              201,
	"k_EGCMsgMemCachedSet":                      202,
	"k_EGCMsgMemCachedDelete":                   203,
	"k_EGCMsgMemCachedStats":                    204,
	"k_EGCMsgMemCachedStatsResponse":            205,
	"k_EGCMsgSQLStats":                          210,
	"k_EGCMsgSQLStatsResponse":                  211,
	"k_EGCMsgMasterSetDirectory":                220,
	"k_EGCMsgMasterSetDirectoryResponse":        221,
	"k_EGCMsgMasterSetWebAPIRouting":            222,
	"k_EGCMsgMasterSetWebAPIRoutingResponse":    223,
	"k_EGCMsgMasterSetClientMsgRouting":         224,
	"k_EGCMsgMasterSetClientMsgRoutingResponse": 225,
	"k_EGCMsgSetOptions":                        226,
	"k_EGCMsgSetOptionsResponse":                227,
	"k_EGCMsgSystemBase2":                       500,
	"k_EGCMsgGetPurchaseTrustStatus":            501,
	"k_EGCMsgGetPurchaseTrustStatusResponse":    502,
	"k_EGCMsgUpdateSession":                     503,
	"k_EGCMsgGCAccountVacStatusChange":          504,
	"k_EGCMsgCheckFriendship":                   505,
	"k_EGCMsgCheckFriendshipResponse":           506,
	"k_EGCMsgGetPartnerAccountLink":             507,
	"k_EGCMsgGetPartnerAccountLinkResponse":     508,
	"k_EGCMsgVSReportedSuspiciousActivity":      509,
}

func (x EGCSystemMsg) Enum() *EGCSystemMsg {
	p := new(EGCSystemMsg)
	*p = x
	return p
}
func (x EGCSystemMsg) String() string {
	return proto.EnumName(EGCSystemMsg_name, int32(x))
}
func (x *EGCSystemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCSystemMsg_value, data, "EGCSystemMsg")
	if err != nil {
		return err
	}
	*x = EGCSystemMsg(value)
	return nil
}

type ESOMsg int32

const (
	ESOMsg_k_ESOMsg_Create                   ESOMsg = 21
	ESOMsg_k_ESOMsg_Update                   ESOMsg = 22
	ESOMsg_k_ESOMsg_Destroy                  ESOMsg = 23
	ESOMsg_k_ESOMsg_CacheSubscribed          ESOMsg = 24
	ESOMsg_k_ESOMsg_CacheUnsubscribed        ESOMsg = 25
	ESOMsg_k_ESOMsg_UpdateMultiple           ESOMsg = 26
	ESOMsg_k_ESOMsg_CacheSubscriptionCheck   ESOMsg = 27
	ESOMsg_k_ESOMsg_CacheSubscriptionRefresh ESOMsg = 28
	ESOMsg_k_ESOMsg_CacheSubscribedUpToDate  ESOMsg = 29
)

var ESOMsg_name = map[int32]string{
	21: "k_ESOMsg_Create",
	22: "k_ESOMsg_Update",
	23: "k_ESOMsg_Destroy",
	24: "k_ESOMsg_CacheSubscribed",
	25: "k_ESOMsg_CacheUnsubscribed",
	26: "k_ESOMsg_UpdateMultiple",
	27: "k_ESOMsg_CacheSubscriptionCheck",
	28: "k_ESOMsg_CacheSubscriptionRefresh",
	29: "k_ESOMsg_CacheSubscribedUpToDate",
}
var ESOMsg_value = map[string]int32{
	"k_ESOMsg_Create":                   21,
	"k_ESOMsg_Update":                   22,
	"k_ESOMsg_Destroy":                  23,
	"k_ESOMsg_CacheSubscribed":          24,
	"k_ESOMsg_CacheUnsubscribed":        25,
	"k_ESOMsg_UpdateMultiple":           26,
	"k_ESOMsg_CacheSubscriptionCheck":   27,
	"k_ESOMsg_CacheSubscriptionRefresh": 28,
	"k_ESOMsg_CacheSubscribedUpToDate":  29,
}

func (x ESOMsg) Enum() *ESOMsg {
	p := new(ESOMsg)
	*p = x
	return p
}
func (x ESOMsg) String() string {
	return proto.EnumName(ESOMsg_name, int32(x))
}
func (x *ESOMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESOMsg_value, data, "ESOMsg")
	if err != nil {
		return err
	}
	*x = ESOMsg(value)
	return nil
}

type EGCBaseClientMsg int32

const (
	EGCBaseClientMsg_k_EMsgGCPingRequest   EGCBaseClientMsg = 3001
	EGCBaseClientMsg_k_EMsgGCPingResponse  EGCBaseClientMsg = 3002
	EGCBaseClientMsg_k_EMsgGCClientWelcome EGCBaseClientMsg = 4004
	EGCBaseClientMsg_k_EMsgGCServerWelcome EGCBaseClientMsg = 4005
	EGCBaseClientMsg_k_EMsgGCClientHello   EGCBaseClientMsg = 4006
	EGCBaseClientMsg_k_EMsgGCServerHello   EGCBaseClientMsg = 4007
	EGCBaseClientMsg_k_EMsgGCClientGoodbye EGCBaseClientMsg = 4008
	EGCBaseClientMsg_k_EMsgGCServerGoodbye EGCBaseClientMsg = 4009
)

var EGCBaseClientMsg_name = map[int32]string{
	3001: "k_EMsgGCPingRequest",
	3002: "k_EMsgGCPingResponse",
	4004: "k_EMsgGCClientWelcome",
	4005: "k_EMsgGCServerWelcome",
	4006: "k_EMsgGCClientHello",
	4007: "k_EMsgGCServerHello",
	4008: "k_EMsgGCClientGoodbye",
	4009: "k_EMsgGCServerGoodbye",
}
var EGCBaseClientMsg_value = map[string]int32{
	"k_EMsgGCPingRequest":   3001,
	"k_EMsgGCPingResponse":  3002,
	"k_EMsgGCClientWelcome": 4004,
	"k_EMsgGCServerWelcome": 4005,
	"k_EMsgGCClientHello":   4006,
	"k_EMsgGCServerHello":   4007,
	"k_EMsgGCClientGoodbye": 4008,
	"k_EMsgGCServerGoodbye": 4009,
}

func (x EGCBaseClientMsg) Enum() *EGCBaseClientMsg {
	p := new(EGCBaseClientMsg)
	*p = x
	return p
}
func (x EGCBaseClientMsg) String() string {
	return proto.EnumName(EGCBaseClientMsg_name, int32(x))
}
func (x *EGCBaseClientMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCBaseClientMsg_value, data, "EGCBaseClientMsg")
	if err != nil {
		return err
	}
	*x = EGCBaseClientMsg(value)
	return nil
}

type EGCToGCMsg int32

const (
	EGCToGCMsg_k_EGCToGCMsgMasterAck                   EGCToGCMsg = 150
	EGCToGCMsg_k_EGCToGCMsgMasterAckResponse           EGCToGCMsg = 151
	EGCToGCMsg_k_EGCToGCMsgRouted                      EGCToGCMsg = 152
	EGCToGCMsg_k_EGCToGCMsgRoutedReply                 EGCToGCMsg = 153
	EGCToGCMsg_k_EMsgGCUpdateSubGCSessionInfo          EGCToGCMsg = 154
	EGCToGCMsg_k_EMsgGCRequestSubGCSessionInfo         EGCToGCMsg = 155
	EGCToGCMsg_k_EMsgGCRequestSubGCSessionInfoResponse EGCToGCMsg = 156
	EGCToGCMsg_k_EGCToGCMsgMasterStartupComplete       EGCToGCMsg = 157
	EGCToGCMsg_k_EMsgGCToGCSOCacheSubscribe            EGCToGCMsg = 158
	EGCToGCMsg_k_EMsgGCToGCSOCacheUnsubscribe          EGCToGCMsg = 159
)

var EGCToGCMsg_name = map[int32]string{
	150: "k_EGCToGCMsgMasterAck",
	151: "k_EGCToGCMsgMasterAckResponse",
	152: "k_EGCToGCMsgRouted",
	153: "k_EGCToGCMsgRoutedReply",
	154: "k_EMsgGCUpdateSubGCSessionInfo",
	155: "k_EMsgGCRequestSubGCSessionInfo",
	156: "k_EMsgGCRequestSubGCSessionInfoResponse",
	157: "k_EGCToGCMsgMasterStartupComplete",
	158: "k_EMsgGCToGCSOCacheSubscribe",
	159: "k_EMsgGCToGCSOCacheUnsubscribe",
}
var EGCToGCMsg_value = map[string]int32{
	"k_EGCToGCMsgMasterAck":                   150,
	"k_EGCToGCMsgMasterAckResponse":           151,
	"k_EGCToGCMsgRouted":                      152,
	"k_EGCToGCMsgRoutedReply":                 153,
	"k_EMsgGCUpdateSubGCSessionInfo":          154,
	"k_EMsgGCRequestSubGCSessionInfo":         155,
	"k_EMsgGCRequestSubGCSessionInfoResponse": 156,
	"k_EGCToGCMsgMasterStartupComplete":       157,
	"k_EMsgGCToGCSOCacheSubscribe":            158,
	"k_EMsgGCToGCSOCacheUnsubscribe":          159,
}

func (x EGCToGCMsg) Enum() *EGCToGCMsg {
	p := new(EGCToGCMsg)
	*p = x
	return p
}
func (x EGCToGCMsg) String() string {
	return proto.EnumName(EGCToGCMsg_name, int32(x))
}
func (x *EGCToGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCToGCMsg_value, data, "EGCToGCMsg")
	if err != nil {
		return err
	}
	*x = EGCToGCMsg(value)
	return nil
}

func init() {
	proto.RegisterEnum("EGCSystemMsg", EGCSystemMsg_name, EGCSystemMsg_value)
	proto.RegisterEnum("ESOMsg", ESOMsg_name, ESOMsg_value)
	proto.RegisterEnum("EGCBaseClientMsg", EGCBaseClientMsg_name, EGCBaseClientMsg_value)
	proto.RegisterEnum("EGCToGCMsg", EGCToGCMsg_name, EGCToGCMsg_value)
}
