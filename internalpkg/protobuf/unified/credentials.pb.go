// Code generated by protoc-gen-go.
// source: steammessages_credentials.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CCredentials_TestAvailablePassword_Request struct {
	Password          *string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	ShaDigestPassword []byte  `protobuf:"bytes,2,opt,name=sha_digest_password" json:"sha_digest_password,omitempty"`
	AccountName       *string `protobuf:"bytes,3,opt,name=account_name" json:"account_name,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CCredentials_TestAvailablePassword_Request) Reset() {
	*m = CCredentials_TestAvailablePassword_Request{}
}
func (m *CCredentials_TestAvailablePassword_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_TestAvailablePassword_Request) ProtoMessage() {}

func (m *CCredentials_TestAvailablePassword_Request) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CCredentials_TestAvailablePassword_Request) GetShaDigestPassword() []byte {
	if m != nil {
		return m.ShaDigestPassword
	}
	return nil
}

func (m *CCredentials_TestAvailablePassword_Request) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

type CCredentials_TestAvailablePassword_Response struct {
	IsValid          *bool  `protobuf:"varint,3,opt,name=is_valid" json:"is_valid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_TestAvailablePassword_Response) Reset() {
	*m = CCredentials_TestAvailablePassword_Response{}
}
func (m *CCredentials_TestAvailablePassword_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_TestAvailablePassword_Response) ProtoMessage() {}

func (m *CCredentials_TestAvailablePassword_Response) GetIsValid() bool {
	if m != nil && m.IsValid != nil {
		return *m.IsValid
	}
	return false
}

type CCredentials_GetSteamGuardDetails_Request struct {
	IncludeNewAuthentications *bool   `protobuf:"varint,1,opt,name=include_new_authentications,def=1" json:"include_new_authentications,omitempty"`
	Webcookie                 *string `protobuf:"bytes,2,opt,name=webcookie" json:"webcookie,omitempty"`
	TimestampMinimumWanted    *uint32 `protobuf:"fixed32,3,opt,name=timestamp_minimum_wanted" json:"timestamp_minimum_wanted,omitempty"`
	Ipaddress                 *int32  `protobuf:"varint,4,opt,name=ipaddress" json:"ipaddress,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Request) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Request{}
}
func (m *CCredentials_GetSteamGuardDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_GetSteamGuardDetails_Request) ProtoMessage()    {}

const Default_CCredentials_GetSteamGuardDetails_Request_IncludeNewAuthentications bool = true

func (m *CCredentials_GetSteamGuardDetails_Request) GetIncludeNewAuthentications() bool {
	if m != nil && m.IncludeNewAuthentications != nil {
		return *m.IncludeNewAuthentications
	}
	return Default_CCredentials_GetSteamGuardDetails_Request_IncludeNewAuthentications
}

func (m *CCredentials_GetSteamGuardDetails_Request) GetWebcookie() string {
	if m != nil && m.Webcookie != nil {
		return *m.Webcookie
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Request) GetTimestampMinimumWanted() uint32 {
	if m != nil && m.TimestampMinimumWanted != nil {
		return *m.TimestampMinimumWanted
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Request) GetIpaddress() int32 {
	if m != nil && m.Ipaddress != nil {
		return *m.Ipaddress
	}
	return 0
}

type CCredentials_GetSteamGuardDetails_Response struct {
	IsSteamguardEnabled                                   *bool                                                           `protobuf:"varint,1,opt,name=is_steamguard_enabled" json:"is_steamguard_enabled,omitempty"`
	TimestampSteamguardEnabled                            *uint32                                                         `protobuf:"fixed32,2,opt,name=timestamp_steamguard_enabled" json:"timestamp_steamguard_enabled,omitempty"`
	DeprecatedNewauthentication                           []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication `protobuf:"bytes,3,rep,name=deprecated_newauthentication" json:"deprecated_newauthentication,omitempty"`
	DeprecatedMachineNameUserchosen                       *string                                                         `protobuf:"bytes,4,opt,name=deprecated_machine_name_userchosen" json:"deprecated_machine_name_userchosen,omitempty"`
	DeprecatedTimestampMachineSteamguardEnabled           *uint32                                                         `protobuf:"fixed32,5,opt,name=deprecated_timestamp_machine_steamguard_enabled" json:"deprecated_timestamp_machine_steamguard_enabled,omitempty"`
	DeprecatedAuthenticationExistsFromGeolocBeforeMintime *bool                                                           `protobuf:"varint,6,opt,name=deprecated_authentication_exists_from_geoloc_before_mintime" json:"deprecated_authentication_exists_from_geoloc_before_mintime,omitempty"`
	DeprecatedMachineId                                   *uint64                                                         `protobuf:"varint,7,opt,name=deprecated_machine_id" json:"deprecated_machine_id,omitempty"`
	SessionData                                           []*CCredentials_GetSteamGuardDetails_Response_SessionData       `protobuf:"bytes,8,rep,name=session_data" json:"session_data,omitempty"`
	XXX_unrecognized                                      []byte                                                          `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response{}
}
func (m *CCredentials_GetSteamGuardDetails_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response) ProtoMessage() {}

func (m *CCredentials_GetSteamGuardDetails_Response) GetIsSteamguardEnabled() bool {
	if m != nil && m.IsSteamguardEnabled != nil {
		return *m.IsSteamguardEnabled
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetTimestampSteamguardEnabled() uint32 {
	if m != nil && m.TimestampSteamguardEnabled != nil {
		return *m.TimestampSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedNewauthentication() []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication {
	if m != nil {
		return m.DeprecatedNewauthentication
	}
	return nil
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedMachineNameUserchosen() string {
	if m != nil && m.DeprecatedMachineNameUserchosen != nil {
		return *m.DeprecatedMachineNameUserchosen
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedTimestampMachineSteamguardEnabled() uint32 {
	if m != nil && m.DeprecatedTimestampMachineSteamguardEnabled != nil {
		return *m.DeprecatedTimestampMachineSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedAuthenticationExistsFromGeolocBeforeMintime() bool {
	if m != nil && m.DeprecatedAuthenticationExistsFromGeolocBeforeMintime != nil {
		return *m.DeprecatedAuthenticationExistsFromGeolocBeforeMintime
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedMachineId() uint64 {
	if m != nil && m.DeprecatedMachineId != nil {
		return *m.DeprecatedMachineId
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetSessionData() []*CCredentials_GetSteamGuardDetails_Response_SessionData {
	if m != nil {
		return m.SessionData
	}
	return nil
}

type CCredentials_GetSteamGuardDetails_Response_NewAuthentication struct {
	TimestampSteamguardEnabled *uint32 `protobuf:"fixed32,1,opt,name=timestamp_steamguard_enabled" json:"timestamp_steamguard_enabled,omitempty"`
	IsWebCookie                *bool   `protobuf:"varint,2,opt,name=is_web_cookie" json:"is_web_cookie,omitempty"`
	Ipaddress                  *int32  `protobuf:"varint,3,opt,name=ipaddress" json:"ipaddress,omitempty"`
	GeolocInfo                 *string `protobuf:"bytes,4,opt,name=geoloc_info" json:"geoloc_info,omitempty"`
	IsRemembered               *bool   `protobuf:"varint,5,opt,name=is_remembered" json:"is_remembered,omitempty"`
	MachineNameUserSupplied    *string `protobuf:"bytes,6,opt,name=machine_name_user_supplied" json:"machine_name_user_supplied,omitempty"`
	Status                     *int32  `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized           []byte  `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response_NewAuthentication{}
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response_NewAuthentication) ProtoMessage() {}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetTimestampSteamguardEnabled() uint32 {
	if m != nil && m.TimestampSteamguardEnabled != nil {
		return *m.TimestampSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIsWebCookie() bool {
	if m != nil && m.IsWebCookie != nil {
		return *m.IsWebCookie
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIpaddress() int32 {
	if m != nil && m.Ipaddress != nil {
		return *m.Ipaddress
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetGeolocInfo() string {
	if m != nil && m.GeolocInfo != nil {
		return *m.GeolocInfo
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIsRemembered() bool {
	if m != nil && m.IsRemembered != nil {
		return *m.IsRemembered
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetMachineNameUserSupplied() string {
	if m != nil && m.MachineNameUserSupplied != nil {
		return *m.MachineNameUserSupplied
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CCredentials_GetSteamGuardDetails_Response_SessionData struct {
	MachineId                                   *uint64                                                         `protobuf:"varint,1,opt,name=machine_id" json:"machine_id,omitempty"`
	MachineNameUserchosen                       *string                                                         `protobuf:"bytes,2,opt,name=machine_name_userchosen" json:"machine_name_userchosen,omitempty"`
	TimestampMachineSteamguardEnabled           *uint32                                                         `protobuf:"fixed32,3,opt,name=timestamp_machine_steamguard_enabled" json:"timestamp_machine_steamguard_enabled,omitempty"`
	AuthenticationExistsFromGeolocBeforeMintime *bool                                                           `protobuf:"varint,4,opt,name=authentication_exists_from_geoloc_before_mintime" json:"authentication_exists_from_geoloc_before_mintime,omitempty"`
	Newauthentication                           []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication `protobuf:"bytes,5,rep,name=newauthentication" json:"newauthentication,omitempty"`
	AuthenticationExistsFromSameIpBeforeMintime *bool                                                           `protobuf:"varint,6,opt,name=authentication_exists_from_same_ip_before_mintime" json:"authentication_exists_from_same_ip_before_mintime,omitempty"`
	PublicIpv4                                  *uint32                                                         `protobuf:"varint,7,opt,name=public_ipv4" json:"public_ipv4,omitempty"`
	XXX_unrecognized                            []byte                                                          `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response_SessionData{}
}
func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response_SessionData) ProtoMessage() {}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetMachineId() uint64 {
	if m != nil && m.MachineId != nil {
		return *m.MachineId
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetMachineNameUserchosen() string {
	if m != nil && m.MachineNameUserchosen != nil {
		return *m.MachineNameUserchosen
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetTimestampMachineSteamguardEnabled() uint32 {
	if m != nil && m.TimestampMachineSteamguardEnabled != nil {
		return *m.TimestampMachineSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetAuthenticationExistsFromGeolocBeforeMintime() bool {
	if m != nil && m.AuthenticationExistsFromGeolocBeforeMintime != nil {
		return *m.AuthenticationExistsFromGeolocBeforeMintime
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetNewauthentication() []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication {
	if m != nil {
		return m.Newauthentication
	}
	return nil
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetAuthenticationExistsFromSameIpBeforeMintime() bool {
	if m != nil && m.AuthenticationExistsFromSameIpBeforeMintime != nil {
		return *m.AuthenticationExistsFromSameIpBeforeMintime
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetPublicIpv4() uint32 {
	if m != nil && m.PublicIpv4 != nil {
		return *m.PublicIpv4
	}
	return 0
}

type CCredentials_NewMachineNotificationDialog_Request struct {
	IsApproved       *bool  `protobuf:"varint,1,opt,name=is_approved" json:"is_approved,omitempty"`
	IsWizardComplete *bool  `protobuf:"varint,2,opt,name=is_wizard_complete" json:"is_wizard_complete,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_NewMachineNotificationDialog_Request) Reset() {
	*m = CCredentials_NewMachineNotificationDialog_Request{}
}
func (m *CCredentials_NewMachineNotificationDialog_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_NewMachineNotificationDialog_Request) ProtoMessage() {}

func (m *CCredentials_NewMachineNotificationDialog_Request) GetIsApproved() bool {
	if m != nil && m.IsApproved != nil {
		return *m.IsApproved
	}
	return false
}

func (m *CCredentials_NewMachineNotificationDialog_Request) GetIsWizardComplete() bool {
	if m != nil && m.IsWizardComplete != nil {
		return *m.IsWizardComplete
	}
	return false
}

type CCredentials_NewMachineNotificationDialog_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_NewMachineNotificationDialog_Response) Reset() {
	*m = CCredentials_NewMachineNotificationDialog_Response{}
}
func (m *CCredentials_NewMachineNotificationDialog_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_NewMachineNotificationDialog_Response) ProtoMessage() {}

type CCredentials_ValidateEmailAddress_Request struct {
	Stoken           *string `protobuf:"bytes,1,opt,name=stoken" json:"stoken,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_ValidateEmailAddress_Request) Reset() {
	*m = CCredentials_ValidateEmailAddress_Request{}
}
func (m *CCredentials_ValidateEmailAddress_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_ValidateEmailAddress_Request) ProtoMessage()    {}

func (m *CCredentials_ValidateEmailAddress_Request) GetStoken() string {
	if m != nil && m.Stoken != nil {
		return *m.Stoken
	}
	return ""
}

type CCredentials_ValidateEmailAddress_Response struct {
	WasValidated     *bool  `protobuf:"varint,1,opt,name=was_validated" json:"was_validated,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_ValidateEmailAddress_Response) Reset() {
	*m = CCredentials_ValidateEmailAddress_Response{}
}
func (m *CCredentials_ValidateEmailAddress_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_ValidateEmailAddress_Response) ProtoMessage() {}

func (m *CCredentials_ValidateEmailAddress_Response) GetWasValidated() bool {
	if m != nil && m.WasValidated != nil {
		return *m.WasValidated
	}
	return false
}

type CCredentials_SteamGuardPhishingReport_Request struct {
	ParamString      *string `protobuf:"bytes,1,opt,name=param_string" json:"param_string,omitempty"`
	IpaddressActual  *uint32 `protobuf:"varint,2,opt,name=ipaddress_actual" json:"ipaddress_actual,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_SteamGuardPhishingReport_Request) Reset() {
	*m = CCredentials_SteamGuardPhishingReport_Request{}
}
func (m *CCredentials_SteamGuardPhishingReport_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardPhishingReport_Request) ProtoMessage() {}

func (m *CCredentials_SteamGuardPhishingReport_Request) GetParamString() string {
	if m != nil && m.ParamString != nil {
		return *m.ParamString
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Request) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

type CCredentials_SteamGuardPhishingReport_Response struct {
	IpaddressLoginattempt   *uint32 `protobuf:"varint,1,opt,name=ipaddress_loginattempt" json:"ipaddress_loginattempt,omitempty"`
	CountrynameLoginattempt *string `protobuf:"bytes,2,opt,name=countryname_loginattempt" json:"countryname_loginattempt,omitempty"`
	StatenameLoginattempt   *string `protobuf:"bytes,3,opt,name=statename_loginattempt" json:"statename_loginattempt,omitempty"`
	CitynameLoginattempt    *string `protobuf:"bytes,4,opt,name=cityname_loginattempt" json:"cityname_loginattempt,omitempty"`
	IpaddressActual         *uint32 `protobuf:"varint,5,opt,name=ipaddress_actual" json:"ipaddress_actual,omitempty"`
	CountrynameActual       *string `protobuf:"bytes,6,opt,name=countryname_actual" json:"countryname_actual,omitempty"`
	StatenameActual         *string `protobuf:"bytes,7,opt,name=statename_actual" json:"statename_actual,omitempty"`
	CitynameActual          *string `protobuf:"bytes,8,opt,name=cityname_actual" json:"cityname_actual,omitempty"`
	SteamguardCode          *string `protobuf:"bytes,9,opt,name=steamguard_code" json:"steamguard_code,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CCredentials_SteamGuardPhishingReport_Response) Reset() {
	*m = CCredentials_SteamGuardPhishingReport_Response{}
}
func (m *CCredentials_SteamGuardPhishingReport_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardPhishingReport_Response) ProtoMessage() {}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetIpaddressLoginattempt() uint32 {
	if m != nil && m.IpaddressLoginattempt != nil {
		return *m.IpaddressLoginattempt
	}
	return 0
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCountrynameLoginattempt() string {
	if m != nil && m.CountrynameLoginattempt != nil {
		return *m.CountrynameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetStatenameLoginattempt() string {
	if m != nil && m.StatenameLoginattempt != nil {
		return *m.StatenameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCitynameLoginattempt() string {
	if m != nil && m.CitynameLoginattempt != nil {
		return *m.CitynameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCountrynameActual() string {
	if m != nil && m.CountrynameActual != nil {
		return *m.CountrynameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetStatenameActual() string {
	if m != nil && m.StatenameActual != nil {
		return *m.StatenameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCitynameActual() string {
	if m != nil && m.CitynameActual != nil {
		return *m.CitynameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetSteamguardCode() string {
	if m != nil && m.SteamguardCode != nil {
		return *m.SteamguardCode
	}
	return ""
}

type CCredentials_AccountLockRequest_Request struct {
	ParamString      *string `protobuf:"bytes,1,opt,name=param_string" json:"param_string,omitempty"`
	IpaddressActual  *uint32 `protobuf:"varint,2,opt,name=ipaddress_actual" json:"ipaddress_actual,omitempty"`
	QueryOnly        *bool   `protobuf:"varint,3,opt,name=query_only" json:"query_only,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_AccountLockRequest_Request) Reset() {
	*m = CCredentials_AccountLockRequest_Request{}
}
func (m *CCredentials_AccountLockRequest_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_AccountLockRequest_Request) ProtoMessage()    {}

func (m *CCredentials_AccountLockRequest_Request) GetParamString() string {
	if m != nil && m.ParamString != nil {
		return *m.ParamString
	}
	return ""
}

func (m *CCredentials_AccountLockRequest_Request) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

func (m *CCredentials_AccountLockRequest_Request) GetQueryOnly() bool {
	if m != nil && m.QueryOnly != nil {
		return *m.QueryOnly
	}
	return false
}

type CCredentials_AccountLockRequest_Response struct {
	Success              *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	AccountAlreadyLocked *bool  `protobuf:"varint,2,opt,name=account_already_locked" json:"account_already_locked,omitempty"`
	ExpiredLink          *bool  `protobuf:"varint,3,opt,name=expired_link" json:"expired_link,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *CCredentials_AccountLockRequest_Response) Reset() {
	*m = CCredentials_AccountLockRequest_Response{}
}
func (m *CCredentials_AccountLockRequest_Response) String() string { return proto.CompactTextString(m) }
func (*CCredentials_AccountLockRequest_Response) ProtoMessage()    {}

func (m *CCredentials_AccountLockRequest_Response) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CCredentials_AccountLockRequest_Response) GetAccountAlreadyLocked() bool {
	if m != nil && m.AccountAlreadyLocked != nil {
		return *m.AccountAlreadyLocked
	}
	return false
}

func (m *CCredentials_AccountLockRequest_Response) GetExpiredLink() bool {
	if m != nil && m.ExpiredLink != nil {
		return *m.ExpiredLink
	}
	return false
}

type CCredentials_SteamGuardCode_Request struct {
	PanicButton      *bool  `protobuf:"varint,1,opt,name=panic_button" json:"panic_button,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_SteamGuardCode_Request) Reset()         { *m = CCredentials_SteamGuardCode_Request{} }
func (m *CCredentials_SteamGuardCode_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_SteamGuardCode_Request) ProtoMessage()    {}

func (m *CCredentials_SteamGuardCode_Request) GetPanicButton() bool {
	if m != nil && m.PanicButton != nil {
		return *m.PanicButton
	}
	return false
}

type CCredentials_SteamGuardCode_Response struct {
	SteamguardCode   *string `protobuf:"bytes,1,opt,name=steamguard_code" json:"steamguard_code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_SteamGuardCode_Response) Reset()         { *m = CCredentials_SteamGuardCode_Response{} }
func (m *CCredentials_SteamGuardCode_Response) String() string { return proto.CompactTextString(m) }
func (*CCredentials_SteamGuardCode_Response) ProtoMessage()    {}

func (m *CCredentials_SteamGuardCode_Response) GetSteamguardCode() string {
	if m != nil && m.SteamguardCode != nil {
		return *m.SteamguardCode
	}
	return ""
}

type CCredentials_LastCredentialChangeTime_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_LastCredentialChangeTime_Request) Reset() {
	*m = CCredentials_LastCredentialChangeTime_Request{}
}
func (m *CCredentials_LastCredentialChangeTime_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_LastCredentialChangeTime_Request) ProtoMessage() {}

type CCredentials_LastCredentialChangeTime_Response struct {
	TimestampLastPasswordChange *uint32 `protobuf:"fixed32,1,opt,name=timestamp_last_password_change" json:"timestamp_last_password_change,omitempty"`
	TimestampLastEmailChange    *uint32 `protobuf:"fixed32,2,opt,name=timestamp_last_email_change" json:"timestamp_last_email_change,omitempty"`
	TimestampLastPasswordReset  *uint32 `protobuf:"fixed32,3,opt,name=timestamp_last_password_reset" json:"timestamp_last_password_reset,omitempty"`
	XXX_unrecognized            []byte  `json:"-"`
}

func (m *CCredentials_LastCredentialChangeTime_Response) Reset() {
	*m = CCredentials_LastCredentialChangeTime_Response{}
}
func (m *CCredentials_LastCredentialChangeTime_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_LastCredentialChangeTime_Response) ProtoMessage() {}

func (m *CCredentials_LastCredentialChangeTime_Response) GetTimestampLastPasswordChange() uint32 {
	if m != nil && m.TimestampLastPasswordChange != nil {
		return *m.TimestampLastPasswordChange
	}
	return 0
}

func (m *CCredentials_LastCredentialChangeTime_Response) GetTimestampLastEmailChange() uint32 {
	if m != nil && m.TimestampLastEmailChange != nil {
		return *m.TimestampLastEmailChange
	}
	return 0
}

func (m *CCredentials_LastCredentialChangeTime_Response) GetTimestampLastPasswordReset() uint32 {
	if m != nil && m.TimestampLastPasswordReset != nil {
		return *m.TimestampLastPasswordReset
	}
	return 0
}

type CCredentials_GetAccountAuthSecret_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_GetAccountAuthSecret_Request) Reset() {
	*m = CCredentials_GetAccountAuthSecret_Request{}
}
func (m *CCredentials_GetAccountAuthSecret_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_GetAccountAuthSecret_Request) ProtoMessage()    {}

type CCredentials_GetAccountAuthSecret_Response struct {
	SecretId         *int32 `protobuf:"varint,1,opt,name=secret_id" json:"secret_id,omitempty"`
	Secret           []byte `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_GetAccountAuthSecret_Response) Reset() {
	*m = CCredentials_GetAccountAuthSecret_Response{}
}
func (m *CCredentials_GetAccountAuthSecret_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetAccountAuthSecret_Response) ProtoMessage() {}

func (m *CCredentials_GetAccountAuthSecret_Response) GetSecretId() int32 {
	if m != nil && m.SecretId != nil {
		return *m.SecretId
	}
	return 0
}

func (m *CCredentials_GetAccountAuthSecret_Response) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type CCredentials_SteamGuardLoginAttempt_Notification struct {
	IsWebCookie      *bool   `protobuf:"varint,1,opt,name=is_web_cookie" json:"is_web_cookie,omitempty"`
	Ipaddress        *int32  `protobuf:"varint,2,opt,name=ipaddress" json:"ipaddress,omitempty"`
	GeolocInfo       *string `protobuf:"bytes,3,opt,name=geoloc_info" json:"geoloc_info,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_SteamGuardLoginAttempt_Notification) Reset() {
	*m = CCredentials_SteamGuardLoginAttempt_Notification{}
}
func (m *CCredentials_SteamGuardLoginAttempt_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardLoginAttempt_Notification) ProtoMessage() {}

func (m *CCredentials_SteamGuardLoginAttempt_Notification) GetIsWebCookie() bool {
	if m != nil && m.IsWebCookie != nil {
		return *m.IsWebCookie
	}
	return false
}

func (m *CCredentials_SteamGuardLoginAttempt_Notification) GetIpaddress() int32 {
	if m != nil && m.Ipaddress != nil {
		return *m.Ipaddress
	}
	return 0
}

func (m *CCredentials_SteamGuardLoginAttempt_Notification) GetGeolocInfo() string {
	if m != nil && m.GeolocInfo != nil {
		return *m.GeolocInfo
	}
	return ""
}

func init() {
}
