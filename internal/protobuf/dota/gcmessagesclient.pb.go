// Code generated by protoc-gen-go.
// source: dota_gcmessages_client.proto
// DO NOT EDIT!

package dota

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// discarding unused import steammessages "steammessages.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ETournamentGameState int32

const (
	ETournamentGameState_k_ETournamentGameState_Pending     ETournamentGameState = 0
	ETournamentGameState_k_ETournamentGameState_Active      ETournamentGameState = 1
	ETournamentGameState_k_ETournamentGameState_DireVictory ETournamentGameState = 2
	ETournamentGameState_k_ETournamentGameState_RadVictory  ETournamentGameState = 3
	ETournamentGameState_k_ETournamentGameState_Canceled    ETournamentGameState = 4
)

var ETournamentGameState_name = map[int32]string{
	0: "k_ETournamentGameState_Pending",
	1: "k_ETournamentGameState_Active",
	2: "k_ETournamentGameState_DireVictory",
	3: "k_ETournamentGameState_RadVictory",
	4: "k_ETournamentGameState_Canceled",
}
var ETournamentGameState_value = map[string]int32{
	"k_ETournamentGameState_Pending":     0,
	"k_ETournamentGameState_Active":      1,
	"k_ETournamentGameState_DireVictory": 2,
	"k_ETournamentGameState_RadVictory":  3,
	"k_ETournamentGameState_Canceled":    4,
}

func (x ETournamentGameState) Enum() *ETournamentGameState {
	p := new(ETournamentGameState)
	*p = x
	return p
}
func (x ETournamentGameState) String() string {
	return proto.EnumName(ETournamentGameState_name, int32(x))
}
func (x *ETournamentGameState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentGameState_value, data, "ETournamentGameState")
	if err != nil {
		return err
	}
	*x = ETournamentGameState(value)
	return nil
}

type ETournamentTeamState int32

const (
	ETournamentTeamState_k_ETournamentTeamState_Unknown             ETournamentTeamState = 0
	ETournamentTeamState_k_ETournamentTeamState_1st                 ETournamentTeamState = 1
	ETournamentTeamState_k_ETournamentTeamState_2nd                 ETournamentTeamState = 2
	ETournamentTeamState_k_ETournamentTeamState_3rd                 ETournamentTeamState = 3
	ETournamentTeamState_k_ETournamentTeamState_4th                 ETournamentTeamState = 4
	ETournamentTeamState_k_ETournamentTeamState_5th                 ETournamentTeamState = 5
	ETournamentTeamState_k_ETournamentTeamState_6th                 ETournamentTeamState = 6
	ETournamentTeamState_k_ETournamentTeamState_7th                 ETournamentTeamState = 7
	ETournamentTeamState_k_ETournamentTeamState_8th                 ETournamentTeamState = 8
	ETournamentTeamState_k_ETournamentTeamState_9th                 ETournamentTeamState = 9
	ETournamentTeamState_k_ETournamentTeamState_10th                ETournamentTeamState = 10
	ETournamentTeamState_k_ETournamentTeamState_11th                ETournamentTeamState = 11
	ETournamentTeamState_k_ETournamentTeamState_12th                ETournamentTeamState = 12
	ETournamentTeamState_k_ETournamentTeamState_13th                ETournamentTeamState = 13
	ETournamentTeamState_k_ETournamentTeamState_14th                ETournamentTeamState = 14
	ETournamentTeamState_k_ETournamentTeamState_15th                ETournamentTeamState = 15
	ETournamentTeamState_k_ETournamentTeamState_16th                ETournamentTeamState = 16
	ETournamentTeamState_k_ETournamentTeamState_WaitingForNextRound ETournamentTeamState = 1000
	ETournamentTeamState_k_ETournamentTeamState_InMatch             ETournamentTeamState = 1001
	ETournamentTeamState_k_ETournamentTeamState_Eliminated          ETournamentTeamState = 1002
)

var ETournamentTeamState_name = map[int32]string{
	0:    "k_ETournamentTeamState_Unknown",
	1:    "k_ETournamentTeamState_1st",
	2:    "k_ETournamentTeamState_2nd",
	3:    "k_ETournamentTeamState_3rd",
	4:    "k_ETournamentTeamState_4th",
	5:    "k_ETournamentTeamState_5th",
	6:    "k_ETournamentTeamState_6th",
	7:    "k_ETournamentTeamState_7th",
	8:    "k_ETournamentTeamState_8th",
	9:    "k_ETournamentTeamState_9th",
	10:   "k_ETournamentTeamState_10th",
	11:   "k_ETournamentTeamState_11th",
	12:   "k_ETournamentTeamState_12th",
	13:   "k_ETournamentTeamState_13th",
	14:   "k_ETournamentTeamState_14th",
	15:   "k_ETournamentTeamState_15th",
	16:   "k_ETournamentTeamState_16th",
	1000: "k_ETournamentTeamState_WaitingForNextRound",
	1001: "k_ETournamentTeamState_InMatch",
	1002: "k_ETournamentTeamState_Eliminated",
}
var ETournamentTeamState_value = map[string]int32{
	"k_ETournamentTeamState_Unknown":             0,
	"k_ETournamentTeamState_1st":                 1,
	"k_ETournamentTeamState_2nd":                 2,
	"k_ETournamentTeamState_3rd":                 3,
	"k_ETournamentTeamState_4th":                 4,
	"k_ETournamentTeamState_5th":                 5,
	"k_ETournamentTeamState_6th":                 6,
	"k_ETournamentTeamState_7th":                 7,
	"k_ETournamentTeamState_8th":                 8,
	"k_ETournamentTeamState_9th":                 9,
	"k_ETournamentTeamState_10th":                10,
	"k_ETournamentTeamState_11th":                11,
	"k_ETournamentTeamState_12th":                12,
	"k_ETournamentTeamState_13th":                13,
	"k_ETournamentTeamState_14th":                14,
	"k_ETournamentTeamState_15th":                15,
	"k_ETournamentTeamState_16th":                16,
	"k_ETournamentTeamState_WaitingForNextRound": 1000,
	"k_ETournamentTeamState_InMatch":             1001,
	"k_ETournamentTeamState_Eliminated":          1002,
}

func (x ETournamentTeamState) Enum() *ETournamentTeamState {
	p := new(ETournamentTeamState)
	*p = x
	return p
}
func (x ETournamentTeamState) String() string {
	return proto.EnumName(ETournamentTeamState_name, int32(x))
}
func (x *ETournamentTeamState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentTeamState_value, data, "ETournamentTeamState")
	if err != nil {
		return err
	}
	*x = ETournamentTeamState(value)
	return nil
}

type ETournamentTemplate int32

const (
	ETournamentTemplate_k_ETournamentTemplate_None              ETournamentTemplate = 0
	ETournamentTemplate_k_ETournamentTemplate_SingleElimination ETournamentTemplate = 1
)

var ETournamentTemplate_name = map[int32]string{
	0: "k_ETournamentTemplate_None",
	1: "k_ETournamentTemplate_SingleElimination",
}
var ETournamentTemplate_value = map[string]int32{
	"k_ETournamentTemplate_None":              0,
	"k_ETournamentTemplate_SingleElimination": 1,
}

func (x ETournamentTemplate) Enum() *ETournamentTemplate {
	p := new(ETournamentTemplate)
	*p = x
	return p
}
func (x ETournamentTemplate) String() string {
	return proto.EnumName(ETournamentTemplate_name, int32(x))
}
func (x *ETournamentTemplate) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentTemplate_value, data, "ETournamentTemplate")
	if err != nil {
		return err
	}
	*x = ETournamentTemplate(value)
	return nil
}

type ETournamentType int32

const (
	ETournamentType_k_ETournamentTemplate_Unknown        ETournamentType = 0
	ETournamentType_k_ETournamentTemplate_WeeklyDivision ETournamentType = 1
)

var ETournamentType_name = map[int32]string{
	0: "k_ETournamentTemplate_Unknown",
	1: "k_ETournamentTemplate_WeeklyDivision",
}
var ETournamentType_value = map[string]int32{
	"k_ETournamentTemplate_Unknown":        0,
	"k_ETournamentTemplate_WeeklyDivision": 1,
}

func (x ETournamentType) Enum() *ETournamentType {
	p := new(ETournamentType)
	*p = x
	return p
}
func (x ETournamentType) String() string {
	return proto.EnumName(ETournamentType_name, int32(x))
}
func (x *ETournamentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentType_value, data, "ETournamentType")
	if err != nil {
		return err
	}
	*x = ETournamentType(value)
	return nil
}

type ETournamentState int32

const (
	ETournamentState_k_ETournamentState_Unknown    ETournamentState = 0
	ETournamentState_k_ETournamentState_Scheduled  ETournamentState = 1
	ETournamentState_k_ETournamentState_InProgress ETournamentState = 2
	ETournamentState_k_ETournamentState_Completed  ETournamentState = 3
	ETournamentState_k_ETournamentState_Canceled   ETournamentState = 4
)

var ETournamentState_name = map[int32]string{
	0: "k_ETournamentState_Unknown",
	1: "k_ETournamentState_Scheduled",
	2: "k_ETournamentState_InProgress",
	3: "k_ETournamentState_Completed",
	4: "k_ETournamentState_Canceled",
}
var ETournamentState_value = map[string]int32{
	"k_ETournamentState_Unknown":    0,
	"k_ETournamentState_Scheduled":  1,
	"k_ETournamentState_InProgress": 2,
	"k_ETournamentState_Completed":  3,
	"k_ETournamentState_Canceled":   4,
}

func (x ETournamentState) Enum() *ETournamentState {
	p := new(ETournamentState)
	*p = x
	return p
}
func (x ETournamentState) String() string {
	return proto.EnumName(ETournamentState_name, int32(x))
}
func (x *ETournamentState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentState_value, data, "ETournamentState")
	if err != nil {
		return err
	}
	*x = ETournamentState(value)
	return nil
}

type DOTAChatChannelTypeT int32

const (
	DOTAChatChannelTypeT_DOTAChannelType_Regional DOTAChatChannelTypeT = 0
	DOTAChatChannelTypeT_DOTAChannelType_Custom   DOTAChatChannelTypeT = 1
	DOTAChatChannelTypeT_DOTAChannelType_Party    DOTAChatChannelTypeT = 2
	DOTAChatChannelTypeT_DOTAChannelType_Lobby    DOTAChatChannelTypeT = 3
	DOTAChatChannelTypeT_DOTAChannelType_Team     DOTAChatChannelTypeT = 4
	DOTAChatChannelTypeT_DOTAChannelType_Guild    DOTAChatChannelTypeT = 5
	DOTAChatChannelTypeT_DOTAChannelType_Fantasy  DOTAChatChannelTypeT = 6
)

var DOTAChatChannelTypeT_name = map[int32]string{
	0: "DOTAChannelType_Regional",
	1: "DOTAChannelType_Custom",
	2: "DOTAChannelType_Party",
	3: "DOTAChannelType_Lobby",
	4: "DOTAChannelType_Team",
	5: "DOTAChannelType_Guild",
	6: "DOTAChannelType_Fantasy",
}
var DOTAChatChannelTypeT_value = map[string]int32{
	"DOTAChannelType_Regional": 0,
	"DOTAChannelType_Custom":   1,
	"DOTAChannelType_Party":    2,
	"DOTAChannelType_Lobby":    3,
	"DOTAChannelType_Team":     4,
	"DOTAChannelType_Guild":    5,
	"DOTAChannelType_Fantasy":  6,
}

func (x DOTAChatChannelTypeT) Enum() *DOTAChatChannelTypeT {
	p := new(DOTAChatChannelTypeT)
	*p = x
	return p
}
func (x DOTAChatChannelTypeT) String() string {
	return proto.EnumName(DOTAChatChannelTypeT_name, int32(x))
}
func (x *DOTAChatChannelTypeT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTAChatChannelTypeT_value, data, "DOTAChatChannelTypeT")
	if err != nil {
		return err
	}
	*x = DOTAChatChannelTypeT(value)
	return nil
}

type DOTA_WatchReplayType int32

const (
	DOTA_WatchReplayType_DOTA_WATCH_REPLAY_NORMAL     DOTA_WatchReplayType = 0
	DOTA_WatchReplayType_DOTA_WATCH_REPLAY_HIGHLIGHTS DOTA_WatchReplayType = 1
)

var DOTA_WatchReplayType_name = map[int32]string{
	0: "DOTA_WATCH_REPLAY_NORMAL",
	1: "DOTA_WATCH_REPLAY_HIGHLIGHTS",
}
var DOTA_WatchReplayType_value = map[string]int32{
	"DOTA_WATCH_REPLAY_NORMAL":     0,
	"DOTA_WATCH_REPLAY_HIGHLIGHTS": 1,
}

func (x DOTA_WatchReplayType) Enum() *DOTA_WatchReplayType {
	p := new(DOTA_WatchReplayType)
	*p = x
	return p
}
func (x DOTA_WatchReplayType) String() string {
	return proto.EnumName(DOTA_WatchReplayType_name, int32(x))
}
func (x *DOTA_WatchReplayType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_WatchReplayType_value, data, "DOTA_WatchReplayType")
	if err != nil {
		return err
	}
	*x = DOTA_WatchReplayType(value)
	return nil
}

type DOTA_2013PassportSelectionIndices int32

const (
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_0    DOTA_2013PassportSelectionIndices = 0
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_1    DOTA_2013PassportSelectionIndices = 1
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_2    DOTA_2013PassportSelectionIndices = 2
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_3    DOTA_2013PassportSelectionIndices = 3
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_4    DOTA_2013PassportSelectionIndices = 4
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_5    DOTA_2013PassportSelectionIndices = 5
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_6    DOTA_2013PassportSelectionIndices = 6
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_7    DOTA_2013PassportSelectionIndices = 7
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_8    DOTA_2013PassportSelectionIndices = 8
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_9    DOTA_2013PassportSelectionIndices = 9
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_0     DOTA_2013PassportSelectionIndices = 10
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_1     DOTA_2013PassportSelectionIndices = 11
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_2     DOTA_2013PassportSelectionIndices = 12
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_3     DOTA_2013PassportSelectionIndices = 13
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_4     DOTA_2013PassportSelectionIndices = 14
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_5     DOTA_2013PassportSelectionIndices = 15
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_6     DOTA_2013PassportSelectionIndices = 16
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_7     DOTA_2013PassportSelectionIndices = 17
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_8     DOTA_2013PassportSelectionIndices = 18
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_9     DOTA_2013PassportSelectionIndices = 19
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_10    DOTA_2013PassportSelectionIndices = 20
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_11    DOTA_2013PassportSelectionIndices = 21
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_12    DOTA_2013PassportSelectionIndices = 22
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_13    DOTA_2013PassportSelectionIndices = 23
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_14    DOTA_2013PassportSelectionIndices = 24
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_0     DOTA_2013PassportSelectionIndices = 25
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_1     DOTA_2013PassportSelectionIndices = 26
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_2     DOTA_2013PassportSelectionIndices = 27
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_3     DOTA_2013PassportSelectionIndices = 28
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_4     DOTA_2013PassportSelectionIndices = 29
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_5     DOTA_2013PassportSelectionIndices = 30
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_6     DOTA_2013PassportSelectionIndices = 31
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_7     DOTA_2013PassportSelectionIndices = 32
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_8     DOTA_2013PassportSelectionIndices = 33
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_9     DOTA_2013PassportSelectionIndices = 34
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_10    DOTA_2013PassportSelectionIndices = 35
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_11    DOTA_2013PassportSelectionIndices = 36
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_12    DOTA_2013PassportSelectionIndices = 37
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_13    DOTA_2013PassportSelectionIndices = 38
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_14    DOTA_2013PassportSelectionIndices = 39
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_TEAM        DOTA_2013PassportSelectionIndices = 40
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_PLAYER      DOTA_2013PassportSelectionIndices = 41
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_TEAM_LOCK   DOTA_2013PassportSelectionIndices = 42
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_PLAYER_LOCK DOTA_2013PassportSelectionIndices = 43
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_0         DOTA_2013PassportSelectionIndices = 44
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_1         DOTA_2013PassportSelectionIndices = 45
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_2         DOTA_2013PassportSelectionIndices = 46
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_3         DOTA_2013PassportSelectionIndices = 47
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_4         DOTA_2013PassportSelectionIndices = 48
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_5         DOTA_2013PassportSelectionIndices = 49
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_6         DOTA_2013PassportSelectionIndices = 50
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_7         DOTA_2013PassportSelectionIndices = 51
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_8         DOTA_2013PassportSelectionIndices = 52
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_9         DOTA_2013PassportSelectionIndices = 53
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_10        DOTA_2013PassportSelectionIndices = 54
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_11        DOTA_2013PassportSelectionIndices = 55
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_12        DOTA_2013PassportSelectionIndices = 56
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_13        DOTA_2013PassportSelectionIndices = 57
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_14        DOTA_2013PassportSelectionIndices = 58
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_15        DOTA_2013PassportSelectionIndices = 59
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_16        DOTA_2013PassportSelectionIndices = 60
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_17        DOTA_2013PassportSelectionIndices = 61
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_18        DOTA_2013PassportSelectionIndices = 62
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_19        DOTA_2013PassportSelectionIndices = 63
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_20        DOTA_2013PassportSelectionIndices = 64
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_21        DOTA_2013PassportSelectionIndices = 65
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_22        DOTA_2013PassportSelectionIndices = 66
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_23        DOTA_2013PassportSelectionIndices = 67
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_24        DOTA_2013PassportSelectionIndices = 68
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_25        DOTA_2013PassportSelectionIndices = 69
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_26        DOTA_2013PassportSelectionIndices = 70
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_27        DOTA_2013PassportSelectionIndices = 71
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_28        DOTA_2013PassportSelectionIndices = 72
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_29        DOTA_2013PassportSelectionIndices = 73
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_30        DOTA_2013PassportSelectionIndices = 74
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_31        DOTA_2013PassportSelectionIndices = 75
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_32        DOTA_2013PassportSelectionIndices = 76
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_33        DOTA_2013PassportSelectionIndices = 77
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_34        DOTA_2013PassportSelectionIndices = 78
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_35        DOTA_2013PassportSelectionIndices = 79
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_36        DOTA_2013PassportSelectionIndices = 80
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_37        DOTA_2013PassportSelectionIndices = 81
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_38        DOTA_2013PassportSelectionIndices = 82
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_39        DOTA_2013PassportSelectionIndices = 83
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_40        DOTA_2013PassportSelectionIndices = 84
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_41        DOTA_2013PassportSelectionIndices = 85
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_42        DOTA_2013PassportSelectionIndices = 86
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_43        DOTA_2013PassportSelectionIndices = 87
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_0              DOTA_2013PassportSelectionIndices = 88
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_1              DOTA_2013PassportSelectionIndices = 89
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_2              DOTA_2013PassportSelectionIndices = 90
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_3              DOTA_2013PassportSelectionIndices = 91
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_4              DOTA_2013PassportSelectionIndices = 92
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_5              DOTA_2013PassportSelectionIndices = 93
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_6              DOTA_2013PassportSelectionIndices = 94
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_7              DOTA_2013PassportSelectionIndices = 95
)

var DOTA_2013PassportSelectionIndices_name = map[int32]string{
	0:  "PP13_SEL_ALLSTAR_PLAYER_0",
	1:  "PP13_SEL_ALLSTAR_PLAYER_1",
	2:  "PP13_SEL_ALLSTAR_PLAYER_2",
	3:  "PP13_SEL_ALLSTAR_PLAYER_3",
	4:  "PP13_SEL_ALLSTAR_PLAYER_4",
	5:  "PP13_SEL_ALLSTAR_PLAYER_5",
	6:  "PP13_SEL_ALLSTAR_PLAYER_6",
	7:  "PP13_SEL_ALLSTAR_PLAYER_7",
	8:  "PP13_SEL_ALLSTAR_PLAYER_8",
	9:  "PP13_SEL_ALLSTAR_PLAYER_9",
	10: "PP13_SEL_QUALPRED_WEST_0",
	11: "PP13_SEL_QUALPRED_WEST_1",
	12: "PP13_SEL_QUALPRED_WEST_2",
	13: "PP13_SEL_QUALPRED_WEST_3",
	14: "PP13_SEL_QUALPRED_WEST_4",
	15: "PP13_SEL_QUALPRED_WEST_5",
	16: "PP13_SEL_QUALPRED_WEST_6",
	17: "PP13_SEL_QUALPRED_WEST_7",
	18: "PP13_SEL_QUALPRED_WEST_8",
	19: "PP13_SEL_QUALPRED_WEST_9",
	20: "PP13_SEL_QUALPRED_WEST_10",
	21: "PP13_SEL_QUALPRED_WEST_11",
	22: "PP13_SEL_QUALPRED_WEST_12",
	23: "PP13_SEL_QUALPRED_WEST_13",
	24: "PP13_SEL_QUALPRED_WEST_14",
	25: "PP13_SEL_QUALPRED_EAST_0",
	26: "PP13_SEL_QUALPRED_EAST_1",
	27: "PP13_SEL_QUALPRED_EAST_2",
	28: "PP13_SEL_QUALPRED_EAST_3",
	29: "PP13_SEL_QUALPRED_EAST_4",
	30: "PP13_SEL_QUALPRED_EAST_5",
	31: "PP13_SEL_QUALPRED_EAST_6",
	32: "PP13_SEL_QUALPRED_EAST_7",
	33: "PP13_SEL_QUALPRED_EAST_8",
	34: "PP13_SEL_QUALPRED_EAST_9",
	35: "PP13_SEL_QUALPRED_EAST_10",
	36: "PP13_SEL_QUALPRED_EAST_11",
	37: "PP13_SEL_QUALPRED_EAST_12",
	38: "PP13_SEL_QUALPRED_EAST_13",
	39: "PP13_SEL_QUALPRED_EAST_14",
	40: "PP13_SEL_TEAMCUP_TEAM",
	41: "PP13_SEL_TEAMCUP_PLAYER",
	42: "PP13_SEL_TEAMCUP_TEAM_LOCK",
	43: "PP13_SEL_TEAMCUP_PLAYER_LOCK",
	44: "PP13_SEL_EVENTPRED_0",
	45: "PP13_SEL_EVENTPRED_1",
	46: "PP13_SEL_EVENTPRED_2",
	47: "PP13_SEL_EVENTPRED_3",
	48: "PP13_SEL_EVENTPRED_4",
	49: "PP13_SEL_EVENTPRED_5",
	50: "PP13_SEL_EVENTPRED_6",
	51: "PP13_SEL_EVENTPRED_7",
	52: "PP13_SEL_EVENTPRED_8",
	53: "PP13_SEL_EVENTPRED_9",
	54: "PP13_SEL_EVENTPRED_10",
	55: "PP13_SEL_EVENTPRED_11",
	56: "PP13_SEL_EVENTPRED_12",
	57: "PP13_SEL_EVENTPRED_13",
	58: "PP13_SEL_EVENTPRED_14",
	59: "PP13_SEL_EVENTPRED_15",
	60: "PP13_SEL_EVENTPRED_16",
	61: "PP13_SEL_EVENTPRED_17",
	62: "PP13_SEL_EVENTPRED_18",
	63: "PP13_SEL_EVENTPRED_19",
	64: "PP13_SEL_EVENTPRED_20",
	65: "PP13_SEL_EVENTPRED_21",
	66: "PP13_SEL_EVENTPRED_22",
	67: "PP13_SEL_EVENTPRED_23",
	68: "PP13_SEL_EVENTPRED_24",
	69: "PP13_SEL_EVENTPRED_25",
	70: "PP13_SEL_EVENTPRED_26",
	71: "PP13_SEL_EVENTPRED_27",
	72: "PP13_SEL_EVENTPRED_28",
	73: "PP13_SEL_EVENTPRED_29",
	74: "PP13_SEL_EVENTPRED_30",
	75: "PP13_SEL_EVENTPRED_31",
	76: "PP13_SEL_EVENTPRED_32",
	77: "PP13_SEL_EVENTPRED_33",
	78: "PP13_SEL_EVENTPRED_34",
	79: "PP13_SEL_EVENTPRED_35",
	80: "PP13_SEL_EVENTPRED_36",
	81: "PP13_SEL_EVENTPRED_37",
	82: "PP13_SEL_EVENTPRED_38",
	83: "PP13_SEL_EVENTPRED_39",
	84: "PP13_SEL_EVENTPRED_40",
	85: "PP13_SEL_EVENTPRED_41",
	86: "PP13_SEL_EVENTPRED_42",
	87: "PP13_SEL_EVENTPRED_43",
	88: "PP13_SEL_SOLO_0",
	89: "PP13_SEL_SOLO_1",
	90: "PP13_SEL_SOLO_2",
	91: "PP13_SEL_SOLO_3",
	92: "PP13_SEL_SOLO_4",
	93: "PP13_SEL_SOLO_5",
	94: "PP13_SEL_SOLO_6",
	95: "PP13_SEL_SOLO_7",
}
var DOTA_2013PassportSelectionIndices_value = map[string]int32{
	"PP13_SEL_ALLSTAR_PLAYER_0":    0,
	"PP13_SEL_ALLSTAR_PLAYER_1":    1,
	"PP13_SEL_ALLSTAR_PLAYER_2":    2,
	"PP13_SEL_ALLSTAR_PLAYER_3":    3,
	"PP13_SEL_ALLSTAR_PLAYER_4":    4,
	"PP13_SEL_ALLSTAR_PLAYER_5":    5,
	"PP13_SEL_ALLSTAR_PLAYER_6":    6,
	"PP13_SEL_ALLSTAR_PLAYER_7":    7,
	"PP13_SEL_ALLSTAR_PLAYER_8":    8,
	"PP13_SEL_ALLSTAR_PLAYER_9":    9,
	"PP13_SEL_QUALPRED_WEST_0":     10,
	"PP13_SEL_QUALPRED_WEST_1":     11,
	"PP13_SEL_QUALPRED_WEST_2":     12,
	"PP13_SEL_QUALPRED_WEST_3":     13,
	"PP13_SEL_QUALPRED_WEST_4":     14,
	"PP13_SEL_QUALPRED_WEST_5":     15,
	"PP13_SEL_QUALPRED_WEST_6":     16,
	"PP13_SEL_QUALPRED_WEST_7":     17,
	"PP13_SEL_QUALPRED_WEST_8":     18,
	"PP13_SEL_QUALPRED_WEST_9":     19,
	"PP13_SEL_QUALPRED_WEST_10":    20,
	"PP13_SEL_QUALPRED_WEST_11":    21,
	"PP13_SEL_QUALPRED_WEST_12":    22,
	"PP13_SEL_QUALPRED_WEST_13":    23,
	"PP13_SEL_QUALPRED_WEST_14":    24,
	"PP13_SEL_QUALPRED_EAST_0":     25,
	"PP13_SEL_QUALPRED_EAST_1":     26,
	"PP13_SEL_QUALPRED_EAST_2":     27,
	"PP13_SEL_QUALPRED_EAST_3":     28,
	"PP13_SEL_QUALPRED_EAST_4":     29,
	"PP13_SEL_QUALPRED_EAST_5":     30,
	"PP13_SEL_QUALPRED_EAST_6":     31,
	"PP13_SEL_QUALPRED_EAST_7":     32,
	"PP13_SEL_QUALPRED_EAST_8":     33,
	"PP13_SEL_QUALPRED_EAST_9":     34,
	"PP13_SEL_QUALPRED_EAST_10":    35,
	"PP13_SEL_QUALPRED_EAST_11":    36,
	"PP13_SEL_QUALPRED_EAST_12":    37,
	"PP13_SEL_QUALPRED_EAST_13":    38,
	"PP13_SEL_QUALPRED_EAST_14":    39,
	"PP13_SEL_TEAMCUP_TEAM":        40,
	"PP13_SEL_TEAMCUP_PLAYER":      41,
	"PP13_SEL_TEAMCUP_TEAM_LOCK":   42,
	"PP13_SEL_TEAMCUP_PLAYER_LOCK": 43,
	"PP13_SEL_EVENTPRED_0":         44,
	"PP13_SEL_EVENTPRED_1":         45,
	"PP13_SEL_EVENTPRED_2":         46,
	"PP13_SEL_EVENTPRED_3":         47,
	"PP13_SEL_EVENTPRED_4":         48,
	"PP13_SEL_EVENTPRED_5":         49,
	"PP13_SEL_EVENTPRED_6":         50,
	"PP13_SEL_EVENTPRED_7":         51,
	"PP13_SEL_EVENTPRED_8":         52,
	"PP13_SEL_EVENTPRED_9":         53,
	"PP13_SEL_EVENTPRED_10":        54,
	"PP13_SEL_EVENTPRED_11":        55,
	"PP13_SEL_EVENTPRED_12":        56,
	"PP13_SEL_EVENTPRED_13":        57,
	"PP13_SEL_EVENTPRED_14":        58,
	"PP13_SEL_EVENTPRED_15":        59,
	"PP13_SEL_EVENTPRED_16":        60,
	"PP13_SEL_EVENTPRED_17":        61,
	"PP13_SEL_EVENTPRED_18":        62,
	"PP13_SEL_EVENTPRED_19":        63,
	"PP13_SEL_EVENTPRED_20":        64,
	"PP13_SEL_EVENTPRED_21":        65,
	"PP13_SEL_EVENTPRED_22":        66,
	"PP13_SEL_EVENTPRED_23":        67,
	"PP13_SEL_EVENTPRED_24":        68,
	"PP13_SEL_EVENTPRED_25":        69,
	"PP13_SEL_EVENTPRED_26":        70,
	"PP13_SEL_EVENTPRED_27":        71,
	"PP13_SEL_EVENTPRED_28":        72,
	"PP13_SEL_EVENTPRED_29":        73,
	"PP13_SEL_EVENTPRED_30":        74,
	"PP13_SEL_EVENTPRED_31":        75,
	"PP13_SEL_EVENTPRED_32":        76,
	"PP13_SEL_EVENTPRED_33":        77,
	"PP13_SEL_EVENTPRED_34":        78,
	"PP13_SEL_EVENTPRED_35":        79,
	"PP13_SEL_EVENTPRED_36":        80,
	"PP13_SEL_EVENTPRED_37":        81,
	"PP13_SEL_EVENTPRED_38":        82,
	"PP13_SEL_EVENTPRED_39":        83,
	"PP13_SEL_EVENTPRED_40":        84,
	"PP13_SEL_EVENTPRED_41":        85,
	"PP13_SEL_EVENTPRED_42":        86,
	"PP13_SEL_EVENTPRED_43":        87,
	"PP13_SEL_SOLO_0":              88,
	"PP13_SEL_SOLO_1":              89,
	"PP13_SEL_SOLO_2":              90,
	"PP13_SEL_SOLO_3":              91,
	"PP13_SEL_SOLO_4":              92,
	"PP13_SEL_SOLO_5":              93,
	"PP13_SEL_SOLO_6":              94,
	"PP13_SEL_SOLO_7":              95,
}

func (x DOTA_2013PassportSelectionIndices) Enum() *DOTA_2013PassportSelectionIndices {
	p := new(DOTA_2013PassportSelectionIndices)
	*p = x
	return p
}
func (x DOTA_2013PassportSelectionIndices) String() string {
	return proto.EnumName(DOTA_2013PassportSelectionIndices_name, int32(x))
}
func (x *DOTA_2013PassportSelectionIndices) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_2013PassportSelectionIndices_value, data, "DOTA_2013PassportSelectionIndices")
	if err != nil {
		return err
	}
	*x = DOTA_2013PassportSelectionIndices(value)
	return nil
}

type EItemEditorReservationResult int32

const (
	EItemEditorReservationResult_k_EItemEditorReservationResult_OK            EItemEditorReservationResult = 1
	EItemEditorReservationResult_k_EItemEditorReservationResult_AlreadyExists EItemEditorReservationResult = 2
	EItemEditorReservationResult_k_EItemEditorReservationResult_Reserved      EItemEditorReservationResult = 3
	EItemEditorReservationResult_k_EItemEditorReservationResult_TimedOut      EItemEditorReservationResult = 4
)

var EItemEditorReservationResult_name = map[int32]string{
	1: "k_EItemEditorReservationResult_OK",
	2: "k_EItemEditorReservationResult_AlreadyExists",
	3: "k_EItemEditorReservationResult_Reserved",
	4: "k_EItemEditorReservationResult_TimedOut",
}
var EItemEditorReservationResult_value = map[string]int32{
	"k_EItemEditorReservationResult_OK":            1,
	"k_EItemEditorReservationResult_AlreadyExists": 2,
	"k_EItemEditorReservationResult_Reserved":      3,
	"k_EItemEditorReservationResult_TimedOut":      4,
}

func (x EItemEditorReservationResult) Enum() *EItemEditorReservationResult {
	p := new(EItemEditorReservationResult)
	*p = x
	return p
}
func (x EItemEditorReservationResult) String() string {
	return proto.EnumName(EItemEditorReservationResult_name, int32(x))
}
func (x *EItemEditorReservationResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemEditorReservationResult_value, data, "EItemEditorReservationResult")
	if err != nil {
		return err
	}
	*x = EItemEditorReservationResult(value)
	return nil
}

type CMsgDOTAMatch_ReplayState int32

const (
	CMsgDOTAMatch_REPLAY_AVAILABLE    CMsgDOTAMatch_ReplayState = 0
	CMsgDOTAMatch_REPLAY_NOT_RECORDED CMsgDOTAMatch_ReplayState = 1
	CMsgDOTAMatch_REPLAY_EXPIRED      CMsgDOTAMatch_ReplayState = 2
)

var CMsgDOTAMatch_ReplayState_name = map[int32]string{
	0: "REPLAY_AVAILABLE",
	1: "REPLAY_NOT_RECORDED",
	2: "REPLAY_EXPIRED",
}
var CMsgDOTAMatch_ReplayState_value = map[string]int32{
	"REPLAY_AVAILABLE":    0,
	"REPLAY_NOT_RECORDED": 1,
	"REPLAY_EXPIRED":      2,
}

func (x CMsgDOTAMatch_ReplayState) Enum() *CMsgDOTAMatch_ReplayState {
	p := new(CMsgDOTAMatch_ReplayState)
	*p = x
	return p
}
func (x CMsgDOTAMatch_ReplayState) String() string {
	return proto.EnumName(CMsgDOTAMatch_ReplayState_name, int32(x))
}
func (x *CMsgDOTAMatch_ReplayState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAMatch_ReplayState_value, data, "CMsgDOTAMatch_ReplayState")
	if err != nil {
		return err
	}
	*x = CMsgDOTAMatch_ReplayState(value)
	return nil
}

type CMsgDOTARequestMatches_SkillLevel int32

const (
	CMsgDOTARequestMatches_Any      CMsgDOTARequestMatches_SkillLevel = 0
	CMsgDOTARequestMatches_Normal   CMsgDOTARequestMatches_SkillLevel = 1
	CMsgDOTARequestMatches_High     CMsgDOTARequestMatches_SkillLevel = 2
	CMsgDOTARequestMatches_VeryHigh CMsgDOTARequestMatches_SkillLevel = 3
)

var CMsgDOTARequestMatches_SkillLevel_name = map[int32]string{
	0: "Any",
	1: "Normal",
	2: "High",
	3: "VeryHigh",
}
var CMsgDOTARequestMatches_SkillLevel_value = map[string]int32{
	"Any":      0,
	"Normal":   1,
	"High":     2,
	"VeryHigh": 3,
}

func (x CMsgDOTARequestMatches_SkillLevel) Enum() *CMsgDOTARequestMatches_SkillLevel {
	p := new(CMsgDOTARequestMatches_SkillLevel)
	*p = x
	return p
}
func (x CMsgDOTARequestMatches_SkillLevel) String() string {
	return proto.EnumName(CMsgDOTARequestMatches_SkillLevel_name, int32(x))
}
func (x *CMsgDOTARequestMatches_SkillLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTARequestMatches_SkillLevel_value, data, "CMsgDOTARequestMatches_SkillLevel")
	if err != nil {
		return err
	}
	*x = CMsgDOTARequestMatches_SkillLevel(value)
	return nil
}

type CMsgDOTAPopup_PopupID int32

const (
	CMsgDOTAPopup_KICKED_FROM_LOBBY                                     CMsgDOTAPopup_PopupID = 0
	CMsgDOTAPopup_KICKED_FROM_PARTY                                     CMsgDOTAPopup_PopupID = 1
	CMsgDOTAPopup_KICKED_FROM_TEAM                                      CMsgDOTAPopup_PopupID = 2
	CMsgDOTAPopup_TEAM_WAS_DISBANDED                                    CMsgDOTAPopup_PopupID = 3
	CMsgDOTAPopup_TEAM_MATCHMAKE_ALREADY_MATCH                          CMsgDOTAPopup_PopupID = 4
	CMsgDOTAPopup_TEAM_MATCHMAKE_ALREADY_FINDING                        CMsgDOTAPopup_PopupID = 5
	CMsgDOTAPopup_TEAM_MATCHMAKE_FULL                                   CMsgDOTAPopup_PopupID = 6
	CMsgDOTAPopup_TEAM_MATCHMAKE_FAIL_ADD                               CMsgDOTAPopup_PopupID = 7
	CMsgDOTAPopup_TEAM_MATCHMAKE_FAIL_ADD_CURRENT                       CMsgDOTAPopup_PopupID = 8
	CMsgDOTAPopup_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER                     CMsgDOTAPopup_PopupID = 9
	CMsgDOTAPopup_TEAM_MATCHMAKE_ALREADY_GAME                           CMsgDOTAPopup_PopupID = 10
	CMsgDOTAPopup_TEAM_MATCHMAKE_FAIL_GET_PARTY                         CMsgDOTAPopup_PopupID = 11
	CMsgDOTAPopup_MATCHMAKING_DISABLED                                  CMsgDOTAPopup_PopupID = 12
	CMsgDOTAPopup_INVITE_DENIED                                         CMsgDOTAPopup_PopupID = 13
	CMsgDOTAPopup_PARTY_FULL                                            CMsgDOTAPopup_PopupID = 14
	CMsgDOTAPopup_MADE_ADMIN                                            CMsgDOTAPopup_PopupID = 15
	CMsgDOTAPopup_NEED_TO_PURCHASE                                      CMsgDOTAPopup_PopupID = 16
	CMsgDOTAPopup_SIGNON_MESSAGE                                        CMsgDOTAPopup_PopupID = 17
	CMsgDOTAPopup_GUILD_KICKED                                          CMsgDOTAPopup_PopupID = 18
	CMsgDOTAPopup_MATCHMAKING_REGION_OFFLINE                            CMsgDOTAPopup_PopupID = 19
	CMsgDOTAPopup_TOO_MANY_MATCHGROUPS                                  CMsgDOTAPopup_PopupID = 20
	CMsgDOTAPopup_TOURNAMENT_GAME_NOT_FOUND                             CMsgDOTAPopup_PopupID = 21
	CMsgDOTAPopup_TOURNAMENT_GAME_HAS_LOBBY_ID                          CMsgDOTAPopup_PopupID = 22
	CMsgDOTAPopup_TOURNAMENT_GAME_HAS_MATCH_ID                          CMsgDOTAPopup_PopupID = 23
	CMsgDOTAPopup_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM                   CMsgDOTAPopup_PopupID = 24
	CMsgDOTAPopup_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM                      CMsgDOTAPopup_PopupID = 25
	CMsgDOTAPopup_TOURNAMENT_GAME_SQL_UPDATE_FAILED                     CMsgDOTAPopup_PopupID = 26
	CMsgDOTAPopup_NOT_LEAGUE_ADMIN                                      CMsgDOTAPopup_PopupID = 27
	CMsgDOTAPopup_PARTY_NOT_VALID_TO_MM                                 CMsgDOTAPopup_PopupID = 28
	CMsgDOTAPopup_PARTY_NOT_VALID_TO_MM_COACHCOUNT                      CMsgDOTAPopup_PopupID = 29
	CMsgDOTAPopup_PARTY_MEMBER_IN_ANOTHER_GAME                          CMsgDOTAPopup_PopupID = 30
	CMsgDOTAPopup_PARTY_MEMBER_IN_LOW_PRIORITY                          CMsgDOTAPopup_PopupID = 31
	CMsgDOTAPopup_CLIENT_OUT_OF_DATE                                    CMsgDOTAPopup_PopupID = 32
	CMsgDOTAPopup_COMPETITIVE_MM_NO_COACHES                             CMsgDOTAPopup_PopupID = 33
	CMsgDOTAPopup_COMPETITIVE_MM_NO_LOW_PRIORITY                        CMsgDOTAPopup_PopupID = 34
	CMsgDOTAPopup_COMPETITIVE_MM_NOT_UNLOCKED                           CMsgDOTAPopup_PopupID = 35
	CMsgDOTAPopup_COMPETITIVE_MM_GAME_MODE_NOT_ALLOWED                  CMsgDOTAPopup_PopupID = 36
	CMsgDOTAPopup_GAME_MODE_NOT_UNLOCKED                                CMsgDOTAPopup_PopupID = 37
	CMsgDOTAPopup_SAVE_GAME_CORRUPT                                     CMsgDOTAPopup_PopupID = 38
	CMsgDOTAPopup_INSUFFICIENT_INGOTS                                   CMsgDOTAPopup_PopupID = 39
	CMsgDOTAPopup_COMPETITIVE_MM_NO_4STACKS                             CMsgDOTAPopup_PopupID = 40
	CMsgDOTAPopup_COMPETITIVE_MM_PARTY_MMR_SPREAD_TOO_LARGE             CMsgDOTAPopup_PopupID = 41
	CMsgDOTAPopup_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL CMsgDOTAPopup_PopupID = 42
	CMsgDOTAPopup_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_IN_PARTY         CMsgDOTAPopup_PopupID = 43
	CMsgDOTAPopup_PARTY_LEADER_JOINED_LOBBY                             CMsgDOTAPopup_PopupID = 44
	CMsgDOTAPopup_MM_1V1_NO_PARTIES                                     CMsgDOTAPopup_PopupID = 45
	CMsgDOTAPopup_MM_1V1_NO_LOW_PRIORITY                                CMsgDOTAPopup_PopupID = 46
)

var CMsgDOTAPopup_PopupID_name = map[int32]string{
	0:  "KICKED_FROM_LOBBY",
	1:  "KICKED_FROM_PARTY",
	2:  "KICKED_FROM_TEAM",
	3:  "TEAM_WAS_DISBANDED",
	4:  "TEAM_MATCHMAKE_ALREADY_MATCH",
	5:  "TEAM_MATCHMAKE_ALREADY_FINDING",
	6:  "TEAM_MATCHMAKE_FULL",
	7:  "TEAM_MATCHMAKE_FAIL_ADD",
	8:  "TEAM_MATCHMAKE_FAIL_ADD_CURRENT",
	9:  "TEAM_MATCHMAKE_FAILED_TEAM_MEMBER",
	10: "TEAM_MATCHMAKE_ALREADY_GAME",
	11: "TEAM_MATCHMAKE_FAIL_GET_PARTY",
	12: "MATCHMAKING_DISABLED",
	13: "INVITE_DENIED",
	14: "PARTY_FULL",
	15: "MADE_ADMIN",
	16: "NEED_TO_PURCHASE",
	17: "SIGNON_MESSAGE",
	18: "GUILD_KICKED",
	19: "MATCHMAKING_REGION_OFFLINE",
	20: "TOO_MANY_MATCHGROUPS",
	21: "TOURNAMENT_GAME_NOT_FOUND",
	22: "TOURNAMENT_GAME_HAS_LOBBY_ID",
	23: "TOURNAMENT_GAME_HAS_MATCH_ID",
	24: "TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM",
	25: "TOURNAMENT_GAME_HAS_NO_DIRE_TEAM",
	26: "TOURNAMENT_GAME_SQL_UPDATE_FAILED",
	27: "NOT_LEAGUE_ADMIN",
	28: "PARTY_NOT_VALID_TO_MM",
	29: "PARTY_NOT_VALID_TO_MM_COACHCOUNT",
	30: "PARTY_MEMBER_IN_ANOTHER_GAME",
	31: "PARTY_MEMBER_IN_LOW_PRIORITY",
	32: "CLIENT_OUT_OF_DATE",
	33: "COMPETITIVE_MM_NO_COACHES",
	34: "COMPETITIVE_MM_NO_LOW_PRIORITY",
	35: "COMPETITIVE_MM_NOT_UNLOCKED",
	36: "COMPETITIVE_MM_GAME_MODE_NOT_ALLOWED",
	37: "GAME_MODE_NOT_UNLOCKED",
	38: "SAVE_GAME_CORRUPT",
	39: "INSUFFICIENT_INGOTS",
	40: "COMPETITIVE_MM_NO_4STACKS",
	41: "COMPETITIVE_MM_PARTY_MMR_SPREAD_TOO_LARGE",
	42: "COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL",
	43: "COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_IN_PARTY",
	44: "PARTY_LEADER_JOINED_LOBBY",
	45: "MM_1V1_NO_PARTIES",
	46: "MM_1V1_NO_LOW_PRIORITY",
}
var CMsgDOTAPopup_PopupID_value = map[string]int32{
	"KICKED_FROM_LOBBY":                                     0,
	"KICKED_FROM_PARTY":                                     1,
	"KICKED_FROM_TEAM":                                      2,
	"TEAM_WAS_DISBANDED":                                    3,
	"TEAM_MATCHMAKE_ALREADY_MATCH":                          4,
	"TEAM_MATCHMAKE_ALREADY_FINDING":                        5,
	"TEAM_MATCHMAKE_FULL":                                   6,
	"TEAM_MATCHMAKE_FAIL_ADD":                               7,
	"TEAM_MATCHMAKE_FAIL_ADD_CURRENT":                       8,
	"TEAM_MATCHMAKE_FAILED_TEAM_MEMBER":                     9,
	"TEAM_MATCHMAKE_ALREADY_GAME":                           10,
	"TEAM_MATCHMAKE_FAIL_GET_PARTY":                         11,
	"MATCHMAKING_DISABLED":                                  12,
	"INVITE_DENIED":                                         13,
	"PARTY_FULL":                                            14,
	"MADE_ADMIN":                                            15,
	"NEED_TO_PURCHASE":                                      16,
	"SIGNON_MESSAGE":                                        17,
	"GUILD_KICKED":                                          18,
	"MATCHMAKING_REGION_OFFLINE":                            19,
	"TOO_MANY_MATCHGROUPS":                                  20,
	"TOURNAMENT_GAME_NOT_FOUND":                             21,
	"TOURNAMENT_GAME_HAS_LOBBY_ID":                          22,
	"TOURNAMENT_GAME_HAS_MATCH_ID":                          23,
	"TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM":                   24,
	"TOURNAMENT_GAME_HAS_NO_DIRE_TEAM":                      25,
	"TOURNAMENT_GAME_SQL_UPDATE_FAILED":                     26,
	"NOT_LEAGUE_ADMIN":                                      27,
	"PARTY_NOT_VALID_TO_MM":                                 28,
	"PARTY_NOT_VALID_TO_MM_COACHCOUNT":                      29,
	"PARTY_MEMBER_IN_ANOTHER_GAME":                          30,
	"PARTY_MEMBER_IN_LOW_PRIORITY":                          31,
	"CLIENT_OUT_OF_DATE":                                    32,
	"COMPETITIVE_MM_NO_COACHES":                             33,
	"COMPETITIVE_MM_NO_LOW_PRIORITY":                        34,
	"COMPETITIVE_MM_NOT_UNLOCKED":                           35,
	"COMPETITIVE_MM_GAME_MODE_NOT_ALLOWED":                  36,
	"GAME_MODE_NOT_UNLOCKED":                                37,
	"SAVE_GAME_CORRUPT":                                     38,
	"INSUFFICIENT_INGOTS":                                   39,
	"COMPETITIVE_MM_NO_4STACKS":                             40,
	"COMPETITIVE_MM_PARTY_MMR_SPREAD_TOO_LARGE":             41,
	"COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL": 42,
	"COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_IN_PARTY":         43,
	"PARTY_LEADER_JOINED_LOBBY":                             44,
	"MM_1V1_NO_PARTIES":                                     45,
	"MM_1V1_NO_LOW_PRIORITY":                                46,
}

func (x CMsgDOTAPopup_PopupID) Enum() *CMsgDOTAPopup_PopupID {
	p := new(CMsgDOTAPopup_PopupID)
	*p = x
	return p
}
func (x CMsgDOTAPopup_PopupID) String() string {
	return proto.EnumName(CMsgDOTAPopup_PopupID_name, int32(x))
}
func (x *CMsgDOTAPopup_PopupID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAPopup_PopupID_value, data, "CMsgDOTAPopup_PopupID")
	if err != nil {
		return err
	}
	*x = CMsgDOTAPopup_PopupID(value)
	return nil
}

type CMsgDOTACreateTeamResponse_Result int32

const (
	CMsgDOTACreateTeamResponse_INVALID                        CMsgDOTACreateTeamResponse_Result = -1
	CMsgDOTACreateTeamResponse_SUCCESS                        CMsgDOTACreateTeamResponse_Result = 0
	CMsgDOTACreateTeamResponse_NAME_EMPTY                     CMsgDOTACreateTeamResponse_Result = 1
	CMsgDOTACreateTeamResponse_NAME_BAD_CHARACTERS            CMsgDOTACreateTeamResponse_Result = 2
	CMsgDOTACreateTeamResponse_NAME_TAKEN                     CMsgDOTACreateTeamResponse_Result = 3
	CMsgDOTACreateTeamResponse_NAME_TOO_LONG                  CMsgDOTACreateTeamResponse_Result = 4
	CMsgDOTACreateTeamResponse_TAG_EMPTY                      CMsgDOTACreateTeamResponse_Result = 5
	CMsgDOTACreateTeamResponse_TAG_BAD_CHARACTERS             CMsgDOTACreateTeamResponse_Result = 6
	CMsgDOTACreateTeamResponse_TAG_TAKEN                      CMsgDOTACreateTeamResponse_Result = 7
	CMsgDOTACreateTeamResponse_TAG_TOO_LONG                   CMsgDOTACreateTeamResponse_Result = 8
	CMsgDOTACreateTeamResponse_CREATOR_BUSY                   CMsgDOTACreateTeamResponse_Result = 9
	CMsgDOTACreateTeamResponse_UNSPECIFIED_ERROR              CMsgDOTACreateTeamResponse_Result = 10
	CMsgDOTACreateTeamResponse_CREATOR_TEAM_LIMIT_REACHED     CMsgDOTACreateTeamResponse_Result = 11
	CMsgDOTACreateTeamResponse_NO_LOGO                        CMsgDOTACreateTeamResponse_Result = 12
	CMsgDOTACreateTeamResponse_CREATOR_TEAM_CREATION_COOLDOWN CMsgDOTACreateTeamResponse_Result = 13
	CMsgDOTACreateTeamResponse_LOGO_UPLOAD_FAILED             CMsgDOTACreateTeamResponse_Result = 14
	CMsgDOTACreateTeamResponse_NAME_CHANGED_TOO_RECENTLY      CMsgDOTACreateTeamResponse_Result = 15
	CMsgDOTACreateTeamResponse_CREATOR_INSUFFICIENT_LEVEL     CMsgDOTACreateTeamResponse_Result = 16
)

var CMsgDOTACreateTeamResponse_Result_name = map[int32]string{
	-1: "INVALID",
	0:  "SUCCESS",
	1:  "NAME_EMPTY",
	2:  "NAME_BAD_CHARACTERS",
	3:  "NAME_TAKEN",
	4:  "NAME_TOO_LONG",
	5:  "TAG_EMPTY",
	6:  "TAG_BAD_CHARACTERS",
	7:  "TAG_TAKEN",
	8:  "TAG_TOO_LONG",
	9:  "CREATOR_BUSY",
	10: "UNSPECIFIED_ERROR",
	11: "CREATOR_TEAM_LIMIT_REACHED",
	12: "NO_LOGO",
	13: "CREATOR_TEAM_CREATION_COOLDOWN",
	14: "LOGO_UPLOAD_FAILED",
	15: "NAME_CHANGED_TOO_RECENTLY",
	16: "CREATOR_INSUFFICIENT_LEVEL",
}
var CMsgDOTACreateTeamResponse_Result_value = map[string]int32{
	"INVALID":                        -1,
	"SUCCESS":                        0,
	"NAME_EMPTY":                     1,
	"NAME_BAD_CHARACTERS":            2,
	"NAME_TAKEN":                     3,
	"NAME_TOO_LONG":                  4,
	"TAG_EMPTY":                      5,
	"TAG_BAD_CHARACTERS":             6,
	"TAG_TAKEN":                      7,
	"TAG_TOO_LONG":                   8,
	"CREATOR_BUSY":                   9,
	"UNSPECIFIED_ERROR":              10,
	"CREATOR_TEAM_LIMIT_REACHED":     11,
	"NO_LOGO":                        12,
	"CREATOR_TEAM_CREATION_COOLDOWN": 13,
	"LOGO_UPLOAD_FAILED":             14,
	"NAME_CHANGED_TOO_RECENTLY":      15,
	"CREATOR_INSUFFICIENT_LEVEL":     16,
}

func (x CMsgDOTACreateTeamResponse_Result) Enum() *CMsgDOTACreateTeamResponse_Result {
	p := new(CMsgDOTACreateTeamResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTACreateTeamResponse_Result) String() string {
	return proto.EnumName(CMsgDOTACreateTeamResponse_Result_name, int32(x))
}
func (x *CMsgDOTACreateTeamResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTACreateTeamResponse_Result_value, data, "CMsgDOTACreateTeamResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTACreateTeamResponse_Result(value)
	return nil
}

type CMsgDOTAEditTeamLogoResponse_Result int32

const (
	CMsgDOTAEditTeamLogoResponse_INVALID           CMsgDOTAEditTeamLogoResponse_Result = -1
	CMsgDOTAEditTeamLogoResponse_SUCCESS           CMsgDOTAEditTeamLogoResponse_Result = 0
	CMsgDOTAEditTeamLogoResponse_CREATOR_BUSY      CMsgDOTAEditTeamLogoResponse_Result = 9
	CMsgDOTAEditTeamLogoResponse_UNSPECIFIED_ERROR CMsgDOTAEditTeamLogoResponse_Result = 10
	CMsgDOTAEditTeamLogoResponse_NO_LOGO           CMsgDOTAEditTeamLogoResponse_Result = 12
)

var CMsgDOTAEditTeamLogoResponse_Result_name = map[int32]string{
	-1: "INVALID",
	0:  "SUCCESS",
	9:  "CREATOR_BUSY",
	10: "UNSPECIFIED_ERROR",
	12: "NO_LOGO",
}
var CMsgDOTAEditTeamLogoResponse_Result_value = map[string]int32{
	"INVALID":           -1,
	"SUCCESS":           0,
	"CREATOR_BUSY":      9,
	"UNSPECIFIED_ERROR": 10,
	"NO_LOGO":           12,
}

func (x CMsgDOTAEditTeamLogoResponse_Result) Enum() *CMsgDOTAEditTeamLogoResponse_Result {
	p := new(CMsgDOTAEditTeamLogoResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAEditTeamLogoResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAEditTeamLogoResponse_Result_name, int32(x))
}
func (x *CMsgDOTAEditTeamLogoResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAEditTeamLogoResponse_Result_value, data, "CMsgDOTAEditTeamLogoResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAEditTeamLogoResponse_Result(value)
	return nil
}

type CMsgDOTAEditTeamDetailsResponse_Result int32

const (
	CMsgDOTAEditTeamDetailsResponse_INVALID           CMsgDOTAEditTeamDetailsResponse_Result = -1
	CMsgDOTAEditTeamDetailsResponse_SUCCESS           CMsgDOTAEditTeamDetailsResponse_Result = 0
	CMsgDOTAEditTeamDetailsResponse_CREATOR_BUSY      CMsgDOTAEditTeamDetailsResponse_Result = 9
	CMsgDOTAEditTeamDetailsResponse_UNSPECIFIED_ERROR CMsgDOTAEditTeamDetailsResponse_Result = 10
)

var CMsgDOTAEditTeamDetailsResponse_Result_name = map[int32]string{
	-1: "INVALID",
	0:  "SUCCESS",
	9:  "CREATOR_BUSY",
	10: "UNSPECIFIED_ERROR",
}
var CMsgDOTAEditTeamDetailsResponse_Result_value = map[string]int32{
	"INVALID":           -1,
	"SUCCESS":           0,
	"CREATOR_BUSY":      9,
	"UNSPECIFIED_ERROR": 10,
}

func (x CMsgDOTAEditTeamDetailsResponse_Result) Enum() *CMsgDOTAEditTeamDetailsResponse_Result {
	p := new(CMsgDOTAEditTeamDetailsResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAEditTeamDetailsResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAEditTeamDetailsResponse_Result_name, int32(x))
}
func (x *CMsgDOTAEditTeamDetailsResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAEditTeamDetailsResponse_Result_value, data, "CMsgDOTAEditTeamDetailsResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAEditTeamDetailsResponse_Result(value)
	return nil
}

type CMsgDOTADisbandTeamResponse_Result int32

const (
	CMsgDOTADisbandTeamResponse_SUCCESS           CMsgDOTADisbandTeamResponse_Result = 0
	CMsgDOTADisbandTeamResponse_FAILURE           CMsgDOTADisbandTeamResponse_Result = 1
	CMsgDOTADisbandTeamResponse_FAILURE_NOT_EMPTY CMsgDOTADisbandTeamResponse_Result = 2
)

var CMsgDOTADisbandTeamResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "FAILURE_NOT_EMPTY",
}
var CMsgDOTADisbandTeamResponse_Result_value = map[string]int32{
	"SUCCESS":           0,
	"FAILURE":           1,
	"FAILURE_NOT_EMPTY": 2,
}

func (x CMsgDOTADisbandTeamResponse_Result) Enum() *CMsgDOTADisbandTeamResponse_Result {
	p := new(CMsgDOTADisbandTeamResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTADisbandTeamResponse_Result) String() string {
	return proto.EnumName(CMsgDOTADisbandTeamResponse_Result_name, int32(x))
}
func (x *CMsgDOTADisbandTeamResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTADisbandTeamResponse_Result_value, data, "CMsgDOTADisbandTeamResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTADisbandTeamResponse_Result(value)
	return nil
}

type CMsgDOTARequestTeamDataResponse_Result int32

const (
	CMsgDOTARequestTeamDataResponse_SUCCESS CMsgDOTARequestTeamDataResponse_Result = 0
	CMsgDOTARequestTeamDataResponse_FAILURE CMsgDOTARequestTeamDataResponse_Result = 1
)

var CMsgDOTARequestTeamDataResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}
var CMsgDOTARequestTeamDataResponse_Result_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x CMsgDOTARequestTeamDataResponse_Result) Enum() *CMsgDOTARequestTeamDataResponse_Result {
	p := new(CMsgDOTARequestTeamDataResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTARequestTeamDataResponse_Result) String() string {
	return proto.EnumName(CMsgDOTARequestTeamDataResponse_Result_name, int32(x))
}
func (x *CMsgDOTARequestTeamDataResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTARequestTeamDataResponse_Result_value, data, "CMsgDOTARequestTeamDataResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTARequestTeamDataResponse_Result(value)
	return nil
}

type CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result int32

const (
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_SUCCESS                           CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 0
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_MEMBER_LIMIT                      CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 1
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_INVITEE_NOT_AVAILABLE             CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 2
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_INVITEE_BUSY                      CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 3
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_INVITEE_ALREADY_ON_THE_TEAM       CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 4
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_INVITEE_ALREADY_ON_TOO_MANY_TEAMS CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 5
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_UNSPECIFIED_ERROR                 CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 6
	CMsgDOTATeamInvite_GCImmediateResponseToInviter_INVITEE_INSUFFICIENT_LEVEL        CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = 7
)

var CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "MEMBER_LIMIT",
	2: "INVITEE_NOT_AVAILABLE",
	3: "INVITEE_BUSY",
	4: "INVITEE_ALREADY_ON_THE_TEAM",
	5: "INVITEE_ALREADY_ON_TOO_MANY_TEAMS",
	6: "UNSPECIFIED_ERROR",
	7: "INVITEE_INSUFFICIENT_LEVEL",
}
var CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_value = map[string]int32{
	"SUCCESS":                           0,
	"MEMBER_LIMIT":                      1,
	"INVITEE_NOT_AVAILABLE":             2,
	"INVITEE_BUSY":                      3,
	"INVITEE_ALREADY_ON_THE_TEAM":       4,
	"INVITEE_ALREADY_ON_TOO_MANY_TEAMS": 5,
	"UNSPECIFIED_ERROR":                 6,
	"INVITEE_INSUFFICIENT_LEVEL":        7,
}

func (x CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result) Enum() *CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result {
	p := new(CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result)
	*p = x
	return p
}
func (x CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result) String() string {
	return proto.EnumName(CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_name, int32(x))
}
func (x *CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_value, data, "CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result(value)
	return nil
}

type CMsgDOTATeamInvite_InviteeResponseToGC_Result int32

const (
	CMsgDOTATeamInvite_InviteeResponseToGC_JOIN    CMsgDOTATeamInvite_InviteeResponseToGC_Result = 0
	CMsgDOTATeamInvite_InviteeResponseToGC_REJECT  CMsgDOTATeamInvite_InviteeResponseToGC_Result = 1
	CMsgDOTATeamInvite_InviteeResponseToGC_TIMEOUT CMsgDOTATeamInvite_InviteeResponseToGC_Result = 2
)

var CMsgDOTATeamInvite_InviteeResponseToGC_Result_name = map[int32]string{
	0: "JOIN",
	1: "REJECT",
	2: "TIMEOUT",
}
var CMsgDOTATeamInvite_InviteeResponseToGC_Result_value = map[string]int32{
	"JOIN":    0,
	"REJECT":  1,
	"TIMEOUT": 2,
}

func (x CMsgDOTATeamInvite_InviteeResponseToGC_Result) Enum() *CMsgDOTATeamInvite_InviteeResponseToGC_Result {
	p := new(CMsgDOTATeamInvite_InviteeResponseToGC_Result)
	*p = x
	return p
}
func (x CMsgDOTATeamInvite_InviteeResponseToGC_Result) String() string {
	return proto.EnumName(CMsgDOTATeamInvite_InviteeResponseToGC_Result_name, int32(x))
}
func (x *CMsgDOTATeamInvite_InviteeResponseToGC_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTATeamInvite_InviteeResponseToGC_Result_value, data, "CMsgDOTATeamInvite_InviteeResponseToGC_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTATeamInvite_InviteeResponseToGC_Result(value)
	return nil
}

type CMsgDOTATeamInvite_GCResponseToInviter_Result int32

const (
	CMsgDOTATeamInvite_GCResponseToInviter_JOINED            CMsgDOTATeamInvite_GCResponseToInviter_Result = 0
	CMsgDOTATeamInvite_GCResponseToInviter_REJECTION         CMsgDOTATeamInvite_GCResponseToInviter_Result = 1
	CMsgDOTATeamInvite_GCResponseToInviter_TIMEOUT           CMsgDOTATeamInvite_GCResponseToInviter_Result = 2
	CMsgDOTATeamInvite_GCResponseToInviter_UNSPECIFIED_ERROR CMsgDOTATeamInvite_GCResponseToInviter_Result = 3
)

var CMsgDOTATeamInvite_GCResponseToInviter_Result_name = map[int32]string{
	0: "JOINED",
	1: "REJECTION",
	2: "TIMEOUT",
	3: "UNSPECIFIED_ERROR",
}
var CMsgDOTATeamInvite_GCResponseToInviter_Result_value = map[string]int32{
	"JOINED":            0,
	"REJECTION":         1,
	"TIMEOUT":           2,
	"UNSPECIFIED_ERROR": 3,
}

func (x CMsgDOTATeamInvite_GCResponseToInviter_Result) Enum() *CMsgDOTATeamInvite_GCResponseToInviter_Result {
	p := new(CMsgDOTATeamInvite_GCResponseToInviter_Result)
	*p = x
	return p
}
func (x CMsgDOTATeamInvite_GCResponseToInviter_Result) String() string {
	return proto.EnumName(CMsgDOTATeamInvite_GCResponseToInviter_Result_name, int32(x))
}
func (x *CMsgDOTATeamInvite_GCResponseToInviter_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTATeamInvite_GCResponseToInviter_Result_value, data, "CMsgDOTATeamInvite_GCResponseToInviter_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTATeamInvite_GCResponseToInviter_Result(value)
	return nil
}

type CMsgDOTATeamInvite_GCResponseToInvitee_Result int32

const (
	CMsgDOTATeamInvite_GCResponseToInvitee_SUCCESS CMsgDOTATeamInvite_GCResponseToInvitee_Result = 0
	CMsgDOTATeamInvite_GCResponseToInvitee_FAILURE CMsgDOTATeamInvite_GCResponseToInvitee_Result = 1
)

var CMsgDOTATeamInvite_GCResponseToInvitee_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}
var CMsgDOTATeamInvite_GCResponseToInvitee_Result_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x CMsgDOTATeamInvite_GCResponseToInvitee_Result) Enum() *CMsgDOTATeamInvite_GCResponseToInvitee_Result {
	p := new(CMsgDOTATeamInvite_GCResponseToInvitee_Result)
	*p = x
	return p
}
func (x CMsgDOTATeamInvite_GCResponseToInvitee_Result) String() string {
	return proto.EnumName(CMsgDOTATeamInvite_GCResponseToInvitee_Result_name, int32(x))
}
func (x *CMsgDOTATeamInvite_GCResponseToInvitee_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTATeamInvite_GCResponseToInvitee_Result_value, data, "CMsgDOTATeamInvite_GCResponseToInvitee_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTATeamInvite_GCResponseToInvitee_Result(value)
	return nil
}

type CMsgDOTAKickTeamMemberResponse_Result int32

const (
	CMsgDOTAKickTeamMemberResponse_SUCCESS CMsgDOTAKickTeamMemberResponse_Result = 0
	CMsgDOTAKickTeamMemberResponse_FAILURE CMsgDOTAKickTeamMemberResponse_Result = 1
)

var CMsgDOTAKickTeamMemberResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}
var CMsgDOTAKickTeamMemberResponse_Result_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x CMsgDOTAKickTeamMemberResponse_Result) Enum() *CMsgDOTAKickTeamMemberResponse_Result {
	p := new(CMsgDOTAKickTeamMemberResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAKickTeamMemberResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAKickTeamMemberResponse_Result_name, int32(x))
}
func (x *CMsgDOTAKickTeamMemberResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAKickTeamMemberResponse_Result_value, data, "CMsgDOTAKickTeamMemberResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAKickTeamMemberResponse_Result(value)
	return nil
}

type CMsgDOTATransferTeamAdminResponse_Result int32

const (
	CMsgDOTATransferTeamAdminResponse_SUCCESS             CMsgDOTATransferTeamAdminResponse_Result = 0
	CMsgDOTATransferTeamAdminResponse_NOT_ADMIN           CMsgDOTATransferTeamAdminResponse_Result = 1
	CMsgDOTATransferTeamAdminResponse_ON_OTHER_TEAM       CMsgDOTATransferTeamAdminResponse_Result = 2
	CMsgDOTATransferTeamAdminResponse_ADMIN_OF_OTHER_TEAM CMsgDOTATransferTeamAdminResponse_Result = 3
	CMsgDOTATransferTeamAdminResponse_UNSPECIFIED_ERROR   CMsgDOTATransferTeamAdminResponse_Result = 4
)

var CMsgDOTATransferTeamAdminResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_ADMIN",
	2: "ON_OTHER_TEAM",
	3: "ADMIN_OF_OTHER_TEAM",
	4: "UNSPECIFIED_ERROR",
}
var CMsgDOTATransferTeamAdminResponse_Result_value = map[string]int32{
	"SUCCESS":             0,
	"NOT_ADMIN":           1,
	"ON_OTHER_TEAM":       2,
	"ADMIN_OF_OTHER_TEAM": 3,
	"UNSPECIFIED_ERROR":   4,
}

func (x CMsgDOTATransferTeamAdminResponse_Result) Enum() *CMsgDOTATransferTeamAdminResponse_Result {
	p := new(CMsgDOTATransferTeamAdminResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTATransferTeamAdminResponse_Result) String() string {
	return proto.EnumName(CMsgDOTATransferTeamAdminResponse_Result_name, int32(x))
}
func (x *CMsgDOTATransferTeamAdminResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTATransferTeamAdminResponse_Result_value, data, "CMsgDOTATransferTeamAdminResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTATransferTeamAdminResponse_Result(value)
	return nil
}

type CMsgDOTALeaveTeamResponse_Result int32

const (
	CMsgDOTALeaveTeamResponse_SUCCESS CMsgDOTALeaveTeamResponse_Result = 0
	CMsgDOTALeaveTeamResponse_FAILURE CMsgDOTALeaveTeamResponse_Result = 1
)

var CMsgDOTALeaveTeamResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}
var CMsgDOTALeaveTeamResponse_Result_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x CMsgDOTALeaveTeamResponse_Result) Enum() *CMsgDOTALeaveTeamResponse_Result {
	p := new(CMsgDOTALeaveTeamResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTALeaveTeamResponse_Result) String() string {
	return proto.EnumName(CMsgDOTALeaveTeamResponse_Result_name, int32(x))
}
func (x *CMsgDOTALeaveTeamResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTALeaveTeamResponse_Result_value, data, "CMsgDOTALeaveTeamResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTALeaveTeamResponse_Result(value)
	return nil
}

type CMsgDOTAGuildCreateResponse_EError int32

const (
	CMsgDOTAGuildCreateResponse_UNSPECIFIED             CMsgDOTAGuildCreateResponse_EError = 0
	CMsgDOTAGuildCreateResponse_NAME_EMPTY              CMsgDOTAGuildCreateResponse_EError = 1
	CMsgDOTAGuildCreateResponse_NAME_BAD_CHARACTERS     CMsgDOTAGuildCreateResponse_EError = 2
	CMsgDOTAGuildCreateResponse_NAME_TOO_LONG           CMsgDOTAGuildCreateResponse_EError = 3
	CMsgDOTAGuildCreateResponse_NAME_TAKEN              CMsgDOTAGuildCreateResponse_EError = 4
	CMsgDOTAGuildCreateResponse_TAG_EMPTY               CMsgDOTAGuildCreateResponse_EError = 5
	CMsgDOTAGuildCreateResponse_TAG_BAD_CHARACTERS      CMsgDOTAGuildCreateResponse_EError = 6
	CMsgDOTAGuildCreateResponse_TAG_TOO_LONG            CMsgDOTAGuildCreateResponse_EError = 7
	CMsgDOTAGuildCreateResponse_ACCOUNT_TOO_MANY_GUILDS CMsgDOTAGuildCreateResponse_EError = 8
	CMsgDOTAGuildCreateResponse_LOGO_UPLOAD_FAILED      CMsgDOTAGuildCreateResponse_EError = 9
)

var CMsgDOTAGuildCreateResponse_EError_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "NAME_EMPTY",
	2: "NAME_BAD_CHARACTERS",
	3: "NAME_TOO_LONG",
	4: "NAME_TAKEN",
	5: "TAG_EMPTY",
	6: "TAG_BAD_CHARACTERS",
	7: "TAG_TOO_LONG",
	8: "ACCOUNT_TOO_MANY_GUILDS",
	9: "LOGO_UPLOAD_FAILED",
}
var CMsgDOTAGuildCreateResponse_EError_value = map[string]int32{
	"UNSPECIFIED":             0,
	"NAME_EMPTY":              1,
	"NAME_BAD_CHARACTERS":     2,
	"NAME_TOO_LONG":           3,
	"NAME_TAKEN":              4,
	"TAG_EMPTY":               5,
	"TAG_BAD_CHARACTERS":      6,
	"TAG_TOO_LONG":            7,
	"ACCOUNT_TOO_MANY_GUILDS": 8,
	"LOGO_UPLOAD_FAILED":      9,
}

func (x CMsgDOTAGuildCreateResponse_EError) Enum() *CMsgDOTAGuildCreateResponse_EError {
	p := new(CMsgDOTAGuildCreateResponse_EError)
	*p = x
	return p
}
func (x CMsgDOTAGuildCreateResponse_EError) String() string {
	return proto.EnumName(CMsgDOTAGuildCreateResponse_EError_name, int32(x))
}
func (x *CMsgDOTAGuildCreateResponse_EError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAGuildCreateResponse_EError_value, data, "CMsgDOTAGuildCreateResponse_EError")
	if err != nil {
		return err
	}
	*x = CMsgDOTAGuildCreateResponse_EError(value)
	return nil
}

type CMsgDOTAGuildSetAccountRoleResponse_EResult int32

const (
	CMsgDOTAGuildSetAccountRoleResponse_SUCCESS                       CMsgDOTAGuildSetAccountRoleResponse_EResult = 0
	CMsgDOTAGuildSetAccountRoleResponse_ERROR_UNSPECIFIED             CMsgDOTAGuildSetAccountRoleResponse_EResult = 1
	CMsgDOTAGuildSetAccountRoleResponse_ERROR_NO_PERMISSION           CMsgDOTAGuildSetAccountRoleResponse_EResult = 2
	CMsgDOTAGuildSetAccountRoleResponse_ERROR_NO_OTHER_LEADER         CMsgDOTAGuildSetAccountRoleResponse_EResult = 3
	CMsgDOTAGuildSetAccountRoleResponse_ERROR_ACCOUNT_TOO_MANY_GUILDS CMsgDOTAGuildSetAccountRoleResponse_EResult = 4
	CMsgDOTAGuildSetAccountRoleResponse_ERROR_GUILD_TOO_MANY_MEMBERS  CMsgDOTAGuildSetAccountRoleResponse_EResult = 5
)

var CMsgDOTAGuildSetAccountRoleResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_NO_OTHER_LEADER",
	4: "ERROR_ACCOUNT_TOO_MANY_GUILDS",
	5: "ERROR_GUILD_TOO_MANY_MEMBERS",
}
var CMsgDOTAGuildSetAccountRoleResponse_EResult_value = map[string]int32{
	"SUCCESS":                       0,
	"ERROR_UNSPECIFIED":             1,
	"ERROR_NO_PERMISSION":           2,
	"ERROR_NO_OTHER_LEADER":         3,
	"ERROR_ACCOUNT_TOO_MANY_GUILDS": 4,
	"ERROR_GUILD_TOO_MANY_MEMBERS":  5,
}

func (x CMsgDOTAGuildSetAccountRoleResponse_EResult) Enum() *CMsgDOTAGuildSetAccountRoleResponse_EResult {
	p := new(CMsgDOTAGuildSetAccountRoleResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAGuildSetAccountRoleResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAGuildSetAccountRoleResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAGuildSetAccountRoleResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAGuildSetAccountRoleResponse_EResult_value, data, "CMsgDOTAGuildSetAccountRoleResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAGuildSetAccountRoleResponse_EResult(value)
	return nil
}

type CMsgDOTAGuildInviteAccountResponse_EResult int32

const (
	CMsgDOTAGuildInviteAccountResponse_SUCCESS                        CMsgDOTAGuildInviteAccountResponse_EResult = 0
	CMsgDOTAGuildInviteAccountResponse_ERROR_UNSPECIFIED              CMsgDOTAGuildInviteAccountResponse_EResult = 1
	CMsgDOTAGuildInviteAccountResponse_ERROR_NO_PERMISSION            CMsgDOTAGuildInviteAccountResponse_EResult = 2
	CMsgDOTAGuildInviteAccountResponse_ERROR_ACCOUNT_ALREADY_INVITED  CMsgDOTAGuildInviteAccountResponse_EResult = 3
	CMsgDOTAGuildInviteAccountResponse_ERROR_ACCOUNT_ALREADY_IN_GUILD CMsgDOTAGuildInviteAccountResponse_EResult = 4
	CMsgDOTAGuildInviteAccountResponse_ERROR_ACCOUNT_TOO_MANY_INVITES CMsgDOTAGuildInviteAccountResponse_EResult = 5
	CMsgDOTAGuildInviteAccountResponse_ERROR_GUILD_TOO_MANY_INVITES   CMsgDOTAGuildInviteAccountResponse_EResult = 6
	CMsgDOTAGuildInviteAccountResponse_ERROR_ACCOUNT_TOO_MANY_GUILDS  CMsgDOTAGuildInviteAccountResponse_EResult = 7
)

var CMsgDOTAGuildInviteAccountResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_ACCOUNT_ALREADY_INVITED",
	4: "ERROR_ACCOUNT_ALREADY_IN_GUILD",
	5: "ERROR_ACCOUNT_TOO_MANY_INVITES",
	6: "ERROR_GUILD_TOO_MANY_INVITES",
	7: "ERROR_ACCOUNT_TOO_MANY_GUILDS",
}
var CMsgDOTAGuildInviteAccountResponse_EResult_value = map[string]int32{
	"SUCCESS":                        0,
	"ERROR_UNSPECIFIED":              1,
	"ERROR_NO_PERMISSION":            2,
	"ERROR_ACCOUNT_ALREADY_INVITED":  3,
	"ERROR_ACCOUNT_ALREADY_IN_GUILD": 4,
	"ERROR_ACCOUNT_TOO_MANY_INVITES": 5,
	"ERROR_GUILD_TOO_MANY_INVITES":   6,
	"ERROR_ACCOUNT_TOO_MANY_GUILDS":  7,
}

func (x CMsgDOTAGuildInviteAccountResponse_EResult) Enum() *CMsgDOTAGuildInviteAccountResponse_EResult {
	p := new(CMsgDOTAGuildInviteAccountResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAGuildInviteAccountResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAGuildInviteAccountResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAGuildInviteAccountResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAGuildInviteAccountResponse_EResult_value, data, "CMsgDOTAGuildInviteAccountResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAGuildInviteAccountResponse_EResult(value)
	return nil
}

type CMsgDOTAGuildCancelInviteResponse_EResult int32

const (
	CMsgDOTAGuildCancelInviteResponse_SUCCESS             CMsgDOTAGuildCancelInviteResponse_EResult = 0
	CMsgDOTAGuildCancelInviteResponse_ERROR_UNSPECIFIED   CMsgDOTAGuildCancelInviteResponse_EResult = 1
	CMsgDOTAGuildCancelInviteResponse_ERROR_NO_PERMISSION CMsgDOTAGuildCancelInviteResponse_EResult = 2
)

var CMsgDOTAGuildCancelInviteResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAGuildCancelInviteResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAGuildCancelInviteResponse_EResult) Enum() *CMsgDOTAGuildCancelInviteResponse_EResult {
	p := new(CMsgDOTAGuildCancelInviteResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAGuildCancelInviteResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAGuildCancelInviteResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAGuildCancelInviteResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAGuildCancelInviteResponse_EResult_value, data, "CMsgDOTAGuildCancelInviteResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAGuildCancelInviteResponse_EResult(value)
	return nil
}

type CMsgDOTAGuildUpdateDetailsResponse_EResult int32

const (
	CMsgDOTAGuildUpdateDetailsResponse_SUCCESS             CMsgDOTAGuildUpdateDetailsResponse_EResult = 0
	CMsgDOTAGuildUpdateDetailsResponse_ERROR_UNSPECIFIED   CMsgDOTAGuildUpdateDetailsResponse_EResult = 1
	CMsgDOTAGuildUpdateDetailsResponse_ERROR_NO_PERMISSION CMsgDOTAGuildUpdateDetailsResponse_EResult = 2
)

var CMsgDOTAGuildUpdateDetailsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAGuildUpdateDetailsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAGuildUpdateDetailsResponse_EResult) Enum() *CMsgDOTAGuildUpdateDetailsResponse_EResult {
	p := new(CMsgDOTAGuildUpdateDetailsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAGuildUpdateDetailsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAGuildUpdateDetailsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAGuildUpdateDetailsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAGuildUpdateDetailsResponse_EResult_value, data, "CMsgDOTAGuildUpdateDetailsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAGuildUpdateDetailsResponse_EResult(value)
	return nil
}

type CMsgDOTAPartySetOpenGuildResponse_EResult int32

const (
	CMsgDOTAPartySetOpenGuildResponse_SUCCESS           CMsgDOTAPartySetOpenGuildResponse_EResult = 0
	CMsgDOTAPartySetOpenGuildResponse_ERROR_UNSPECIFIED CMsgDOTAPartySetOpenGuildResponse_EResult = 1
)

var CMsgDOTAPartySetOpenGuildResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}
var CMsgDOTAPartySetOpenGuildResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAPartySetOpenGuildResponse_EResult) Enum() *CMsgDOTAPartySetOpenGuildResponse_EResult {
	p := new(CMsgDOTAPartySetOpenGuildResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAPartySetOpenGuildResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAPartySetOpenGuildResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAPartySetOpenGuildResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAPartySetOpenGuildResponse_EResult_value, data, "CMsgDOTAPartySetOpenGuildResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAPartySetOpenGuildResponse_EResult(value)
	return nil
}

type CMsgDOTAJoinOpenGuildPartyResponse_EResult int32

const (
	CMsgDOTAJoinOpenGuildPartyResponse_SUCCESS           CMsgDOTAJoinOpenGuildPartyResponse_EResult = 0
	CMsgDOTAJoinOpenGuildPartyResponse_ERROR_UNSPECIFIED CMsgDOTAJoinOpenGuildPartyResponse_EResult = 1
)

var CMsgDOTAJoinOpenGuildPartyResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}
var CMsgDOTAJoinOpenGuildPartyResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAJoinOpenGuildPartyResponse_EResult) Enum() *CMsgDOTAJoinOpenGuildPartyResponse_EResult {
	p := new(CMsgDOTAJoinOpenGuildPartyResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAJoinOpenGuildPartyResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAJoinOpenGuildPartyResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAJoinOpenGuildPartyResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAJoinOpenGuildPartyResponse_EResult_value, data, "CMsgDOTAJoinOpenGuildPartyResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAJoinOpenGuildPartyResponse_EResult(value)
	return nil
}

type CMsgDOTAGuildEditLogoResponse_EResult int32

const (
	CMsgDOTAGuildEditLogoResponse_SUCCESS            CMsgDOTAGuildEditLogoResponse_EResult = 0
	CMsgDOTAGuildEditLogoResponse_NO_PERMISSION      CMsgDOTAGuildEditLogoResponse_EResult = 1
	CMsgDOTAGuildEditLogoResponse_LOGO_UPLOAD_FAILED CMsgDOTAGuildEditLogoResponse_EResult = 2
	CMsgDOTAGuildEditLogoResponse_UNSPECIFIED_ERROR  CMsgDOTAGuildEditLogoResponse_EResult = 3
)

var CMsgDOTAGuildEditLogoResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "NO_PERMISSION",
	2: "LOGO_UPLOAD_FAILED",
	3: "UNSPECIFIED_ERROR",
}
var CMsgDOTAGuildEditLogoResponse_EResult_value = map[string]int32{
	"SUCCESS":            0,
	"NO_PERMISSION":      1,
	"LOGO_UPLOAD_FAILED": 2,
	"UNSPECIFIED_ERROR":  3,
}

func (x CMsgDOTAGuildEditLogoResponse_EResult) Enum() *CMsgDOTAGuildEditLogoResponse_EResult {
	p := new(CMsgDOTAGuildEditLogoResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAGuildEditLogoResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAGuildEditLogoResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAGuildEditLogoResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAGuildEditLogoResponse_EResult_value, data, "CMsgDOTAGuildEditLogoResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAGuildEditLogoResponse_EResult(value)
	return nil
}

type CMsgWatchGameResponse_WatchGameResult int32

const (
	CMsgWatchGameResponse_PENDING                   CMsgWatchGameResponse_WatchGameResult = 0
	CMsgWatchGameResponse_READY                     CMsgWatchGameResponse_WatchGameResult = 1
	CMsgWatchGameResponse_GAMESERVERNOTFOUND        CMsgWatchGameResponse_WatchGameResult = 2
	CMsgWatchGameResponse_UNAVAILABLE               CMsgWatchGameResponse_WatchGameResult = 3
	CMsgWatchGameResponse_CANCELLED                 CMsgWatchGameResponse_WatchGameResult = 4
	CMsgWatchGameResponse_INCOMPATIBLEVERSION       CMsgWatchGameResponse_WatchGameResult = 5
	CMsgWatchGameResponse_MISSINGLEAGUESUBSCRIPTION CMsgWatchGameResponse_WatchGameResult = 6
	CMsgWatchGameResponse_LOBBYNOTFOUND             CMsgWatchGameResponse_WatchGameResult = 7
)

var CMsgWatchGameResponse_WatchGameResult_name = map[int32]string{
	0: "PENDING",
	1: "READY",
	2: "GAMESERVERNOTFOUND",
	3: "UNAVAILABLE",
	4: "CANCELLED",
	5: "INCOMPATIBLEVERSION",
	6: "MISSINGLEAGUESUBSCRIPTION",
	7: "LOBBYNOTFOUND",
}
var CMsgWatchGameResponse_WatchGameResult_value = map[string]int32{
	"PENDING":                   0,
	"READY":                     1,
	"GAMESERVERNOTFOUND":        2,
	"UNAVAILABLE":               3,
	"CANCELLED":                 4,
	"INCOMPATIBLEVERSION":       5,
	"MISSINGLEAGUESUBSCRIPTION": 6,
	"LOBBYNOTFOUND":             7,
}

func (x CMsgWatchGameResponse_WatchGameResult) Enum() *CMsgWatchGameResponse_WatchGameResult {
	p := new(CMsgWatchGameResponse_WatchGameResult)
	*p = x
	return p
}
func (x CMsgWatchGameResponse_WatchGameResult) String() string {
	return proto.EnumName(CMsgWatchGameResponse_WatchGameResult_name, int32(x))
}
func (x *CMsgWatchGameResponse_WatchGameResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgWatchGameResponse_WatchGameResult_value, data, "CMsgWatchGameResponse_WatchGameResult")
	if err != nil {
		return err
	}
	*x = CMsgWatchGameResponse_WatchGameResult(value)
	return nil
}

type CMsgDOTACreateFantasyLeagueResponse_EResult int32

const (
	CMsgDOTACreateFantasyLeagueResponse_SUCCESS                  CMsgDOTACreateFantasyLeagueResponse_EResult = 0
	CMsgDOTACreateFantasyLeagueResponse_ERROR_UNSPECIFIED        CMsgDOTACreateFantasyLeagueResponse_EResult = 1
	CMsgDOTACreateFantasyLeagueResponse_ERROR_TOO_MANY_LEAGUES   CMsgDOTACreateFantasyLeagueResponse_EResult = 2
	CMsgDOTACreateFantasyLeagueResponse_ERROR_INVALID_TEAM_COUNT CMsgDOTACreateFantasyLeagueResponse_EResult = 3
	CMsgDOTACreateFantasyLeagueResponse_ERROR_CREATION_DISABLED  CMsgDOTACreateFantasyLeagueResponse_EResult = 4
)

var CMsgDOTACreateFantasyLeagueResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_TOO_MANY_LEAGUES",
	3: "ERROR_INVALID_TEAM_COUNT",
	4: "ERROR_CREATION_DISABLED",
}
var CMsgDOTACreateFantasyLeagueResponse_EResult_value = map[string]int32{
	"SUCCESS":                  0,
	"ERROR_UNSPECIFIED":        1,
	"ERROR_TOO_MANY_LEAGUES":   2,
	"ERROR_INVALID_TEAM_COUNT": 3,
	"ERROR_CREATION_DISABLED":  4,
}

func (x CMsgDOTACreateFantasyLeagueResponse_EResult) Enum() *CMsgDOTACreateFantasyLeagueResponse_EResult {
	p := new(CMsgDOTACreateFantasyLeagueResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTACreateFantasyLeagueResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTACreateFantasyLeagueResponse_EResult_name, int32(x))
}
func (x *CMsgDOTACreateFantasyLeagueResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTACreateFantasyLeagueResponse_EResult_value, data, "CMsgDOTACreateFantasyLeagueResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTACreateFantasyLeagueResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueEditInfoResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueEditInfoResponse_SUCCESS             CMsgDOTAFantasyLeagueEditInfoResponse_EResult = 0
	CMsgDOTAFantasyLeagueEditInfoResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyLeagueEditInfoResponse_EResult = 1
	CMsgDOTAFantasyLeagueEditInfoResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyLeagueEditInfoResponse_EResult = 2
)

var CMsgDOTAFantasyLeagueEditInfoResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyLeagueEditInfoResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyLeagueEditInfoResponse_EResult) Enum() *CMsgDOTAFantasyLeagueEditInfoResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueEditInfoResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueEditInfoResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueEditInfoResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueEditInfoResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueEditInfoResponse_EResult_value, data, "CMsgDOTAFantasyLeagueEditInfoResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueEditInfoResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueFindResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueFindResponse_SUCCESS                CMsgDOTAFantasyLeagueFindResponse_EResult = 0
	CMsgDOTAFantasyLeagueFindResponse_ERROR_LEAGUE_NOT_FOUND CMsgDOTAFantasyLeagueFindResponse_EResult = 1
	CMsgDOTAFantasyLeagueFindResponse_ERROR_BAD_PASSWORD     CMsgDOTAFantasyLeagueFindResponse_EResult = 2
	CMsgDOTAFantasyLeagueFindResponse_ERROR_UNSPECIFIED      CMsgDOTAFantasyLeagueFindResponse_EResult = 3
	CMsgDOTAFantasyLeagueFindResponse_ERROR_FULL             CMsgDOTAFantasyLeagueFindResponse_EResult = 4
	CMsgDOTAFantasyLeagueFindResponse_ERROR_ALREADY_MEMBER   CMsgDOTAFantasyLeagueFindResponse_EResult = 5
	CMsgDOTAFantasyLeagueFindResponse_ERROR_LEAGUE_LOCKED    CMsgDOTAFantasyLeagueFindResponse_EResult = 6
)

var CMsgDOTAFantasyLeagueFindResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_LEAGUE_NOT_FOUND",
	2: "ERROR_BAD_PASSWORD",
	3: "ERROR_UNSPECIFIED",
	4: "ERROR_FULL",
	5: "ERROR_ALREADY_MEMBER",
	6: "ERROR_LEAGUE_LOCKED",
}
var CMsgDOTAFantasyLeagueFindResponse_EResult_value = map[string]int32{
	"SUCCESS":                0,
	"ERROR_LEAGUE_NOT_FOUND": 1,
	"ERROR_BAD_PASSWORD":     2,
	"ERROR_UNSPECIFIED":      3,
	"ERROR_FULL":             4,
	"ERROR_ALREADY_MEMBER":   5,
	"ERROR_LEAGUE_LOCKED":    6,
}

func (x CMsgDOTAFantasyLeagueFindResponse_EResult) Enum() *CMsgDOTAFantasyLeagueFindResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueFindResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueFindResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueFindResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueFindResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueFindResponse_EResult_value, data, "CMsgDOTAFantasyLeagueFindResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueFindResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueInfoResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueInfoResponse_SUCCESS             CMsgDOTAFantasyLeagueInfoResponse_EResult = 0
	CMsgDOTAFantasyLeagueInfoResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyLeagueInfoResponse_EResult = 1
	CMsgDOTAFantasyLeagueInfoResponse_ERROR_BAD_LEAGUE_ID CMsgDOTAFantasyLeagueInfoResponse_EResult = 2
)

var CMsgDOTAFantasyLeagueInfoResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_BAD_LEAGUE_ID",
}
var CMsgDOTAFantasyLeagueInfoResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_BAD_LEAGUE_ID": 2,
}

func (x CMsgDOTAFantasyLeagueInfoResponse_EResult) Enum() *CMsgDOTAFantasyLeagueInfoResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueInfoResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueInfoResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueInfoResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueInfoResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueInfoResponse_EResult_value, data, "CMsgDOTAFantasyLeagueInfoResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueInfoResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueMatchupsResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueMatchupsResponse_SUCCESS             CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 0
	CMsgDOTAFantasyLeagueMatchupsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 1
	CMsgDOTAFantasyLeagueMatchupsResponse_ERROR_BAD_LEAGUE_ID CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 2
	CMsgDOTAFantasyLeagueMatchupsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 3
)

var CMsgDOTAFantasyLeagueMatchupsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_BAD_LEAGUE_ID",
	3: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyLeagueMatchupsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_BAD_LEAGUE_ID": 2,
	"ERROR_NO_PERMISSION": 3,
}

func (x CMsgDOTAFantasyLeagueMatchupsResponse_EResult) Enum() *CMsgDOTAFantasyLeagueMatchupsResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueMatchupsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueMatchupsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueMatchupsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueMatchupsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueMatchupsResponse_EResult_value, data, "CMsgDOTAFantasyLeagueMatchupsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueMatchupsResponse_EResult(value)
	return nil
}

type CMsgDOTAEditFantasyTeamResponse_EResult int32

const (
	CMsgDOTAEditFantasyTeamResponse_SUCCESS                  CMsgDOTAEditFantasyTeamResponse_EResult = 0
	CMsgDOTAEditFantasyTeamResponse_ERROR_UNSPECIFIED        CMsgDOTAEditFantasyTeamResponse_EResult = 1
	CMsgDOTAEditFantasyTeamResponse_ERROR_INVALID_TEAM_INFO  CMsgDOTAEditFantasyTeamResponse_EResult = 2
	CMsgDOTAEditFantasyTeamResponse_ERROR_NAME_ALREADY_TAKEN CMsgDOTAEditFantasyTeamResponse_EResult = 3
	CMsgDOTAEditFantasyTeamResponse_ERROR_NO_PERMISSION      CMsgDOTAEditFantasyTeamResponse_EResult = 4
)

var CMsgDOTAEditFantasyTeamResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_INVALID_TEAM_INFO",
	3: "ERROR_NAME_ALREADY_TAKEN",
	4: "ERROR_NO_PERMISSION",
}
var CMsgDOTAEditFantasyTeamResponse_EResult_value = map[string]int32{
	"SUCCESS":                  0,
	"ERROR_UNSPECIFIED":        1,
	"ERROR_INVALID_TEAM_INFO":  2,
	"ERROR_NAME_ALREADY_TAKEN": 3,
	"ERROR_NO_PERMISSION":      4,
}

func (x CMsgDOTAEditFantasyTeamResponse_EResult) Enum() *CMsgDOTAEditFantasyTeamResponse_EResult {
	p := new(CMsgDOTAEditFantasyTeamResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAEditFantasyTeamResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAEditFantasyTeamResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAEditFantasyTeamResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAEditFantasyTeamResponse_EResult_value, data, "CMsgDOTAEditFantasyTeamResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAEditFantasyTeamResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamScoreResponse_EResult int32

const (
	CMsgDOTAFantasyTeamScoreResponse_SUCCESS                   CMsgDOTAFantasyTeamScoreResponse_EResult = 0
	CMsgDOTAFantasyTeamScoreResponse_ERROR_UNSPECIFIED         CMsgDOTAFantasyTeamScoreResponse_EResult = 1
	CMsgDOTAFantasyTeamScoreResponse_ERROR_NO_PERMISSION       CMsgDOTAFantasyTeamScoreResponse_EResult = 2
	CMsgDOTAFantasyTeamScoreResponse_ERROR_OWNER_NOT_IN_LEAGUE CMsgDOTAFantasyTeamScoreResponse_EResult = 3
)

var CMsgDOTAFantasyTeamScoreResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_OWNER_NOT_IN_LEAGUE",
}
var CMsgDOTAFantasyTeamScoreResponse_EResult_value = map[string]int32{
	"SUCCESS":                   0,
	"ERROR_UNSPECIFIED":         1,
	"ERROR_NO_PERMISSION":       2,
	"ERROR_OWNER_NOT_IN_LEAGUE": 3,
}

func (x CMsgDOTAFantasyTeamScoreResponse_EResult) Enum() *CMsgDOTAFantasyTeamScoreResponse_EResult {
	p := new(CMsgDOTAFantasyTeamScoreResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamScoreResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamScoreResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamScoreResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamScoreResponse_EResult_value, data, "CMsgDOTAFantasyTeamScoreResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamScoreResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamStandingsResponse_EResult int32

const (
	CMsgDOTAFantasyTeamStandingsResponse_SUCCESS             CMsgDOTAFantasyTeamStandingsResponse_EResult = 0
	CMsgDOTAFantasyTeamStandingsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyTeamStandingsResponse_EResult = 1
	CMsgDOTAFantasyTeamStandingsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyTeamStandingsResponse_EResult = 2
)

var CMsgDOTAFantasyTeamStandingsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyTeamStandingsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyTeamStandingsResponse_EResult) Enum() *CMsgDOTAFantasyTeamStandingsResponse_EResult {
	p := new(CMsgDOTAFantasyTeamStandingsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamStandingsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamStandingsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamStandingsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamStandingsResponse_EResult_value, data, "CMsgDOTAFantasyTeamStandingsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamStandingsResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyPlayerScoreResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerScoreResponse_SUCCESS             CMsgDOTAFantasyPlayerScoreResponse_EResult = 0
	CMsgDOTAFantasyPlayerScoreResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyPlayerScoreResponse_EResult = 1
	CMsgDOTAFantasyPlayerScoreResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyPlayerScoreResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerScoreResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyPlayerScoreResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyPlayerScoreResponse_EResult) Enum() *CMsgDOTAFantasyPlayerScoreResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerScoreResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyPlayerScoreResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerScoreResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyPlayerScoreResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerScoreResponse_EResult_value, data, "CMsgDOTAFantasyPlayerScoreResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerScoreResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyPlayerStandingsResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerStandingsResponse_SUCCESS             CMsgDOTAFantasyPlayerStandingsResponse_EResult = 0
	CMsgDOTAFantasyPlayerStandingsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyPlayerStandingsResponse_EResult = 1
	CMsgDOTAFantasyPlayerStandingsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyPlayerStandingsResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerStandingsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyPlayerStandingsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyPlayerStandingsResponse_EResult) Enum() *CMsgDOTAFantasyPlayerStandingsResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerStandingsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyPlayerStandingsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerStandingsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyPlayerStandingsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerStandingsResponse_EResult_value, data, "CMsgDOTAFantasyPlayerStandingsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerStandingsResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueCreateResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueCreateResponse_SUCCESS                  CMsgDOTAFantasyLeagueCreateResponse_EResult = 0
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_NO_PERMISSION      CMsgDOTAFantasyLeagueCreateResponse_EResult = 1
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_BAD_SEASON_ID      CMsgDOTAFantasyLeagueCreateResponse_EResult = 2
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_BAD_LEAGUE_NAME    CMsgDOTAFantasyLeagueCreateResponse_EResult = 3
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_BAD_TEAM_NAME      CMsgDOTAFantasyLeagueCreateResponse_EResult = 4
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_UNSPECIFIED        CMsgDOTAFantasyLeagueCreateResponse_EResult = 5
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_FAILED_LOGO_UPLOAD CMsgDOTAFantasyLeagueCreateResponse_EResult = 6
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_NO_TICKET          CMsgDOTAFantasyLeagueCreateResponse_EResult = 7
)

var CMsgDOTAFantasyLeagueCreateResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_NO_PERMISSION",
	2: "ERROR_BAD_SEASON_ID",
	3: "ERROR_BAD_LEAGUE_NAME",
	4: "ERROR_BAD_TEAM_NAME",
	5: "ERROR_UNSPECIFIED",
	6: "ERROR_FAILED_LOGO_UPLOAD",
	7: "ERROR_NO_TICKET",
}
var CMsgDOTAFantasyLeagueCreateResponse_EResult_value = map[string]int32{
	"SUCCESS":                  0,
	"ERROR_NO_PERMISSION":      1,
	"ERROR_BAD_SEASON_ID":      2,
	"ERROR_BAD_LEAGUE_NAME":    3,
	"ERROR_BAD_TEAM_NAME":      4,
	"ERROR_UNSPECIFIED":        5,
	"ERROR_FAILED_LOGO_UPLOAD": 6,
	"ERROR_NO_TICKET":          7,
}

func (x CMsgDOTAFantasyLeagueCreateResponse_EResult) Enum() *CMsgDOTAFantasyLeagueCreateResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueCreateResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueCreateResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueCreateResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueCreateResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueCreateResponse_EResult_value, data, "CMsgDOTAFantasyLeagueCreateResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueCreateResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamCreateResponse_EResult int32

const (
	CMsgDOTAFantasyTeamCreateResponse_SUCCESS                     CMsgDOTAFantasyTeamCreateResponse_EResult = 0
	CMsgDOTAFantasyTeamCreateResponse_ERROR_NO_PERMISSION         CMsgDOTAFantasyTeamCreateResponse_EResult = 1
	CMsgDOTAFantasyTeamCreateResponse_ERROR_FAILED_LOGO_UPLOAD    CMsgDOTAFantasyTeamCreateResponse_EResult = 2
	CMsgDOTAFantasyTeamCreateResponse_ERROR_BAD_FANTASY_LEAGUE_ID CMsgDOTAFantasyTeamCreateResponse_EResult = 3
	CMsgDOTAFantasyTeamCreateResponse_ERROR_BAD_NAME              CMsgDOTAFantasyTeamCreateResponse_EResult = 4
	CMsgDOTAFantasyTeamCreateResponse_ERROR_FULL                  CMsgDOTAFantasyTeamCreateResponse_EResult = 5
	CMsgDOTAFantasyTeamCreateResponse_ERROR_ALREADY_MEMBER        CMsgDOTAFantasyTeamCreateResponse_EResult = 6
	CMsgDOTAFantasyTeamCreateResponse_ERROR_BAD_PASSWORD          CMsgDOTAFantasyTeamCreateResponse_EResult = 7
	CMsgDOTAFantasyTeamCreateResponse_ERROR_UNSPECIFIED           CMsgDOTAFantasyTeamCreateResponse_EResult = 8
	CMsgDOTAFantasyTeamCreateResponse_ERROR_NO_TICKET             CMsgDOTAFantasyTeamCreateResponse_EResult = 9
	CMsgDOTAFantasyTeamCreateResponse_ERROR_LEAGUE_LOCKED         CMsgDOTAFantasyTeamCreateResponse_EResult = 10
)

var CMsgDOTAFantasyTeamCreateResponse_EResult_name = map[int32]string{
	0:  "SUCCESS",
	1:  "ERROR_NO_PERMISSION",
	2:  "ERROR_FAILED_LOGO_UPLOAD",
	3:  "ERROR_BAD_FANTASY_LEAGUE_ID",
	4:  "ERROR_BAD_NAME",
	5:  "ERROR_FULL",
	6:  "ERROR_ALREADY_MEMBER",
	7:  "ERROR_BAD_PASSWORD",
	8:  "ERROR_UNSPECIFIED",
	9:  "ERROR_NO_TICKET",
	10: "ERROR_LEAGUE_LOCKED",
}
var CMsgDOTAFantasyTeamCreateResponse_EResult_value = map[string]int32{
	"SUCCESS":                     0,
	"ERROR_NO_PERMISSION":         1,
	"ERROR_FAILED_LOGO_UPLOAD":    2,
	"ERROR_BAD_FANTASY_LEAGUE_ID": 3,
	"ERROR_BAD_NAME":              4,
	"ERROR_FULL":                  5,
	"ERROR_ALREADY_MEMBER":        6,
	"ERROR_BAD_PASSWORD":          7,
	"ERROR_UNSPECIFIED":           8,
	"ERROR_NO_TICKET":             9,
	"ERROR_LEAGUE_LOCKED":         10,
}

func (x CMsgDOTAFantasyTeamCreateResponse_EResult) Enum() *CMsgDOTAFantasyTeamCreateResponse_EResult {
	p := new(CMsgDOTAFantasyTeamCreateResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamCreateResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamCreateResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamCreateResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamCreateResponse_EResult_value, data, "CMsgDOTAFantasyTeamCreateResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamCreateResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueEditInvitesResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueEditInvitesResponse_SUCCESS           CMsgDOTAFantasyLeagueEditInvitesResponse_EResult = 0
	CMsgDOTAFantasyLeagueEditInvitesResponse_ERROR_UNSPECIFIED CMsgDOTAFantasyLeagueEditInvitesResponse_EResult = 1
)

var CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}
var CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) Enum() *CMsgDOTAFantasyLeagueEditInvitesResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueEditInvitesResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_value, data, "CMsgDOTAFantasyLeagueEditInvitesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueEditInvitesResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueDraftPlayerResponse_SUCCESS                           CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 0
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_UNSPECIFIED                 CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 1
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_INVALID_FANTASY_LEAGUE      CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 2
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_FANTASY_LEAGUE_NOT_DRAFTING CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 3
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_OWNER_NOT_IN_LEAGUE         CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 4
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_NOT_OWNERS_TURN             CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 5
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_PLAYER_INVALID              CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 6
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_PLAYER_UNAVAILABLE          CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 7
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_PLAYER_NO_VALID_SLOTS       CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 8
)

var CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_INVALID_FANTASY_LEAGUE",
	3: "ERROR_FANTASY_LEAGUE_NOT_DRAFTING",
	4: "ERROR_OWNER_NOT_IN_LEAGUE",
	5: "ERROR_NOT_OWNERS_TURN",
	6: "ERROR_PLAYER_INVALID",
	7: "ERROR_PLAYER_UNAVAILABLE",
	8: "ERROR_PLAYER_NO_VALID_SLOTS",
}
var CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_value = map[string]int32{
	"SUCCESS":                           0,
	"ERROR_UNSPECIFIED":                 1,
	"ERROR_INVALID_FANTASY_LEAGUE":      2,
	"ERROR_FANTASY_LEAGUE_NOT_DRAFTING": 3,
	"ERROR_OWNER_NOT_IN_LEAGUE":         4,
	"ERROR_NOT_OWNERS_TURN":             5,
	"ERROR_PLAYER_INVALID":              6,
	"ERROR_PLAYER_UNAVAILABLE":          7,
	"ERROR_PLAYER_NO_VALID_SLOTS":       8,
}

func (x CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) Enum() *CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_value, data, "CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamRosterSwapResponse_EResult int32

const (
	CMsgDOTAFantasyTeamRosterSwapResponse_SUCCESS                   CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 0
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_UNSPECIFIED         CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 1
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_OWNER_NOT_IN_LEAGUE CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 2
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_SLOTS_INVALID       CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 3
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_ROSTER_LOCKED       CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 4
)

var CMsgDOTAFantasyTeamRosterSwapResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_OWNER_NOT_IN_LEAGUE",
	3: "ERROR_SLOTS_INVALID",
	4: "ERROR_ROSTER_LOCKED",
}
var CMsgDOTAFantasyTeamRosterSwapResponse_EResult_value = map[string]int32{
	"SUCCESS":                   0,
	"ERROR_UNSPECIFIED":         1,
	"ERROR_OWNER_NOT_IN_LEAGUE": 2,
	"ERROR_SLOTS_INVALID":       3,
	"ERROR_ROSTER_LOCKED":       4,
}

func (x CMsgDOTAFantasyTeamRosterSwapResponse_EResult) Enum() *CMsgDOTAFantasyTeamRosterSwapResponse_EResult {
	p := new(CMsgDOTAFantasyTeamRosterSwapResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamRosterSwapResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamRosterSwapResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamRosterSwapResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamRosterSwapResponse_EResult_value, data, "CMsgDOTAFantasyTeamRosterSwapResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamRosterSwapResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamRosterAddDropResponse_EResult int32

const (
	CMsgDOTAFantasyTeamRosterAddDropResponse_SUCCESS                     CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 0
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_UNSPECIFIED           CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 1
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_OWNER_NOT_IN_LEAGUE   CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 2
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_PLAYER_NOT_AVAILABLE  CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 3
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_PLAYER_NOT_ON_TEAM    CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 4
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_TRADE_ALREADY_PENDING CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 5
)

var CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_OWNER_NOT_IN_LEAGUE",
	3: "ERROR_PLAYER_NOT_AVAILABLE",
	4: "ERROR_PLAYER_NOT_ON_TEAM",
	5: "ERROR_TRADE_ALREADY_PENDING",
}
var CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_value = map[string]int32{
	"SUCCESS":                     0,
	"ERROR_UNSPECIFIED":           1,
	"ERROR_OWNER_NOT_IN_LEAGUE":   2,
	"ERROR_PLAYER_NOT_AVAILABLE":  3,
	"ERROR_PLAYER_NOT_ON_TEAM":    4,
	"ERROR_TRADE_ALREADY_PENDING": 5,
}

func (x CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) Enum() *CMsgDOTAFantasyTeamRosterAddDropResponse_EResult {
	p := new(CMsgDOTAFantasyTeamRosterAddDropResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_value, data, "CMsgDOTAFantasyTeamRosterAddDropResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamRosterAddDropResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamTradesResponse_EResult int32

const (
	CMsgDOTAFantasyTeamTradesResponse_SUCCESS             CMsgDOTAFantasyTeamTradesResponse_EResult = 0
	CMsgDOTAFantasyTeamTradesResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyTeamTradesResponse_EResult = 1
	CMsgDOTAFantasyTeamTradesResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyTeamTradesResponse_EResult = 2
)

var CMsgDOTAFantasyTeamTradesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyTeamTradesResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyTeamTradesResponse_EResult) Enum() *CMsgDOTAFantasyTeamTradesResponse_EResult {
	p := new(CMsgDOTAFantasyTeamTradesResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamTradesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamTradesResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamTradesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamTradesResponse_EResult_value, data, "CMsgDOTAFantasyTeamTradesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamTradesResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamTradeCancelResponse_EResult int32

const (
	CMsgDOTAFantasyTeamTradeCancelResponse_SUCCESS             CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 0
	CMsgDOTAFantasyTeamTradeCancelResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 1
	CMsgDOTAFantasyTeamTradeCancelResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 2
	CMsgDOTAFantasyTeamTradeCancelResponse_ERROR_NO_TRADE      CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 3
)

var CMsgDOTAFantasyTeamTradeCancelResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_NO_TRADE",
}
var CMsgDOTAFantasyTeamTradeCancelResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
	"ERROR_NO_TRADE":      3,
}

func (x CMsgDOTAFantasyTeamTradeCancelResponse_EResult) Enum() *CMsgDOTAFantasyTeamTradeCancelResponse_EResult {
	p := new(CMsgDOTAFantasyTeamTradeCancelResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamTradeCancelResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamTradeCancelResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamTradeCancelResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamTradeCancelResponse_EResult_value, data, "CMsgDOTAFantasyTeamTradeCancelResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamTradeCancelResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyTeamRosterResponse_EResult int32

const (
	CMsgDOTAFantasyTeamRosterResponse_SUCCESS                   CMsgDOTAFantasyTeamRosterResponse_EResult = 0
	CMsgDOTAFantasyTeamRosterResponse_ERROR_UNSPECIFIED         CMsgDOTAFantasyTeamRosterResponse_EResult = 1
	CMsgDOTAFantasyTeamRosterResponse_ERROR_NO_PERMISSION       CMsgDOTAFantasyTeamRosterResponse_EResult = 2
	CMsgDOTAFantasyTeamRosterResponse_ERROR_OWNER_NOT_IN_LEAGUE CMsgDOTAFantasyTeamRosterResponse_EResult = 3
)

var CMsgDOTAFantasyTeamRosterResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_OWNER_NOT_IN_LEAGUE",
}
var CMsgDOTAFantasyTeamRosterResponse_EResult_value = map[string]int32{
	"SUCCESS":                   0,
	"ERROR_UNSPECIFIED":         1,
	"ERROR_NO_PERMISSION":       2,
	"ERROR_OWNER_NOT_IN_LEAGUE": 3,
}

func (x CMsgDOTAFantasyTeamRosterResponse_EResult) Enum() *CMsgDOTAFantasyTeamRosterResponse_EResult {
	p := new(CMsgDOTAFantasyTeamRosterResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyTeamRosterResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamRosterResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyTeamRosterResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamRosterResponse_EResult_value, data, "CMsgDOTAFantasyTeamRosterResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamRosterResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerHisoricalStatsResponse_SUCCESS             CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = 0
	CMsgDOTAFantasyPlayerHisoricalStatsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = 1
	CMsgDOTAFantasyPlayerHisoricalStatsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) Enum() *CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_value, data, "CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyMessagesResponse_EResult int32

const (
	CMsgDOTAFantasyMessagesResponse_SUCCESS             CMsgDOTAFantasyMessagesResponse_EResult = 0
	CMsgDOTAFantasyMessagesResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyMessagesResponse_EResult = 1
	CMsgDOTAFantasyMessagesResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyMessagesResponse_EResult = 2
)

var CMsgDOTAFantasyMessagesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}
var CMsgDOTAFantasyMessagesResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyMessagesResponse_EResult) Enum() *CMsgDOTAFantasyMessagesResponse_EResult {
	p := new(CMsgDOTAFantasyMessagesResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyMessagesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyMessagesResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyMessagesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyMessagesResponse_EResult_value, data, "CMsgDOTAFantasyMessagesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyMessagesResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyRemoveOwnerResponse_EResult int32

const (
	CMsgDOTAFantasyRemoveOwnerResponse_SUCCESS             CMsgDOTAFantasyRemoveOwnerResponse_EResult = 0
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyRemoveOwnerResponse_EResult = 1
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyRemoveOwnerResponse_EResult = 2
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_LEAGUE_LOCKED CMsgDOTAFantasyRemoveOwnerResponse_EResult = 3
)

var CMsgDOTAFantasyRemoveOwnerResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_LEAGUE_LOCKED",
}
var CMsgDOTAFantasyRemoveOwnerResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
	"ERROR_LEAGUE_LOCKED": 3,
}

func (x CMsgDOTAFantasyRemoveOwnerResponse_EResult) Enum() *CMsgDOTAFantasyRemoveOwnerResponse_EResult {
	p := new(CMsgDOTAFantasyRemoveOwnerResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyRemoveOwnerResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyRemoveOwnerResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyRemoveOwnerResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyRemoveOwnerResponse_EResult_value, data, "CMsgDOTAFantasyRemoveOwnerResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyRemoveOwnerResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyScheduledMatchesResponse_EResult int32

const (
	CMsgDOTAFantasyScheduledMatchesResponse_SUCCESS           CMsgDOTAFantasyScheduledMatchesResponse_EResult = 0
	CMsgDOTAFantasyScheduledMatchesResponse_ERROR_UNSPECIFIED CMsgDOTAFantasyScheduledMatchesResponse_EResult = 1
)

var CMsgDOTAFantasyScheduledMatchesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}
var CMsgDOTAFantasyScheduledMatchesResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAFantasyScheduledMatchesResponse_EResult) Enum() *CMsgDOTAFantasyScheduledMatchesResponse_EResult {
	p := new(CMsgDOTAFantasyScheduledMatchesResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyScheduledMatchesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyScheduledMatchesResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyScheduledMatchesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyScheduledMatchesResponse_EResult_value, data, "CMsgDOTAFantasyScheduledMatchesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyScheduledMatchesResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyLeaveLeagueResponse_EResult int32

const (
	CMsgDOTAFantasyLeaveLeagueResponse_SUCCESS                CMsgDOTAFantasyLeaveLeagueResponse_EResult = 0
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_UNSPECIFIED      CMsgDOTAFantasyLeaveLeagueResponse_EResult = 1
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_NOT_MEMBER       CMsgDOTAFantasyLeaveLeagueResponse_EResult = 2
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_LEAGUE_NOT_FOUND CMsgDOTAFantasyLeaveLeagueResponse_EResult = 3
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_DRAFT_ACTIVE     CMsgDOTAFantasyLeaveLeagueResponse_EResult = 4
)

var CMsgDOTAFantasyLeaveLeagueResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NOT_MEMBER",
	3: "ERROR_LEAGUE_NOT_FOUND",
	4: "ERROR_DRAFT_ACTIVE",
}
var CMsgDOTAFantasyLeaveLeagueResponse_EResult_value = map[string]int32{
	"SUCCESS":                0,
	"ERROR_UNSPECIFIED":      1,
	"ERROR_NOT_MEMBER":       2,
	"ERROR_LEAGUE_NOT_FOUND": 3,
	"ERROR_DRAFT_ACTIVE":     4,
}

func (x CMsgDOTAFantasyLeaveLeagueResponse_EResult) Enum() *CMsgDOTAFantasyLeaveLeagueResponse_EResult {
	p := new(CMsgDOTAFantasyLeaveLeagueResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyLeaveLeagueResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeaveLeagueResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyLeaveLeagueResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeaveLeagueResponse_EResult_value, data, "CMsgDOTAFantasyLeaveLeagueResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeaveLeagueResponse_EResult(value)
	return nil
}

type CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerScoreDetailsResponse_SUCCESS           CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = 0
	CMsgDOTAFantasyPlayerScoreDetailsResponse_ERROR_UNSPECIFIED CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = 1
	CMsgDOTAFantasyPlayerScoreDetailsResponse_ERROR_NOT_MEMBER  CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NOT_MEMBER",
}
var CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
	"ERROR_NOT_MEMBER":  2,
}

func (x CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) Enum() *CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_value, data, "CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult(value)
	return nil
}

type CMsgDOTAFriendRecruitsResponse_EResult int32

const (
	CMsgDOTAFriendRecruitsResponse_SUCCESS           CMsgDOTAFriendRecruitsResponse_EResult = 0
	CMsgDOTAFriendRecruitsResponse_ERROR_UNSPECIFIED CMsgDOTAFriendRecruitsResponse_EResult = 1
)

var CMsgDOTAFriendRecruitsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}
var CMsgDOTAFriendRecruitsResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAFriendRecruitsResponse_EResult) Enum() *CMsgDOTAFriendRecruitsResponse_EResult {
	p := new(CMsgDOTAFriendRecruitsResponse_EResult)
	*p = x
	return p
}
func (x CMsgDOTAFriendRecruitsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFriendRecruitsResponse_EResult_name, int32(x))
}
func (x *CMsgDOTAFriendRecruitsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFriendRecruitsResponse_EResult_value, data, "CMsgDOTAFriendRecruitsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFriendRecruitsResponse_EResult(value)
	return nil
}

type CMsgDOTARedeemEventPrizeResponse_ResultCode int32

const (
	CMsgDOTARedeemEventPrizeResponse_Success            CMsgDOTARedeemEventPrizeResponse_ResultCode = 0
	CMsgDOTARedeemEventPrizeResponse_ServerError        CMsgDOTARedeemEventPrizeResponse_ResultCode = 1
	CMsgDOTARedeemEventPrizeResponse_InsufficientPoints CMsgDOTARedeemEventPrizeResponse_ResultCode = 2
)

var CMsgDOTARedeemEventPrizeResponse_ResultCode_name = map[int32]string{
	0: "Success",
	1: "ServerError",
	2: "InsufficientPoints",
}
var CMsgDOTARedeemEventPrizeResponse_ResultCode_value = map[string]int32{
	"Success":            0,
	"ServerError":        1,
	"InsufficientPoints": 2,
}

func (x CMsgDOTARedeemEventPrizeResponse_ResultCode) Enum() *CMsgDOTARedeemEventPrizeResponse_ResultCode {
	p := new(CMsgDOTARedeemEventPrizeResponse_ResultCode)
	*p = x
	return p
}
func (x CMsgDOTARedeemEventPrizeResponse_ResultCode) String() string {
	return proto.EnumName(CMsgDOTARedeemEventPrizeResponse_ResultCode_name, int32(x))
}
func (x *CMsgDOTARedeemEventPrizeResponse_ResultCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTARedeemEventPrizeResponse_ResultCode_value, data, "CMsgDOTARedeemEventPrizeResponse_ResultCode")
	if err != nil {
		return err
	}
	*x = CMsgDOTARedeemEventPrizeResponse_ResultCode(value)
	return nil
}

type CMsgGCNotificationsResponse_EResult int32

const (
	CMsgGCNotificationsResponse_SUCCESS           CMsgGCNotificationsResponse_EResult = 0
	CMsgGCNotificationsResponse_ERROR_UNSPECIFIED CMsgGCNotificationsResponse_EResult = 1
)

var CMsgGCNotificationsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}
var CMsgGCNotificationsResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgGCNotificationsResponse_EResult) Enum() *CMsgGCNotificationsResponse_EResult {
	p := new(CMsgGCNotificationsResponse_EResult)
	*p = x
	return p
}
func (x CMsgGCNotificationsResponse_EResult) String() string {
	return proto.EnumName(CMsgGCNotificationsResponse_EResult_name, int32(x))
}
func (x *CMsgGCNotificationsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCNotificationsResponse_EResult_value, data, "CMsgGCNotificationsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgGCNotificationsResponse_EResult(value)
	return nil
}

type CMsgGCPlayerInfoSubmitResponse_EResult int32

const (
	CMsgGCPlayerInfoSubmitResponse_SUCCESS           CMsgGCPlayerInfoSubmitResponse_EResult = 0
	CMsgGCPlayerInfoSubmitResponse_ERROR_UNSPECIFIED CMsgGCPlayerInfoSubmitResponse_EResult = 1
	CMsgGCPlayerInfoSubmitResponse_ERROR_INFO_LOCKED CMsgGCPlayerInfoSubmitResponse_EResult = 2
)

var CMsgGCPlayerInfoSubmitResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_INFO_LOCKED",
}
var CMsgGCPlayerInfoSubmitResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
	"ERROR_INFO_LOCKED": 2,
}

func (x CMsgGCPlayerInfoSubmitResponse_EResult) Enum() *CMsgGCPlayerInfoSubmitResponse_EResult {
	p := new(CMsgGCPlayerInfoSubmitResponse_EResult)
	*p = x
	return p
}
func (x CMsgGCPlayerInfoSubmitResponse_EResult) String() string {
	return proto.EnumName(CMsgGCPlayerInfoSubmitResponse_EResult_name, int32(x))
}
func (x *CMsgGCPlayerInfoSubmitResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCPlayerInfoSubmitResponse_EResult_value, data, "CMsgGCPlayerInfoSubmitResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgGCPlayerInfoSubmitResponse_EResult(value)
	return nil
}

type CMsgStartFindingMatch struct {
	Key              *string                              `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Matchgroups      *uint32                              `protobuf:"varint,2,opt,name=matchgroups,def=4294967295" json:"matchgroups,omitempty"`
	ClientVersion    *uint32                              `protobuf:"varint,3,opt,name=client_version" json:"client_version,omitempty"`
	GameModes        *uint32                              `protobuf:"varint,4,opt,name=game_modes,def=4294967295" json:"game_modes,omitempty"`
	BotDifficulty    *DOTABotDifficulty `protobuf:"varint,5,opt,name=bot_difficulty,enum=DOTABotDifficulty,def=3" json:"bot_difficulty,omitempty"`
	MatchType        *MatchType         `protobuf:"varint,6,opt,name=match_type,enum=MatchType,def=0" json:"match_type,omitempty"`
	Matchlanguages   *uint32                              `protobuf:"varint,7,opt,name=matchlanguages,def=4294967295" json:"matchlanguages,omitempty"`
	MapPreference    *uint32                              `protobuf:"varint,9,opt,name=map_preference" json:"map_preference,omitempty"`
	TeamId           *uint32                              `protobuf:"varint,8,opt,name=team_id" json:"team_id,omitempty"`
	GameLanguageEnum *MatchLanguages    `protobuf:"varint,10,opt,name=game_language_enum,enum=MatchLanguages,def=0" json:"game_language_enum,omitempty"`
	GameLanguageName *string                              `protobuf:"bytes,11,opt,name=game_language_name" json:"game_language_name,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgStartFindingMatch) Reset()         { *m = CMsgStartFindingMatch{} }
func (m *CMsgStartFindingMatch) String() string { return proto.CompactTextString(m) }
func (*CMsgStartFindingMatch) ProtoMessage()    {}

const Default_CMsgStartFindingMatch_Matchgroups uint32 = 4294967295
const Default_CMsgStartFindingMatch_GameModes uint32 = 4294967295
const Default_CMsgStartFindingMatch_BotDifficulty DOTABotDifficulty = DOTABotDifficulty_BOT_DIFFICULTY_HARD
const Default_CMsgStartFindingMatch_MatchType MatchType = MatchType_MATCH_TYPE_CASUAL
const Default_CMsgStartFindingMatch_Matchlanguages uint32 = 4294967295
const Default_CMsgStartFindingMatch_GameLanguageEnum MatchLanguages = MatchLanguages_MATCH_LANGUAGE_INVALID

func (m *CMsgStartFindingMatch) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CMsgStartFindingMatch) GetMatchgroups() uint32 {
	if m != nil && m.Matchgroups != nil {
		return *m.Matchgroups
	}
	return Default_CMsgStartFindingMatch_Matchgroups
}

func (m *CMsgStartFindingMatch) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgStartFindingMatch) GetGameModes() uint32 {
	if m != nil && m.GameModes != nil {
		return *m.GameModes
	}
	return Default_CMsgStartFindingMatch_GameModes
}

func (m *CMsgStartFindingMatch) GetBotDifficulty() DOTABotDifficulty {
	if m != nil && m.BotDifficulty != nil {
		return *m.BotDifficulty
	}
	return Default_CMsgStartFindingMatch_BotDifficulty
}

func (m *CMsgStartFindingMatch) GetMatchType() MatchType {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return Default_CMsgStartFindingMatch_MatchType
}

func (m *CMsgStartFindingMatch) GetMatchlanguages() uint32 {
	if m != nil && m.Matchlanguages != nil {
		return *m.Matchlanguages
	}
	return Default_CMsgStartFindingMatch_Matchlanguages
}

func (m *CMsgStartFindingMatch) GetMapPreference() uint32 {
	if m != nil && m.MapPreference != nil {
		return *m.MapPreference
	}
	return 0
}

func (m *CMsgStartFindingMatch) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgStartFindingMatch) GetGameLanguageEnum() MatchLanguages {
	if m != nil && m.GameLanguageEnum != nil {
		return *m.GameLanguageEnum
	}
	return Default_CMsgStartFindingMatch_GameLanguageEnum
}

func (m *CMsgStartFindingMatch) GetGameLanguageName() string {
	if m != nil && m.GameLanguageName != nil {
		return *m.GameLanguageName
	}
	return ""
}

type CMsgStopFindingMatch struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgStopFindingMatch) Reset()         { *m = CMsgStopFindingMatch{} }
func (m *CMsgStopFindingMatch) String() string { return proto.CompactTextString(m) }
func (*CMsgStopFindingMatch) ProtoMessage()    {}

type CMsgReadyUp struct {
	State            *DOTALobbyReadyState `protobuf:"varint,1,opt,name=state,enum=DOTALobbyReadyState,def=0" json:"state,omitempty"`
	ReadyUpKey       *uint64                                     `protobuf:"fixed64,2,opt,name=ready_up_key" json:"ready_up_key,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgReadyUp) Reset()         { *m = CMsgReadyUp{} }
func (m *CMsgReadyUp) String() string { return proto.CompactTextString(m) }
func (*CMsgReadyUp) ProtoMessage()    {}

const Default_CMsgReadyUp_State DOTALobbyReadyState = DOTALobbyReadyState_DOTALobbyReadyState_UNDECLARED

func (m *CMsgReadyUp) GetState() DOTALobbyReadyState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgReadyUp_State
}

func (m *CMsgReadyUp) GetReadyUpKey() uint64 {
	if m != nil && m.ReadyUpKey != nil {
		return *m.ReadyUpKey
	}
	return 0
}

type CMsgReadyUpStatus struct {
	LobbyId          *uint64  `protobuf:"fixed64,1,opt,name=lobby_id" json:"lobby_id,omitempty"`
	AcceptedIds      []uint32 `protobuf:"varint,2,rep,name=accepted_ids" json:"accepted_ids,omitempty"`
	DeclinedIds      []uint32 `protobuf:"varint,3,rep,name=declined_ids" json:"declined_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgReadyUpStatus) Reset()         { *m = CMsgReadyUpStatus{} }
func (m *CMsgReadyUpStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgReadyUpStatus) ProtoMessage()    {}

func (m *CMsgReadyUpStatus) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgReadyUpStatus) GetAcceptedIds() []uint32 {
	if m != nil {
		return m.AcceptedIds
	}
	return nil
}

func (m *CMsgReadyUpStatus) GetDeclinedIds() []uint32 {
	if m != nil {
		return m.DeclinedIds
	}
	return nil
}

type CSourceTVGame struct {
	SourceTvPublicAddr  *uint32                                     `protobuf:"varint,1,opt,name=source_tv_public_addr" json:"source_tv_public_addr,omitempty"`
	SourceTvPrivateAddr *uint32                                     `protobuf:"varint,2,opt,name=source_tv_private_addr" json:"source_tv_private_addr,omitempty"`
	SourceTvPort        *uint32                                     `protobuf:"varint,3,opt,name=source_tv_port" json:"source_tv_port,omitempty"`
	GoodPlayers         []*CSourceTVGame_Player                     `protobuf:"bytes,14,rep,name=good_players" json:"good_players,omitempty"`
	BadPlayers          []*CSourceTVGame_Player                     `protobuf:"bytes,15,rep,name=bad_players" json:"bad_players,omitempty"`
	OtherPlayers        []*CSourceTVGame_Player                     `protobuf:"bytes,16,rep,name=other_players" json:"other_players,omitempty"`
	GameName            *string                                     `protobuf:"bytes,7,opt,name=game_name" json:"game_name,omitempty"`
	TeamDetails         []*CLobbyTeamDetails `protobuf:"bytes,9,rep,name=team_details" json:"team_details,omitempty"`
	NumSpectators       *uint32                                     `protobuf:"varint,10,opt,name=num_spectators" json:"num_spectators,omitempty"`
	TournamentId        *uint32                                     `protobuf:"varint,11,opt,name=tournament_id" json:"tournament_id,omitempty"`
	TournamentGameId    *uint32                                     `protobuf:"varint,12,opt,name=tournament_game_id" json:"tournament_game_id,omitempty"`
	TowerState          *uint32                                     `protobuf:"varint,13,opt,name=tower_state" json:"tower_state,omitempty"`
	TvBroadcastTime     *float32                                    `protobuf:"fixed32,17,opt,name=tv_broadcast_time" json:"tv_broadcast_time,omitempty"`
	GameTime            *float32                                    `protobuf:"fixed32,18,opt,name=game_time" json:"game_time,omitempty"`
	ServerSteamid       *uint64                                     `protobuf:"fixed64,19,opt,name=server_steamid" json:"server_steamid,omitempty"`
	Leagueid            *uint32                                     `protobuf:"varint,20,opt,name=leagueid" json:"leagueid,omitempty"`
	GameMode            *DOTA_GameMode       `protobuf:"varint,21,opt,name=game_mode,enum=DOTA_GameMode,def=0" json:"game_mode,omitempty"`
	LobbyType           *uint32                                     `protobuf:"varint,22,opt,name=lobby_type" json:"lobby_type,omitempty"`
	CustomGameId        *uint64                                     `protobuf:"varint,24,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized    []byte                                      `json:"-"`
}

func (m *CSourceTVGame) Reset()         { *m = CSourceTVGame{} }
func (m *CSourceTVGame) String() string { return proto.CompactTextString(m) }
func (*CSourceTVGame) ProtoMessage()    {}

const Default_CSourceTVGame_GameMode DOTA_GameMode = DOTA_GameMode_DOTA_GAMEMODE_NONE

func (m *CSourceTVGame) GetSourceTvPublicAddr() uint32 {
	if m != nil && m.SourceTvPublicAddr != nil {
		return *m.SourceTvPublicAddr
	}
	return 0
}

func (m *CSourceTVGame) GetSourceTvPrivateAddr() uint32 {
	if m != nil && m.SourceTvPrivateAddr != nil {
		return *m.SourceTvPrivateAddr
	}
	return 0
}

func (m *CSourceTVGame) GetSourceTvPort() uint32 {
	if m != nil && m.SourceTvPort != nil {
		return *m.SourceTvPort
	}
	return 0
}

func (m *CSourceTVGame) GetGoodPlayers() []*CSourceTVGame_Player {
	if m != nil {
		return m.GoodPlayers
	}
	return nil
}

func (m *CSourceTVGame) GetBadPlayers() []*CSourceTVGame_Player {
	if m != nil {
		return m.BadPlayers
	}
	return nil
}

func (m *CSourceTVGame) GetOtherPlayers() []*CSourceTVGame_Player {
	if m != nil {
		return m.OtherPlayers
	}
	return nil
}

func (m *CSourceTVGame) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CSourceTVGame) GetTeamDetails() []*CLobbyTeamDetails {
	if m != nil {
		return m.TeamDetails
	}
	return nil
}

func (m *CSourceTVGame) GetNumSpectators() uint32 {
	if m != nil && m.NumSpectators != nil {
		return *m.NumSpectators
	}
	return 0
}

func (m *CSourceTVGame) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CSourceTVGame) GetTournamentGameId() uint32 {
	if m != nil && m.TournamentGameId != nil {
		return *m.TournamentGameId
	}
	return 0
}

func (m *CSourceTVGame) GetTowerState() uint32 {
	if m != nil && m.TowerState != nil {
		return *m.TowerState
	}
	return 0
}

func (m *CSourceTVGame) GetTvBroadcastTime() float32 {
	if m != nil && m.TvBroadcastTime != nil {
		return *m.TvBroadcastTime
	}
	return 0
}

func (m *CSourceTVGame) GetGameTime() float32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CSourceTVGame) GetServerSteamid() uint64 {
	if m != nil && m.ServerSteamid != nil {
		return *m.ServerSteamid
	}
	return 0
}

func (m *CSourceTVGame) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CSourceTVGame) GetGameMode() DOTA_GameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CSourceTVGame_GameMode
}

func (m *CSourceTVGame) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CSourceTVGame) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CSourceTVGame_Player struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	HeroId           *uint32 `protobuf:"varint,3,opt,name=hero_id" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSourceTVGame_Player) Reset()         { *m = CSourceTVGame_Player{} }
func (m *CSourceTVGame_Player) String() string { return proto.CompactTextString(m) }
func (*CSourceTVGame_Player) ProtoMessage()    {}

func (m *CSourceTVGame_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CSourceTVGame_Player) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSourceTVGame_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgSourceTVGamesResponse struct {
	Games            []*CSourceTVGame `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	NumTotalGames    *uint32          `protobuf:"varint,2,opt,name=num_total_games" json:"num_total_games,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CMsgSourceTVGamesResponse) Reset()         { *m = CMsgSourceTVGamesResponse{} }
func (m *CMsgSourceTVGamesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgSourceTVGamesResponse) ProtoMessage()    {}

func (m *CMsgSourceTVGamesResponse) GetGames() []*CSourceTVGame {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *CMsgSourceTVGamesResponse) GetNumTotalGames() uint32 {
	if m != nil && m.NumTotalGames != nil {
		return *m.NumTotalGames
	}
	return 0
}

type CMsgFindSourceTVGames struct {
	SearchKey        *string `protobuf:"bytes,1,opt,name=search_key" json:"search_key,omitempty"`
	Start            *uint32 `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	NumGames         *uint32 `protobuf:"varint,3,opt,name=num_games" json:"num_games,omitempty"`
	Leagueid         *uint32 `protobuf:"varint,4,opt,name=leagueid" json:"leagueid,omitempty"`
	Heroid           *uint32 `protobuf:"varint,5,opt,name=heroid" json:"heroid,omitempty"`
	TeamGame         *bool   `protobuf:"varint,6,opt,name=team_game" json:"team_game,omitempty"`
	CustomGameId     *uint64 `protobuf:"varint,10,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgFindSourceTVGames) Reset()         { *m = CMsgFindSourceTVGames{} }
func (m *CMsgFindSourceTVGames) String() string { return proto.CompactTextString(m) }
func (*CMsgFindSourceTVGames) ProtoMessage()    {}

func (m *CMsgFindSourceTVGames) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgFindSourceTVGames) GetStart() uint32 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *CMsgFindSourceTVGames) GetNumGames() uint32 {
	if m != nil && m.NumGames != nil {
		return *m.NumGames
	}
	return 0
}

func (m *CMsgFindSourceTVGames) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgFindSourceTVGames) GetHeroid() uint32 {
	if m != nil && m.Heroid != nil {
		return *m.Heroid
	}
	return 0
}

func (m *CMsgFindSourceTVGames) GetTeamGame() bool {
	if m != nil && m.TeamGame != nil {
		return *m.TeamGame
	}
	return false
}

func (m *CMsgFindSourceTVGames) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgSpectateFriendGame struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSpectateFriendGame) Reset()         { *m = CMsgSpectateFriendGame{} }
func (m *CMsgSpectateFriendGame) String() string { return proto.CompactTextString(m) }
func (*CMsgSpectateFriendGame) ProtoMessage()    {}

func (m *CMsgSpectateFriendGame) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgSpectateFriendGameResponse struct {
	ServerSteamid    *uint64 `protobuf:"fixed64,4,opt,name=server_steamid" json:"server_steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSpectateFriendGameResponse) Reset()         { *m = CMsgSpectateFriendGameResponse{} }
func (m *CMsgSpectateFriendGameResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgSpectateFriendGameResponse) ProtoMessage()    {}

func (m *CMsgSpectateFriendGameResponse) GetServerSteamid() uint64 {
	if m != nil && m.ServerSteamid != nil {
		return *m.ServerSteamid
	}
	return 0
}

type CMsgAbandonCurrentGame struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgAbandonCurrentGame) Reset()         { *m = CMsgAbandonCurrentGame{} }
func (m *CMsgAbandonCurrentGame) String() string { return proto.CompactTextString(m) }
func (*CMsgAbandonCurrentGame) ProtoMessage()    {}

type CMsgClientSuspended struct {
	TimeEnd          *uint32 `protobuf:"varint,1,opt,name=time_end" json:"time_end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientSuspended) Reset()         { *m = CMsgClientSuspended{} }
func (m *CMsgClientSuspended) String() string { return proto.CompactTextString(m) }
func (*CMsgClientSuspended) ProtoMessage()    {}

func (m *CMsgClientSuspended) GetTimeEnd() uint32 {
	if m != nil && m.TimeEnd != nil {
		return *m.TimeEnd
	}
	return 0
}

type CMsgPracticeLobbySetDetails struct {
	LobbyId             *uint64                                     `protobuf:"varint,1,opt,name=lobby_id" json:"lobby_id,omitempty"`
	GameName            *string                                     `protobuf:"bytes,2,opt,name=game_name" json:"game_name,omitempty"`
	TeamDetails         []*CLobbyTeamDetails `protobuf:"bytes,3,rep,name=team_details" json:"team_details,omitempty"`
	ServerRegion        *uint32                                     `protobuf:"varint,4,opt,name=server_region" json:"server_region,omitempty"`
	GameMode            *uint32                                     `protobuf:"varint,5,opt,name=game_mode" json:"game_mode,omitempty"`
	CmPick              *DOTA_CM_PICK        `protobuf:"varint,6,opt,name=cm_pick,enum=DOTA_CM_PICK,def=0" json:"cm_pick,omitempty"`
	BotDifficulty       *DOTABotDifficulty        `protobuf:"varint,9,opt,name=bot_difficulty,enum=DOTABotDifficulty,def=2" json:"bot_difficulty,omitempty"`
	AllowCheats         *bool                                       `protobuf:"varint,10,opt,name=allow_cheats" json:"allow_cheats,omitempty"`
	FillWithBots        *bool                                       `protobuf:"varint,11,opt,name=fill_with_bots" json:"fill_with_bots,omitempty"`
	IntroMode           *bool                                       `protobuf:"varint,12,opt,name=intro_mode" json:"intro_mode,omitempty"`
	AllowSpectating     *bool                                       `protobuf:"varint,13,opt,name=allow_spectating" json:"allow_spectating,omitempty"`
	GameVersion         *DOTAGameVersion     `protobuf:"varint,14,opt,name=game_version,enum=DOTAGameVersion,def=0" json:"game_version,omitempty"`
	PassKey             *string                                     `protobuf:"bytes,15,opt,name=pass_key" json:"pass_key,omitempty"`
	Leagueid            *uint32                                     `protobuf:"varint,16,opt,name=leagueid" json:"leagueid,omitempty"`
	PenaltyLevelRadiant *uint32                                     `protobuf:"varint,17,opt,name=penalty_level_radiant" json:"penalty_level_radiant,omitempty"`
	PenaltyLevelDire    *uint32                                     `protobuf:"varint,18,opt,name=penalty_level_dire" json:"penalty_level_dire,omitempty"`
	LoadGameId          *uint32                                     `protobuf:"varint,19,opt,name=load_game_id" json:"load_game_id,omitempty"`
	SeriesType          *uint32                                     `protobuf:"varint,20,opt,name=series_type" json:"series_type,omitempty"`
	RadiantSeriesWins   *uint32                                     `protobuf:"varint,21,opt,name=radiant_series_wins" json:"radiant_series_wins,omitempty"`
	DireSeriesWins      *uint32                                     `protobuf:"varint,22,opt,name=dire_series_wins" json:"dire_series_wins,omitempty"`
	Allchat             *bool                                       `protobuf:"varint,23,opt,name=allchat,def=0" json:"allchat,omitempty"`
	DotaTvDelay         *LobbyDotaTVDelay    `protobuf:"varint,24,opt,name=dota_tv_delay,enum=LobbyDotaTVDelay,def=1" json:"dota_tv_delay,omitempty"`
	Lan                 *bool                                       `protobuf:"varint,25,opt,name=lan" json:"lan,omitempty"`
	CustomGameMode      *string                                     `protobuf:"bytes,26,opt,name=custom_game_mode" json:"custom_game_mode,omitempty"`
	CustomMapName       *string                                     `protobuf:"bytes,27,opt,name=custom_map_name" json:"custom_map_name,omitempty"`
	CustomDifficulty    *uint32                                     `protobuf:"varint,28,opt,name=custom_difficulty" json:"custom_difficulty,omitempty"`
	CustomGameId        *uint64                                     `protobuf:"varint,29,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized    []byte                                      `json:"-"`
}

func (m *CMsgPracticeLobbySetDetails) Reset()         { *m = CMsgPracticeLobbySetDetails{} }
func (m *CMsgPracticeLobbySetDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbySetDetails) ProtoMessage()    {}

const Default_CMsgPracticeLobbySetDetails_CmPick DOTA_CM_PICK = DOTA_CM_PICK_DOTA_CM_RANDOM
const Default_CMsgPracticeLobbySetDetails_BotDifficulty DOTABotDifficulty = DOTABotDifficulty_BOT_DIFFICULTY_MEDIUM
const Default_CMsgPracticeLobbySetDetails_GameVersion DOTAGameVersion = DOTAGameVersion_GAME_VERSION_CURRENT
const Default_CMsgPracticeLobbySetDetails_Allchat bool = false
const Default_CMsgPracticeLobbySetDetails_DotaTvDelay LobbyDotaTVDelay = LobbyDotaTVDelay_LobbyDotaTV_120

func (m *CMsgPracticeLobbySetDetails) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CMsgPracticeLobbySetDetails) GetTeamDetails() []*CLobbyTeamDetails {
	if m != nil {
		return m.TeamDetails
	}
	return nil
}

func (m *CMsgPracticeLobbySetDetails) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetCmPick() DOTA_CM_PICK {
	if m != nil && m.CmPick != nil {
		return *m.CmPick
	}
	return Default_CMsgPracticeLobbySetDetails_CmPick
}

func (m *CMsgPracticeLobbySetDetails) GetBotDifficulty() DOTABotDifficulty {
	if m != nil && m.BotDifficulty != nil {
		return *m.BotDifficulty
	}
	return Default_CMsgPracticeLobbySetDetails_BotDifficulty
}

func (m *CMsgPracticeLobbySetDetails) GetAllowCheats() bool {
	if m != nil && m.AllowCheats != nil {
		return *m.AllowCheats
	}
	return false
}

func (m *CMsgPracticeLobbySetDetails) GetFillWithBots() bool {
	if m != nil && m.FillWithBots != nil {
		return *m.FillWithBots
	}
	return false
}

func (m *CMsgPracticeLobbySetDetails) GetIntroMode() bool {
	if m != nil && m.IntroMode != nil {
		return *m.IntroMode
	}
	return false
}

func (m *CMsgPracticeLobbySetDetails) GetAllowSpectating() bool {
	if m != nil && m.AllowSpectating != nil {
		return *m.AllowSpectating
	}
	return false
}

func (m *CMsgPracticeLobbySetDetails) GetGameVersion() DOTAGameVersion {
	if m != nil && m.GameVersion != nil {
		return *m.GameVersion
	}
	return Default_CMsgPracticeLobbySetDetails_GameVersion
}

func (m *CMsgPracticeLobbySetDetails) GetPassKey() string {
	if m != nil && m.PassKey != nil {
		return *m.PassKey
	}
	return ""
}

func (m *CMsgPracticeLobbySetDetails) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetPenaltyLevelRadiant() uint32 {
	if m != nil && m.PenaltyLevelRadiant != nil {
		return *m.PenaltyLevelRadiant
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetPenaltyLevelDire() uint32 {
	if m != nil && m.PenaltyLevelDire != nil {
		return *m.PenaltyLevelDire
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetLoadGameId() uint32 {
	if m != nil && m.LoadGameId != nil {
		return *m.LoadGameId
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetRadiantSeriesWins() uint32 {
	if m != nil && m.RadiantSeriesWins != nil {
		return *m.RadiantSeriesWins
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetDireSeriesWins() uint32 {
	if m != nil && m.DireSeriesWins != nil {
		return *m.DireSeriesWins
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetAllchat() bool {
	if m != nil && m.Allchat != nil {
		return *m.Allchat
	}
	return Default_CMsgPracticeLobbySetDetails_Allchat
}

func (m *CMsgPracticeLobbySetDetails) GetDotaTvDelay() LobbyDotaTVDelay {
	if m != nil && m.DotaTvDelay != nil {
		return *m.DotaTvDelay
	}
	return Default_CMsgPracticeLobbySetDetails_DotaTvDelay
}

func (m *CMsgPracticeLobbySetDetails) GetLan() bool {
	if m != nil && m.Lan != nil {
		return *m.Lan
	}
	return false
}

func (m *CMsgPracticeLobbySetDetails) GetCustomGameMode() string {
	if m != nil && m.CustomGameMode != nil {
		return *m.CustomGameMode
	}
	return ""
}

func (m *CMsgPracticeLobbySetDetails) GetCustomMapName() string {
	if m != nil && m.CustomMapName != nil {
		return *m.CustomMapName
	}
	return ""
}

func (m *CMsgPracticeLobbySetDetails) GetCustomDifficulty() uint32 {
	if m != nil && m.CustomDifficulty != nil {
		return *m.CustomDifficulty
	}
	return 0
}

func (m *CMsgPracticeLobbySetDetails) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgPracticeLobbyCreate struct {
	SearchKey        *string                           `protobuf:"bytes,1,opt,name=search_key" json:"search_key,omitempty"`
	TournamentGame   *bool                             `protobuf:"varint,2,opt,name=tournament_game" json:"tournament_game,omitempty"`
	TournamentGameId *uint32                           `protobuf:"varint,3,opt,name=tournament_game_id" json:"tournament_game_id,omitempty"`
	TournamentId     *uint32                           `protobuf:"varint,4,opt,name=tournament_id" json:"tournament_id,omitempty"`
	PassKey          *string                           `protobuf:"bytes,5,opt,name=pass_key" json:"pass_key,omitempty"`
	ClientVersion    *uint32                           `protobuf:"varint,6,opt,name=client_version" json:"client_version,omitempty"`
	LobbyDetails     *CMsgPracticeLobbySetDetails      `protobuf:"bytes,7,opt,name=lobby_details" json:"lobby_details,omitempty"`
	SaveGame         *CMsgPracticeLobbyCreate_SaveGame `protobuf:"bytes,8,opt,name=save_game" json:"save_game,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CMsgPracticeLobbyCreate) Reset()         { *m = CMsgPracticeLobbyCreate{} }
func (m *CMsgPracticeLobbyCreate) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyCreate) ProtoMessage()    {}

func (m *CMsgPracticeLobbyCreate) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgPracticeLobbyCreate) GetTournamentGame() bool {
	if m != nil && m.TournamentGame != nil {
		return *m.TournamentGame
	}
	return false
}

func (m *CMsgPracticeLobbyCreate) GetTournamentGameId() uint32 {
	if m != nil && m.TournamentGameId != nil {
		return *m.TournamentGameId
	}
	return 0
}

func (m *CMsgPracticeLobbyCreate) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgPracticeLobbyCreate) GetPassKey() string {
	if m != nil && m.PassKey != nil {
		return *m.PassKey
	}
	return ""
}

func (m *CMsgPracticeLobbyCreate) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgPracticeLobbyCreate) GetLobbyDetails() *CMsgPracticeLobbySetDetails {
	if m != nil {
		return m.LobbyDetails
	}
	return nil
}

func (m *CMsgPracticeLobbyCreate) GetSaveGame() *CMsgPracticeLobbyCreate_SaveGame {
	if m != nil {
		return m.SaveGame
	}
	return nil
}

type CMsgPracticeLobbyCreate_SaveGame struct {
	Data             []byte  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Version          *int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,3,opt,name=steam_id" json:"steam_id,omitempty"`
	Signature        *uint64 `protobuf:"fixed64,4,opt,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyCreate_SaveGame) Reset()         { *m = CMsgPracticeLobbyCreate_SaveGame{} }
func (m *CMsgPracticeLobbyCreate_SaveGame) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyCreate_SaveGame) ProtoMessage()    {}

func (m *CMsgPracticeLobbyCreate_SaveGame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CMsgPracticeLobbyCreate_SaveGame) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgPracticeLobbyCreate_SaveGame) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgPracticeLobbyCreate_SaveGame) GetSignature() uint64 {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return 0
}

type CMsgPracticeLobbySetTeamSlot struct {
	Team             *DOTA_GC_TEAM `protobuf:"varint,1,opt,name=team,enum=DOTA_GC_TEAM,def=0" json:"team,omitempty"`
	Slot             *uint32                              `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	BotDifficulty    *DOTABotDifficulty `protobuf:"varint,3,opt,name=bot_difficulty,enum=DOTABotDifficulty,def=5" json:"bot_difficulty,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgPracticeLobbySetTeamSlot) Reset()         { *m = CMsgPracticeLobbySetTeamSlot{} }
func (m *CMsgPracticeLobbySetTeamSlot) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbySetTeamSlot) ProtoMessage()    {}

const Default_CMsgPracticeLobbySetTeamSlot_Team DOTA_GC_TEAM = DOTA_GC_TEAM_DOTA_GC_TEAM_GOOD_GUYS
const Default_CMsgPracticeLobbySetTeamSlot_BotDifficulty DOTABotDifficulty = DOTABotDifficulty_BOT_DIFFICULTY_INVALID

func (m *CMsgPracticeLobbySetTeamSlot) GetTeam() DOTA_GC_TEAM {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return Default_CMsgPracticeLobbySetTeamSlot_Team
}

func (m *CMsgPracticeLobbySetTeamSlot) GetSlot() uint32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CMsgPracticeLobbySetTeamSlot) GetBotDifficulty() DOTABotDifficulty {
	if m != nil && m.BotDifficulty != nil {
		return *m.BotDifficulty
	}
	return Default_CMsgPracticeLobbySetTeamSlot_BotDifficulty
}

type CMsgPracticeLobbySetCoach struct {
	Team             *DOTA_GC_TEAM `protobuf:"varint,1,opt,name=team,enum=DOTA_GC_TEAM,def=0" json:"team,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgPracticeLobbySetCoach) Reset()         { *m = CMsgPracticeLobbySetCoach{} }
func (m *CMsgPracticeLobbySetCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbySetCoach) ProtoMessage()    {}

const Default_CMsgPracticeLobbySetCoach_Team DOTA_GC_TEAM = DOTA_GC_TEAM_DOTA_GC_TEAM_GOOD_GUYS

func (m *CMsgPracticeLobbySetCoach) GetTeam() DOTA_GC_TEAM {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return Default_CMsgPracticeLobbySetCoach_Team
}

type CMsgPracticeLobbyJoinBroadcastChannel struct {
	Channel              *uint32 `protobuf:"varint,1,opt,name=channel" json:"channel,omitempty"`
	PreferredDescription *string `protobuf:"bytes,2,opt,name=preferred_description" json:"preferred_description,omitempty"`
	PreferredCountryCode *string `protobuf:"bytes,3,opt,name=preferred_country_code" json:"preferred_country_code,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyJoinBroadcastChannel) Reset()         { *m = CMsgPracticeLobbyJoinBroadcastChannel{} }
func (m *CMsgPracticeLobbyJoinBroadcastChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyJoinBroadcastChannel) ProtoMessage()    {}

func (m *CMsgPracticeLobbyJoinBroadcastChannel) GetChannel() uint32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CMsgPracticeLobbyJoinBroadcastChannel) GetPreferredDescription() string {
	if m != nil && m.PreferredDescription != nil {
		return *m.PreferredDescription
	}
	return ""
}

func (m *CMsgPracticeLobbyJoinBroadcastChannel) GetPreferredCountryCode() string {
	if m != nil && m.PreferredCountryCode != nil {
		return *m.PreferredCountryCode
	}
	return ""
}

type CMsgPracticeLobbyKick struct {
	AccountId        *uint32 `protobuf:"varint,3,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyKick) Reset()         { *m = CMsgPracticeLobbyKick{} }
func (m *CMsgPracticeLobbyKick) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyKick) ProtoMessage()    {}

func (m *CMsgPracticeLobbyKick) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgPracticeLobbyLeave struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgPracticeLobbyLeave) Reset()         { *m = CMsgPracticeLobbyLeave{} }
func (m *CMsgPracticeLobbyLeave) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyLeave) ProtoMessage()    {}

type CMsgPracticeLobbyLaunch struct {
	ClientVersion    *uint32 `protobuf:"varint,5,opt,name=client_version" json:"client_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyLaunch) Reset()         { *m = CMsgPracticeLobbyLaunch{} }
func (m *CMsgPracticeLobbyLaunch) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyLaunch) ProtoMessage()    {}

func (m *CMsgPracticeLobbyLaunch) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

type CMsgApplyTeamToPracticeLobby struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgApplyTeamToPracticeLobby) Reset()         { *m = CMsgApplyTeamToPracticeLobby{} }
func (m *CMsgApplyTeamToPracticeLobby) String() string { return proto.CompactTextString(m) }
func (*CMsgApplyTeamToPracticeLobby) ProtoMessage()    {}

func (m *CMsgApplyTeamToPracticeLobby) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgPracticeLobbyList struct {
	TournamentGames  *bool   `protobuf:"varint,1,opt,name=tournament_games" json:"tournament_games,omitempty"`
	PassKey          *string `protobuf:"bytes,2,opt,name=pass_key" json:"pass_key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyList) Reset()         { *m = CMsgPracticeLobbyList{} }
func (m *CMsgPracticeLobbyList) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyList) ProtoMessage()    {}

func (m *CMsgPracticeLobbyList) GetTournamentGames() bool {
	if m != nil && m.TournamentGames != nil {
		return *m.TournamentGames
	}
	return false
}

func (m *CMsgPracticeLobbyList) GetPassKey() string {
	if m != nil && m.PassKey != nil {
		return *m.PassKey
	}
	return ""
}

type CMsgPracticeLobbyListResponseEntry struct {
	Id               *uint64                                            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TournamentId     *uint32                                            `protobuf:"varint,3,opt,name=tournament_id" json:"tournament_id,omitempty"`
	TournamentGameId *uint32                                            `protobuf:"varint,4,opt,name=tournament_game_id" json:"tournament_game_id,omitempty"`
	Members          []*CMsgPracticeLobbyListResponseEntry_CLobbyMember `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	RequiresPassKey  *bool                                              `protobuf:"varint,6,opt,name=requires_pass_key" json:"requires_pass_key,omitempty"`
	LeaderAccountId  *uint32                                            `protobuf:"varint,7,opt,name=leader_account_id" json:"leader_account_id,omitempty"`
	GuildId          *uint32                                            `protobuf:"varint,8,opt,name=guild_id" json:"guild_id,omitempty"`
	GuildLogo        *uint64                                            `protobuf:"varint,9,opt,name=guild_logo" json:"guild_logo,omitempty"`
	Name             *string                                            `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	CustomGameMode   *string                                            `protobuf:"bytes,11,opt,name=custom_game_mode" json:"custom_game_mode,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CMsgPracticeLobbyListResponseEntry) Reset()         { *m = CMsgPracticeLobbyListResponseEntry{} }
func (m *CMsgPracticeLobbyListResponseEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyListResponseEntry) ProtoMessage()    {}

func (m *CMsgPracticeLobbyListResponseEntry) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry) GetTournamentGameId() uint32 {
	if m != nil && m.TournamentGameId != nil {
		return *m.TournamentGameId
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry) GetMembers() []*CMsgPracticeLobbyListResponseEntry_CLobbyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgPracticeLobbyListResponseEntry) GetRequiresPassKey() bool {
	if m != nil && m.RequiresPassKey != nil {
		return *m.RequiresPassKey
	}
	return false
}

func (m *CMsgPracticeLobbyListResponseEntry) GetLeaderAccountId() uint32 {
	if m != nil && m.LeaderAccountId != nil {
		return *m.LeaderAccountId
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry) GetGuildLogo() uint64 {
	if m != nil && m.GuildLogo != nil {
		return *m.GuildLogo
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgPracticeLobbyListResponseEntry) GetCustomGameMode() string {
	if m != nil && m.CustomGameMode != nil {
		return *m.CustomGameMode
	}
	return ""
}

type CMsgPracticeLobbyListResponseEntry_CLobbyMember struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,opt,name=player_name" json:"player_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyListResponseEntry_CLobbyMember) Reset() {
	*m = CMsgPracticeLobbyListResponseEntry_CLobbyMember{}
}
func (m *CMsgPracticeLobbyListResponseEntry_CLobbyMember) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgPracticeLobbyListResponseEntry_CLobbyMember) ProtoMessage() {}

func (m *CMsgPracticeLobbyListResponseEntry_CLobbyMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgPracticeLobbyListResponseEntry_CLobbyMember) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

type CMsgPracticeLobbyListResponse struct {
	TournamentGames  *bool                                 `protobuf:"varint,1,opt,name=tournament_games" json:"tournament_games,omitempty"`
	Lobbies          []*CMsgPracticeLobbyListResponseEntry `protobuf:"bytes,2,rep,name=lobbies" json:"lobbies,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgPracticeLobbyListResponse) Reset()         { *m = CMsgPracticeLobbyListResponse{} }
func (m *CMsgPracticeLobbyListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyListResponse) ProtoMessage()    {}

func (m *CMsgPracticeLobbyListResponse) GetTournamentGames() bool {
	if m != nil && m.TournamentGames != nil {
		return *m.TournamentGames
	}
	return false
}

func (m *CMsgPracticeLobbyListResponse) GetLobbies() []*CMsgPracticeLobbyListResponseEntry {
	if m != nil {
		return m.Lobbies
	}
	return nil
}

type CMsgPracticeLobbyJoin struct {
	LobbyId          *uint64 `protobuf:"varint,1,opt,name=lobby_id" json:"lobby_id,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,2,opt,name=client_version" json:"client_version,omitempty"`
	PassKey          *string `protobuf:"bytes,3,opt,name=pass_key" json:"pass_key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPracticeLobbyJoin) Reset()         { *m = CMsgPracticeLobbyJoin{} }
func (m *CMsgPracticeLobbyJoin) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyJoin) ProtoMessage()    {}

func (m *CMsgPracticeLobbyJoin) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgPracticeLobbyJoin) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgPracticeLobbyJoin) GetPassKey() string {
	if m != nil && m.PassKey != nil {
		return *m.PassKey
	}
	return ""
}

type CMsgPracticeLobbyJoinResponse struct {
	Result           *DOTAJoinLobbyResult `protobuf:"varint,1,opt,name=result,enum=DOTAJoinLobbyResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgPracticeLobbyJoinResponse) Reset()         { *m = CMsgPracticeLobbyJoinResponse{} }
func (m *CMsgPracticeLobbyJoinResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgPracticeLobbyJoinResponse) ProtoMessage()    {}

const Default_CMsgPracticeLobbyJoinResponse_Result DOTAJoinLobbyResult = DOTAJoinLobbyResult_DOTA_JOIN_RESULT_SUCCESS

func (m *CMsgPracticeLobbyJoinResponse) GetResult() DOTAJoinLobbyResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgPracticeLobbyJoinResponse_Result
}

type CMsgFriendPracticeLobbyListRequest struct {
	Friends          []uint32 `protobuf:"varint,1,rep,name=friends" json:"friends,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgFriendPracticeLobbyListRequest) Reset()         { *m = CMsgFriendPracticeLobbyListRequest{} }
func (m *CMsgFriendPracticeLobbyListRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgFriendPracticeLobbyListRequest) ProtoMessage()    {}

func (m *CMsgFriendPracticeLobbyListRequest) GetFriends() []uint32 {
	if m != nil {
		return m.Friends
	}
	return nil
}

type CMsgFriendPracticeLobbyListResponse struct {
	Lobbies          []*CMsgPracticeLobbyListResponseEntry `protobuf:"bytes,1,rep,name=lobbies" json:"lobbies,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgFriendPracticeLobbyListResponse) Reset()         { *m = CMsgFriendPracticeLobbyListResponse{} }
func (m *CMsgFriendPracticeLobbyListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgFriendPracticeLobbyListResponse) ProtoMessage()    {}

func (m *CMsgFriendPracticeLobbyListResponse) GetLobbies() []*CMsgPracticeLobbyListResponseEntry {
	if m != nil {
		return m.Lobbies
	}
	return nil
}

type CMsgGuildmatePracticeLobbyListRequest struct {
	Guilds           []uint32 `protobuf:"varint,1,rep,name=guilds" json:"guilds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGuildmatePracticeLobbyListRequest) Reset()         { *m = CMsgGuildmatePracticeLobbyListRequest{} }
func (m *CMsgGuildmatePracticeLobbyListRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGuildmatePracticeLobbyListRequest) ProtoMessage()    {}

func (m *CMsgGuildmatePracticeLobbyListRequest) GetGuilds() []uint32 {
	if m != nil {
		return m.Guilds
	}
	return nil
}

type CMsgGuildmatePracticeLobbyListResponse struct {
	Lobbies          []*CMsgPracticeLobbyListResponseEntry `protobuf:"bytes,1,rep,name=lobbies" json:"lobbies,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgGuildmatePracticeLobbyListResponse) Reset() {
	*m = CMsgGuildmatePracticeLobbyListResponse{}
}
func (m *CMsgGuildmatePracticeLobbyListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGuildmatePracticeLobbyListResponse) ProtoMessage()    {}

func (m *CMsgGuildmatePracticeLobbyListResponse) GetLobbies() []*CMsgPracticeLobbyListResponseEntry {
	if m != nil {
		return m.Lobbies
	}
	return nil
}

type CMsgJoinableCustomGameModesRequest struct {
	ServerRegion     *uint32 `protobuf:"varint,1,opt,name=server_region" json:"server_region,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgJoinableCustomGameModesRequest) Reset()         { *m = CMsgJoinableCustomGameModesRequest{} }
func (m *CMsgJoinableCustomGameModesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgJoinableCustomGameModesRequest) ProtoMessage()    {}

func (m *CMsgJoinableCustomGameModesRequest) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

type CMsgJoinableCustomGameModesResponseEntry struct {
	CustomGameId     *uint64 `protobuf:"varint,1,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	LobbyCount       *uint32 `protobuf:"varint,2,opt,name=lobby_count" json:"lobby_count,omitempty"`
	PlayerCount      *uint32 `protobuf:"varint,3,opt,name=player_count" json:"player_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgJoinableCustomGameModesResponseEntry) Reset() {
	*m = CMsgJoinableCustomGameModesResponseEntry{}
}
func (m *CMsgJoinableCustomGameModesResponseEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgJoinableCustomGameModesResponseEntry) ProtoMessage()    {}

func (m *CMsgJoinableCustomGameModesResponseEntry) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

func (m *CMsgJoinableCustomGameModesResponseEntry) GetLobbyCount() uint32 {
	if m != nil && m.LobbyCount != nil {
		return *m.LobbyCount
	}
	return 0
}

func (m *CMsgJoinableCustomGameModesResponseEntry) GetPlayerCount() uint32 {
	if m != nil && m.PlayerCount != nil {
		return *m.PlayerCount
	}
	return 0
}

type CMsgJoinableCustomGameModesResponse struct {
	GameModes        []*CMsgJoinableCustomGameModesResponseEntry `protobuf:"bytes,1,rep,name=game_modes" json:"game_modes,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgJoinableCustomGameModesResponse) Reset()         { *m = CMsgJoinableCustomGameModesResponse{} }
func (m *CMsgJoinableCustomGameModesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgJoinableCustomGameModesResponse) ProtoMessage()    {}

func (m *CMsgJoinableCustomGameModesResponse) GetGameModes() []*CMsgJoinableCustomGameModesResponseEntry {
	if m != nil {
		return m.GameModes
	}
	return nil
}

type CMsgJoinableCustomLobbiesRequest struct {
	ServerRegion     *uint32 `protobuf:"varint,1,opt,name=server_region" json:"server_region,omitempty"`
	CustomGameId     *uint64 `protobuf:"varint,2,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgJoinableCustomLobbiesRequest) Reset()         { *m = CMsgJoinableCustomLobbiesRequest{} }
func (m *CMsgJoinableCustomLobbiesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgJoinableCustomLobbiesRequest) ProtoMessage()    {}

func (m *CMsgJoinableCustomLobbiesRequest) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

func (m *CMsgJoinableCustomLobbiesRequest) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgJoinableCustomLobbiesResponseEntry struct {
	LobbyId          *uint64 `protobuf:"fixed64,1,opt,name=lobby_id" json:"lobby_id,omitempty"`
	CustomGameId     *uint64 `protobuf:"varint,2,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	LobbyName        *string `protobuf:"bytes,3,opt,name=lobby_name" json:"lobby_name,omitempty"`
	MemberCount      *uint32 `protobuf:"varint,4,opt,name=member_count" json:"member_count,omitempty"`
	LeaderAccountId  *uint32 `protobuf:"varint,5,opt,name=leader_account_id" json:"leader_account_id,omitempty"`
	LeaderName       *string `protobuf:"bytes,6,opt,name=leader_name" json:"leader_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgJoinableCustomLobbiesResponseEntry) Reset() {
	*m = CMsgJoinableCustomLobbiesResponseEntry{}
}
func (m *CMsgJoinableCustomLobbiesResponseEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgJoinableCustomLobbiesResponseEntry) ProtoMessage()    {}

func (m *CMsgJoinableCustomLobbiesResponseEntry) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgJoinableCustomLobbiesResponseEntry) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

func (m *CMsgJoinableCustomLobbiesResponseEntry) GetLobbyName() string {
	if m != nil && m.LobbyName != nil {
		return *m.LobbyName
	}
	return ""
}

func (m *CMsgJoinableCustomLobbiesResponseEntry) GetMemberCount() uint32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

func (m *CMsgJoinableCustomLobbiesResponseEntry) GetLeaderAccountId() uint32 {
	if m != nil && m.LeaderAccountId != nil {
		return *m.LeaderAccountId
	}
	return 0
}

func (m *CMsgJoinableCustomLobbiesResponseEntry) GetLeaderName() string {
	if m != nil && m.LeaderName != nil {
		return *m.LeaderName
	}
	return ""
}

type CMsgJoinableCustomLobbiesResponse struct {
	Lobbies          []*CMsgJoinableCustomLobbiesResponseEntry `protobuf:"bytes,1,rep,name=lobbies" json:"lobbies,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgJoinableCustomLobbiesResponse) Reset()         { *m = CMsgJoinableCustomLobbiesResponse{} }
func (m *CMsgJoinableCustomLobbiesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgJoinableCustomLobbiesResponse) ProtoMessage()    {}

func (m *CMsgJoinableCustomLobbiesResponse) GetLobbies() []*CMsgJoinableCustomLobbiesResponseEntry {
	if m != nil {
		return m.Lobbies
	}
	return nil
}

type CMsgQuickJoinCustomLobby struct {
	ServerRegion     *uint32 `protobuf:"varint,1,opt,name=server_region" json:"server_region,omitempty"`
	CustomGameId     *uint64 `protobuf:"varint,2,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,3,opt,name=client_version" json:"client_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgQuickJoinCustomLobby) Reset()         { *m = CMsgQuickJoinCustomLobby{} }
func (m *CMsgQuickJoinCustomLobby) String() string { return proto.CompactTextString(m) }
func (*CMsgQuickJoinCustomLobby) ProtoMessage()    {}

func (m *CMsgQuickJoinCustomLobby) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

func (m *CMsgQuickJoinCustomLobby) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

func (m *CMsgQuickJoinCustomLobby) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

type CMsgQuickJoinCustomLobbyResponse struct {
	Result           *DOTAJoinLobbyResult `protobuf:"varint,1,opt,name=result,enum=DOTAJoinLobbyResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgQuickJoinCustomLobbyResponse) Reset()         { *m = CMsgQuickJoinCustomLobbyResponse{} }
func (m *CMsgQuickJoinCustomLobbyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgQuickJoinCustomLobbyResponse) ProtoMessage()    {}

const Default_CMsgQuickJoinCustomLobbyResponse_Result DOTAJoinLobbyResult = DOTAJoinLobbyResult_DOTA_JOIN_RESULT_SUCCESS

func (m *CMsgQuickJoinCustomLobbyResponse) GetResult() DOTAJoinLobbyResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgQuickJoinCustomLobbyResponse_Result
}

type CMsgBotGameCreate struct {
	SearchKey        *string                              `protobuf:"bytes,1,opt,name=search_key" json:"search_key,omitempty"`
	ClientVersion    *uint32                              `protobuf:"varint,2,opt,name=client_version" json:"client_version,omitempty"`
	Difficulty       *DOTABotDifficulty `protobuf:"varint,3,opt,name=difficulty,enum=DOTABotDifficulty,def=0" json:"difficulty,omitempty"`
	Team             *DOTA_GC_TEAM `protobuf:"varint,4,opt,name=team,enum=DOTA_GC_TEAM,def=0" json:"team,omitempty"`
	GameMode         *uint32                              `protobuf:"varint,5,opt,name=game_mode" json:"game_mode,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgBotGameCreate) Reset()         { *m = CMsgBotGameCreate{} }
func (m *CMsgBotGameCreate) String() string { return proto.CompactTextString(m) }
func (*CMsgBotGameCreate) ProtoMessage()    {}

const Default_CMsgBotGameCreate_Difficulty DOTABotDifficulty = DOTABotDifficulty_BOT_DIFFICULTY_PASSIVE
const Default_CMsgBotGameCreate_Team DOTA_GC_TEAM = DOTA_GC_TEAM_DOTA_GC_TEAM_GOOD_GUYS

func (m *CMsgBotGameCreate) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgBotGameCreate) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgBotGameCreate) GetDifficulty() DOTABotDifficulty {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return Default_CMsgBotGameCreate_Difficulty
}

func (m *CMsgBotGameCreate) GetTeam() DOTA_GC_TEAM {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return Default_CMsgBotGameCreate_Team
}

func (m *CMsgBotGameCreate) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

type CMsgCustomGameCreate struct {
	SearchKey        *string `protobuf:"bytes,1,opt,name=search_key" json:"search_key,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,2,opt,name=client_version" json:"client_version,omitempty"`
	Difficulty       *uint32 `protobuf:"varint,3,opt,name=difficulty" json:"difficulty,omitempty"`
	GameMode         *string `protobuf:"bytes,4,opt,name=game_mode" json:"game_mode,omitempty"`
	Map              *string `protobuf:"bytes,5,opt,name=map" json:"map,omitempty"`
	CustomGameId     *uint64 `protobuf:"varint,7,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgCustomGameCreate) Reset()         { *m = CMsgCustomGameCreate{} }
func (m *CMsgCustomGameCreate) String() string { return proto.CompactTextString(m) }
func (*CMsgCustomGameCreate) ProtoMessage()    {}

func (m *CMsgCustomGameCreate) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgCustomGameCreate) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgCustomGameCreate) GetDifficulty() uint32 {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return 0
}

func (m *CMsgCustomGameCreate) GetGameMode() string {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return ""
}

func (m *CMsgCustomGameCreate) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

func (m *CMsgCustomGameCreate) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgEventGameCreate struct {
	SearchKey        *string `protobuf:"bytes,1,opt,name=search_key" json:"search_key,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,2,opt,name=client_version" json:"client_version,omitempty"`
	Difficulty       *uint32 `protobuf:"varint,3,opt,name=difficulty" json:"difficulty,omitempty"`
	GameMode         *string `protobuf:"bytes,4,opt,name=game_mode" json:"game_mode,omitempty"`
	Map              *string `protobuf:"bytes,5,opt,name=map" json:"map,omitempty"`
	CustomGameId     *uint64 `protobuf:"varint,7,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgEventGameCreate) Reset()         { *m = CMsgEventGameCreate{} }
func (m *CMsgEventGameCreate) String() string { return proto.CompactTextString(m) }
func (*CMsgEventGameCreate) ProtoMessage()    {}

func (m *CMsgEventGameCreate) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgEventGameCreate) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgEventGameCreate) GetDifficulty() uint32 {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return 0
}

func (m *CMsgEventGameCreate) GetGameMode() string {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return ""
}

func (m *CMsgEventGameCreate) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

func (m *CMsgEventGameCreate) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgRequestInternationalTicket struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgRequestInternationalTicket) Reset()         { *m = CMsgRequestInternationalTicket{} }
func (m *CMsgRequestInternationalTicket) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestInternationalTicket) ProtoMessage()    {}

type CMsgBalancedShuffleLobby struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgBalancedShuffleLobby) Reset()         { *m = CMsgBalancedShuffleLobby{} }
func (m *CMsgBalancedShuffleLobby) String() string { return proto.CompactTextString(m) }
func (*CMsgBalancedShuffleLobby) ProtoMessage()    {}

type CMsgInitialQuestionnaireResponse struct {
	InitialSkill     *uint32 `protobuf:"varint,1,opt,name=initial_skill" json:"initial_skill,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgInitialQuestionnaireResponse) Reset()         { *m = CMsgInitialQuestionnaireResponse{} }
func (m *CMsgInitialQuestionnaireResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgInitialQuestionnaireResponse) ProtoMessage()    {}

func (m *CMsgInitialQuestionnaireResponse) GetInitialSkill() uint32 {
	if m != nil && m.InitialSkill != nil {
		return *m.InitialSkill
	}
	return 0
}

type CMsgDOTATournament struct {
	Teams              []*CMsgDOTATournament_Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
	Games              []*CMsgDOTATournament_Game `protobuf:"bytes,2,rep,name=games" json:"games,omitempty"`
	Gid                *uint64                    `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
	TournamentId       *uint32                    `protobuf:"varint,4,opt,name=tournament_id" json:"tournament_id,omitempty"`
	TournamentType     *ETournamentType           `protobuf:"varint,5,opt,name=tournament_type,enum=ETournamentType,def=0" json:"tournament_type,omitempty"`
	TournamentTemplate *ETournamentTemplate       `protobuf:"varint,6,opt,name=tournament_template,enum=ETournamentTemplate,def=0" json:"tournament_template,omitempty"`
	DivisionId         *uint32                    `protobuf:"varint,7,opt,name=division_id" json:"division_id,omitempty"`
	StartTime          *uint32                    `protobuf:"varint,8,opt,name=start_time" json:"start_time,omitempty"`
	State              *ETournamentState          `protobuf:"varint,9,opt,name=state,enum=ETournamentState,def=0" json:"state,omitempty"`
	XXX_unrecognized   []byte                     `json:"-"`
}

func (m *CMsgDOTATournament) Reset()         { *m = CMsgDOTATournament{} }
func (m *CMsgDOTATournament) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament) ProtoMessage()    {}

const Default_CMsgDOTATournament_TournamentType ETournamentType = ETournamentType_k_ETournamentTemplate_Unknown
const Default_CMsgDOTATournament_TournamentTemplate ETournamentTemplate = ETournamentTemplate_k_ETournamentTemplate_None
const Default_CMsgDOTATournament_State ETournamentState = ETournamentState_k_ETournamentState_Unknown

func (m *CMsgDOTATournament) GetTeams() []*CMsgDOTATournament_Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgDOTATournament) GetGames() []*CMsgDOTATournament_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *CMsgDOTATournament) GetGid() uint64 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *CMsgDOTATournament) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTATournament) GetTournamentType() ETournamentType {
	if m != nil && m.TournamentType != nil {
		return *m.TournamentType
	}
	return Default_CMsgDOTATournament_TournamentType
}

func (m *CMsgDOTATournament) GetTournamentTemplate() ETournamentTemplate {
	if m != nil && m.TournamentTemplate != nil {
		return *m.TournamentTemplate
	}
	return Default_CMsgDOTATournament_TournamentTemplate
}

func (m *CMsgDOTATournament) GetDivisionId() uint32 {
	if m != nil && m.DivisionId != nil {
		return *m.DivisionId
	}
	return 0
}

func (m *CMsgDOTATournament) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTATournament) GetState() ETournamentState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgDOTATournament_State
}

type CMsgDOTATournament_Team struct {
	TeamId           *uint32               `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	TeamName         *string               `protobuf:"bytes,2,opt,name=team_name" json:"team_name,omitempty"`
	TeamAbbrev       *string               `protobuf:"bytes,3,opt,name=team_abbrev" json:"team_abbrev,omitempty"`
	Players          []uint32              `protobuf:"varint,4,rep,name=players" json:"players,omitempty"`
	Seed             *uint32               `protobuf:"varint,5,opt,name=seed" json:"seed,omitempty"`
	TeamLogo         *uint64               `protobuf:"varint,6,opt,name=team_logo" json:"team_logo,omitempty"`
	CountryCode      *string               `protobuf:"bytes,7,opt,name=country_code" json:"country_code,omitempty"`
	State            *ETournamentTeamState `protobuf:"varint,8,opt,name=state,enum=ETournamentTeamState,def=0" json:"state,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTATournament_Team) Reset()         { *m = CMsgDOTATournament_Team{} }
func (m *CMsgDOTATournament_Team) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament_Team) ProtoMessage()    {}

const Default_CMsgDOTATournament_Team_State ETournamentTeamState = ETournamentTeamState_k_ETournamentTeamState_Unknown

func (m *CMsgDOTATournament_Team) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTATournament_Team) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTATournament_Team) GetTeamAbbrev() string {
	if m != nil && m.TeamAbbrev != nil {
		return *m.TeamAbbrev
	}
	return ""
}

func (m *CMsgDOTATournament_Team) GetPlayers() []uint32 {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTATournament_Team) GetSeed() uint32 {
	if m != nil && m.Seed != nil {
		return *m.Seed
	}
	return 0
}

func (m *CMsgDOTATournament_Team) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTATournament_Team) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTATournament_Team) GetState() ETournamentTeamState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgDOTATournament_Team_State
}

type CMsgDOTATournament_Game struct {
	GameId           *uint32                              `protobuf:"varint,1,opt,name=game_id" json:"game_id,omitempty"`
	GoodTeamId       *uint32                              `protobuf:"varint,2,opt,name=good_team_id" json:"good_team_id,omitempty"`
	BadTeamId        *uint32                              `protobuf:"varint,3,opt,name=bad_team_id" json:"bad_team_id,omitempty"`
	GoodTeamSeed     *uint32                              `protobuf:"varint,12,opt,name=good_team_seed" json:"good_team_seed,omitempty"`
	BadTeamSeed      *uint32                              `protobuf:"varint,13,opt,name=bad_team_seed" json:"bad_team_seed,omitempty"`
	LobbyId          *uint64                              `protobuf:"fixed64,4,opt,name=lobby_id" json:"lobby_id,omitempty"`
	MatchId          *uint32                              `protobuf:"varint,5,opt,name=match_id" json:"match_id,omitempty"`
	GameName         *string                              `protobuf:"bytes,6,opt,name=game_name" json:"game_name,omitempty"`
	LiveStream       *bool                                `protobuf:"varint,7,opt,name=live_stream" json:"live_stream,omitempty"`
	Message          *string                              `protobuf:"bytes,9,opt,name=message" json:"message,omitempty"`
	ResultsFinal     *bool                                `protobuf:"varint,10,opt,name=results_final" json:"results_final,omitempty"`
	ReplayUrls       []*CMsgDOTATournament_Game_ReplayURL `protobuf:"bytes,11,rep,name=replay_urls" json:"replay_urls,omitempty"`
	State            *ETournamentGameState                `protobuf:"varint,14,opt,name=state,enum=ETournamentGameState,def=0" json:"state,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgDOTATournament_Game) Reset()         { *m = CMsgDOTATournament_Game{} }
func (m *CMsgDOTATournament_Game) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament_Game) ProtoMessage()    {}

const Default_CMsgDOTATournament_Game_State ETournamentGameState = ETournamentGameState_k_ETournamentGameState_Pending

func (m *CMsgDOTATournament_Game) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetGoodTeamId() uint32 {
	if m != nil && m.GoodTeamId != nil {
		return *m.GoodTeamId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetBadTeamId() uint32 {
	if m != nil && m.BadTeamId != nil {
		return *m.BadTeamId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetGoodTeamSeed() uint32 {
	if m != nil && m.GoodTeamSeed != nil {
		return *m.GoodTeamSeed
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetBadTeamSeed() uint32 {
	if m != nil && m.BadTeamSeed != nil {
		return *m.BadTeamSeed
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CMsgDOTATournament_Game) GetLiveStream() bool {
	if m != nil && m.LiveStream != nil {
		return *m.LiveStream
	}
	return false
}

func (m *CMsgDOTATournament_Game) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgDOTATournament_Game) GetResultsFinal() bool {
	if m != nil && m.ResultsFinal != nil {
		return *m.ResultsFinal
	}
	return false
}

func (m *CMsgDOTATournament_Game) GetReplayUrls() []*CMsgDOTATournament_Game_ReplayURL {
	if m != nil {
		return m.ReplayUrls
	}
	return nil
}

func (m *CMsgDOTATournament_Game) GetState() ETournamentGameState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgDOTATournament_Game_State
}

type CMsgDOTATournament_Game_ReplayURL struct {
	ProviderId       *uint32 `protobuf:"varint,1,opt,name=provider_id" json:"provider_id,omitempty"`
	StreamId         *uint32 `protobuf:"varint,2,opt,name=stream_id" json:"stream_id,omitempty"`
	Url              *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Description      *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATournament_Game_ReplayURL) Reset()         { *m = CMsgDOTATournament_Game_ReplayURL{} }
func (m *CMsgDOTATournament_Game_ReplayURL) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament_Game_ReplayURL) ProtoMessage()    {}

func (m *CMsgDOTATournament_Game_ReplayURL) GetProviderId() uint32 {
	if m != nil && m.ProviderId != nil {
		return *m.ProviderId
	}
	return 0
}

func (m *CMsgDOTATournament_Game_ReplayURL) GetStreamId() uint32 {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return 0
}

func (m *CMsgDOTATournament_Game_ReplayURL) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTATournament_Game_ReplayURL) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CMsgDOTATournamentRequest struct {
	TournamentId        *uint32 `protobuf:"varint,1,opt,name=tournament_id" json:"tournament_id,omitempty"`
	ClientTournamentGid *uint64 `protobuf:"varint,2,opt,name=client_tournament_gid" json:"client_tournament_gid,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *CMsgDOTATournamentRequest) Reset()         { *m = CMsgDOTATournamentRequest{} }
func (m *CMsgDOTATournamentRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournamentRequest) ProtoMessage()    {}

func (m *CMsgDOTATournamentRequest) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTATournamentRequest) GetClientTournamentGid() uint64 {
	if m != nil && m.ClientTournamentGid != nil {
		return *m.ClientTournamentGid
	}
	return 0
}

type CMsgDOTATournamentResponse struct {
	Result           *uint32             `protobuf:"varint,1,opt,name=result,def=2" json:"result,omitempty"`
	Tournament       *CMsgDOTATournament `protobuf:"bytes,2,opt,name=tournament" json:"tournament,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMsgDOTATournamentResponse) Reset()         { *m = CMsgDOTATournamentResponse{} }
func (m *CMsgDOTATournamentResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournamentResponse) ProtoMessage()    {}

const Default_CMsgDOTATournamentResponse_Result uint32 = 2

func (m *CMsgDOTATournamentResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATournamentResponse_Result
}

func (m *CMsgDOTATournamentResponse) GetTournament() *CMsgDOTATournament {
	if m != nil {
		return m.Tournament
	}
	return nil
}

type CMsgDOTAClearTournamentGame struct {
	TournamentId     *uint32 `protobuf:"varint,1,opt,name=tournament_id" json:"tournament_id,omitempty"`
	GameId           *uint32 `protobuf:"varint,2,opt,name=game_id" json:"game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAClearTournamentGame) Reset()         { *m = CMsgDOTAClearTournamentGame{} }
func (m *CMsgDOTAClearTournamentGame) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAClearTournamentGame) ProtoMessage()    {}

func (m *CMsgDOTAClearTournamentGame) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTAClearTournamentGame) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

type CMsgDOTAMatch struct {
	GoodGuysWin         *bool                                           `protobuf:"varint,2,opt,name=good_guys_win" json:"good_guys_win,omitempty"`
	Duration            *uint32                                         `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	StartTime           *uint32                                         `protobuf:"fixed32,4,opt,name=startTime" json:"startTime,omitempty"`
	Players             []*CMsgDOTAMatch_Player                         `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
	MatchId             *uint32                                         `protobuf:"varint,6,opt,name=match_id" json:"match_id,omitempty"`
	TowerStatus         []uint32                                        `protobuf:"varint,8,rep,name=tower_status" json:"tower_status,omitempty"`
	BarracksStatus      []uint32                                        `protobuf:"varint,9,rep,name=barracks_status" json:"barracks_status,omitempty"`
	Cluster             *uint32                                         `protobuf:"varint,10,opt,name=cluster" json:"cluster,omitempty"`
	FirstBloodTime      *uint32                                         `protobuf:"varint,12,opt,name=first_blood_time" json:"first_blood_time,omitempty"`
	ReplaySalt          *uint32                                         `protobuf:"fixed32,13,opt,name=replay_salt" json:"replay_salt,omitempty"`
	ServerIp            *uint32                                         `protobuf:"fixed32,14,opt,name=server_ip" json:"server_ip,omitempty"`
	ServerPort          *uint32                                         `protobuf:"varint,15,opt,name=server_port" json:"server_port,omitempty"`
	LobbyType           *uint32                                         `protobuf:"varint,16,opt,name=lobby_type" json:"lobby_type,omitempty"`
	HumanPlayers        *uint32                                         `protobuf:"varint,17,opt,name=human_players" json:"human_players,omitempty"`
	AverageSkill        *uint32                                         `protobuf:"varint,18,opt,name=average_skill" json:"average_skill,omitempty"`
	GameBalance         *float32                                        `protobuf:"fixed32,19,opt,name=game_balance" json:"game_balance,omitempty"`
	RadiantTeamId       *uint32                                         `protobuf:"varint,20,opt,name=radiant_team_id" json:"radiant_team_id,omitempty"`
	DireTeamId          *uint32                                         `protobuf:"varint,21,opt,name=dire_team_id" json:"dire_team_id,omitempty"`
	Leagueid            *uint32                                         `protobuf:"varint,22,opt,name=leagueid" json:"leagueid,omitempty"`
	RadiantTeamName     *string                                         `protobuf:"bytes,23,opt,name=radiant_team_name" json:"radiant_team_name,omitempty"`
	DireTeamName        *string                                         `protobuf:"bytes,24,opt,name=dire_team_name" json:"dire_team_name,omitempty"`
	RadiantTeamLogo     *uint64                                         `protobuf:"varint,25,opt,name=radiant_team_logo" json:"radiant_team_logo,omitempty"`
	DireTeamLogo        *uint64                                         `protobuf:"varint,26,opt,name=dire_team_logo" json:"dire_team_logo,omitempty"`
	RadiantTeamComplete *uint32                                         `protobuf:"varint,27,opt,name=radiant_team_complete" json:"radiant_team_complete,omitempty"`
	DireTeamComplete    *uint32                                         `protobuf:"varint,28,opt,name=dire_team_complete" json:"dire_team_complete,omitempty"`
	PositiveVotes       *uint32                                         `protobuf:"varint,29,opt,name=positive_votes" json:"positive_votes,omitempty"`
	NegativeVotes       *uint32                                         `protobuf:"varint,30,opt,name=negative_votes" json:"negative_votes,omitempty"`
	GameMode            *DOTA_GameMode           `protobuf:"varint,31,opt,name=game_mode,enum=DOTA_GameMode,def=0" json:"game_mode,omitempty"`
	PicksBans           []*CMatchHeroSelectEvent `protobuf:"bytes,32,rep,name=picks_bans" json:"picks_bans,omitempty"`
	MatchSeqNum         *uint64                                         `protobuf:"varint,33,opt,name=match_seq_num" json:"match_seq_num,omitempty"`
	ReplayState         *CMsgDOTAMatch_ReplayState                      `protobuf:"varint,34,opt,name=replay_state,enum=CMsgDOTAMatch_ReplayState,def=0" json:"replay_state,omitempty"`
	RadiantGuildId      *uint32                                         `protobuf:"varint,35,opt,name=radiant_guild_id" json:"radiant_guild_id,omitempty"`
	DireGuildId         *uint32                                         `protobuf:"varint,36,opt,name=dire_guild_id" json:"dire_guild_id,omitempty"`
	RadiantTeamTag      *string                                         `protobuf:"bytes,37,opt,name=radiant_team_tag" json:"radiant_team_tag,omitempty"`
	DireTeamTag         *string                                         `protobuf:"bytes,38,opt,name=dire_team_tag" json:"dire_team_tag,omitempty"`
	SeriesId            *uint32                                         `protobuf:"varint,39,opt,name=series_id" json:"series_id,omitempty"`
	SeriesType          *uint32                                         `protobuf:"varint,40,opt,name=series_type" json:"series_type,omitempty"`
	CustomGameId        *uint64                                         `protobuf:"varint,42,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized    []byte                                          `json:"-"`
}

func (m *CMsgDOTAMatch) Reset()         { *m = CMsgDOTAMatch{} }
func (m *CMsgDOTAMatch) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch) ProtoMessage()    {}

const Default_CMsgDOTAMatch_GameMode DOTA_GameMode = DOTA_GameMode_DOTA_GAMEMODE_NONE
const Default_CMsgDOTAMatch_ReplayState CMsgDOTAMatch_ReplayState = CMsgDOTAMatch_REPLAY_AVAILABLE

func (m *CMsgDOTAMatch) GetGoodGuysWin() bool {
	if m != nil && m.GoodGuysWin != nil {
		return *m.GoodGuysWin
	}
	return false
}

func (m *CMsgDOTAMatch) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgDOTAMatch) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAMatch) GetPlayers() []*CMsgDOTAMatch_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTAMatch) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetTowerStatus() []uint32 {
	if m != nil {
		return m.TowerStatus
	}
	return nil
}

func (m *CMsgDOTAMatch) GetBarracksStatus() []uint32 {
	if m != nil {
		return m.BarracksStatus
	}
	return nil
}

func (m *CMsgDOTAMatch) GetCluster() uint32 {
	if m != nil && m.Cluster != nil {
		return *m.Cluster
	}
	return 0
}

func (m *CMsgDOTAMatch) GetFirstBloodTime() uint32 {
	if m != nil && m.FirstBloodTime != nil {
		return *m.FirstBloodTime
	}
	return 0
}

func (m *CMsgDOTAMatch) GetReplaySalt() uint32 {
	if m != nil && m.ReplaySalt != nil {
		return *m.ReplaySalt
	}
	return 0
}

func (m *CMsgDOTAMatch) GetServerIp() uint32 {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return 0
}

func (m *CMsgDOTAMatch) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgDOTAMatch) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgDOTAMatch) GetHumanPlayers() uint32 {
	if m != nil && m.HumanPlayers != nil {
		return *m.HumanPlayers
	}
	return 0
}

func (m *CMsgDOTAMatch) GetAverageSkill() uint32 {
	if m != nil && m.AverageSkill != nil {
		return *m.AverageSkill
	}
	return 0
}

func (m *CMsgDOTAMatch) GetGameBalance() float32 {
	if m != nil && m.GameBalance != nil {
		return *m.GameBalance
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamId() uint32 {
	if m != nil && m.RadiantTeamId != nil {
		return *m.RadiantTeamId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamId() uint32 {
	if m != nil && m.DireTeamId != nil {
		return *m.DireTeamId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamName() string {
	if m != nil && m.RadiantTeamName != nil {
		return *m.RadiantTeamName
	}
	return ""
}

func (m *CMsgDOTAMatch) GetDireTeamName() string {
	if m != nil && m.DireTeamName != nil {
		return *m.DireTeamName
	}
	return ""
}

func (m *CMsgDOTAMatch) GetRadiantTeamLogo() uint64 {
	if m != nil && m.RadiantTeamLogo != nil {
		return *m.RadiantTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamLogo() uint64 {
	if m != nil && m.DireTeamLogo != nil {
		return *m.DireTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamComplete() uint32 {
	if m != nil && m.RadiantTeamComplete != nil {
		return *m.RadiantTeamComplete
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamComplete() uint32 {
	if m != nil && m.DireTeamComplete != nil {
		return *m.DireTeamComplete
	}
	return 0
}

func (m *CMsgDOTAMatch) GetPositiveVotes() uint32 {
	if m != nil && m.PositiveVotes != nil {
		return *m.PositiveVotes
	}
	return 0
}

func (m *CMsgDOTAMatch) GetNegativeVotes() uint32 {
	if m != nil && m.NegativeVotes != nil {
		return *m.NegativeVotes
	}
	return 0
}

func (m *CMsgDOTAMatch) GetGameMode() DOTA_GameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CMsgDOTAMatch_GameMode
}

func (m *CMsgDOTAMatch) GetPicksBans() []*CMatchHeroSelectEvent {
	if m != nil {
		return m.PicksBans
	}
	return nil
}

func (m *CMsgDOTAMatch) GetMatchSeqNum() uint64 {
	if m != nil && m.MatchSeqNum != nil {
		return *m.MatchSeqNum
	}
	return 0
}

func (m *CMsgDOTAMatch) GetReplayState() CMsgDOTAMatch_ReplayState {
	if m != nil && m.ReplayState != nil {
		return *m.ReplayState
	}
	return Default_CMsgDOTAMatch_ReplayState
}

func (m *CMsgDOTAMatch) GetRadiantGuildId() uint32 {
	if m != nil && m.RadiantGuildId != nil {
		return *m.RadiantGuildId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireGuildId() uint32 {
	if m != nil && m.DireGuildId != nil {
		return *m.DireGuildId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamTag() string {
	if m != nil && m.RadiantTeamTag != nil {
		return *m.RadiantTeamTag
	}
	return ""
}

func (m *CMsgDOTAMatch) GetDireTeamTag() string {
	if m != nil && m.DireTeamTag != nil {
		return *m.DireTeamTag
	}
	return ""
}

func (m *CMsgDOTAMatch) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAMatch) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgDOTAMatch_Player struct {
	AccountId                *uint32                                                 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	PlayerSlot               *uint32                                                 `protobuf:"varint,2,opt,name=player_slot" json:"player_slot,omitempty"`
	HeroId                   *uint32                                                 `protobuf:"varint,3,opt,name=hero_id" json:"hero_id,omitempty"`
	Item_0                   *uint32                                                 `protobuf:"varint,4,opt,name=item_0" json:"item_0,omitempty"`
	Item_1                   *uint32                                                 `protobuf:"varint,5,opt,name=item_1" json:"item_1,omitempty"`
	Item_2                   *uint32                                                 `protobuf:"varint,6,opt,name=item_2" json:"item_2,omitempty"`
	Item_3                   *uint32                                                 `protobuf:"varint,7,opt,name=item_3" json:"item_3,omitempty"`
	Item_4                   *uint32                                                 `protobuf:"varint,8,opt,name=item_4" json:"item_4,omitempty"`
	Item_5                   *uint32                                                 `protobuf:"varint,9,opt,name=item_5" json:"item_5,omitempty"`
	ExpectedTeamContribution *float32                                                `protobuf:"fixed32,10,opt,name=expected_team_contribution" json:"expected_team_contribution,omitempty"`
	ScaledMetric             *float32                                                `protobuf:"fixed32,11,opt,name=scaled_metric" json:"scaled_metric,omitempty"`
	PreviousRank             *uint32                                                 `protobuf:"varint,12,opt,name=previous_rank" json:"previous_rank,omitempty"`
	RankChange               *uint32                                                 `protobuf:"varint,13,opt,name=rank_change" json:"rank_change,omitempty"`
	SoloRank                 *bool                                                   `protobuf:"varint,49,opt,name=solo_rank" json:"solo_rank,omitempty"`
	Kills                    *uint32                                                 `protobuf:"varint,14,opt,name=kills" json:"kills,omitempty"`
	Deaths                   *uint32                                                 `protobuf:"varint,15,opt,name=deaths" json:"deaths,omitempty"`
	Assists                  *uint32                                                 `protobuf:"varint,16,opt,name=assists" json:"assists,omitempty"`
	LeaverStatus             *uint32                                                 `protobuf:"varint,17,opt,name=leaver_status" json:"leaver_status,omitempty"`
	Gold                     *uint32                                                 `protobuf:"varint,18,opt,name=gold" json:"gold,omitempty"`
	LastHits                 *uint32                                                 `protobuf:"varint,19,opt,name=last_hits" json:"last_hits,omitempty"`
	Denies                   *uint32                                                 `protobuf:"varint,20,opt,name=denies" json:"denies,omitempty"`
	GoldPerMin               *uint32                                                 `protobuf:"varint,21,opt,name=gold_per_min" json:"gold_per_min,omitempty"`
	XPPerMin                 *uint32                                                 `protobuf:"varint,22,opt,name=XP_per_min" json:"XP_per_min,omitempty"`
	GoldSpent                *uint32                                                 `protobuf:"varint,23,opt,name=gold_spent" json:"gold_spent,omitempty"`
	HeroDamage               *uint32                                                 `protobuf:"varint,24,opt,name=hero_damage" json:"hero_damage,omitempty"`
	TowerDamage              *uint32                                                 `protobuf:"varint,25,opt,name=tower_damage" json:"tower_damage,omitempty"`
	HeroHealing              *uint32                                                 `protobuf:"varint,26,opt,name=hero_healing" json:"hero_healing,omitempty"`
	Level                    *uint32                                                 `protobuf:"varint,27,opt,name=level" json:"level,omitempty"`
	TimeLastSeen             *uint32                                                 `protobuf:"varint,28,opt,name=time_last_seen" json:"time_last_seen,omitempty"`
	PlayerName               *string                                                 `protobuf:"bytes,29,opt,name=player_name" json:"player_name,omitempty"`
	SupportAbilityValue      *uint32                                                 `protobuf:"varint,30,opt,name=support_ability_value" json:"support_ability_value,omitempty"`
	FeedingDetected          *bool                                                   `protobuf:"varint,32,opt,name=feeding_detected" json:"feeding_detected,omitempty"`
	SearchRank               *uint32                                                 `protobuf:"varint,34,opt,name=search_rank" json:"search_rank,omitempty"`
	SearchRankUncertainty    *uint32                                                 `protobuf:"varint,35,opt,name=search_rank_uncertainty" json:"search_rank_uncertainty,omitempty"`
	RankUncertaintyChange    *int32                                                  `protobuf:"varint,36,opt,name=rank_uncertainty_change" json:"rank_uncertainty_change,omitempty"`
	HeroPlayCount            *uint32                                                 `protobuf:"varint,37,opt,name=hero_play_count" json:"hero_play_count,omitempty"`
	PartyId                  *uint64                                                 `protobuf:"fixed64,38,opt,name=party_id" json:"party_id,omitempty"`
	ScaledKills              *float32                                                `protobuf:"fixed32,39,opt,name=scaled_kills" json:"scaled_kills,omitempty"`
	ScaledDeaths             *float32                                                `protobuf:"fixed32,40,opt,name=scaled_deaths" json:"scaled_deaths,omitempty"`
	ScaledAssists            *float32                                                `protobuf:"fixed32,41,opt,name=scaled_assists" json:"scaled_assists,omitempty"`
	ClaimedFarmGold          *uint32                                                 `protobuf:"varint,42,opt,name=claimed_farm_gold" json:"claimed_farm_gold,omitempty"`
	SupportGold              *uint32                                                 `protobuf:"varint,43,opt,name=support_gold" json:"support_gold,omitempty"`
	ClaimedDenies            *uint32                                                 `protobuf:"varint,44,opt,name=claimed_denies" json:"claimed_denies,omitempty"`
	ClaimedMisses            *uint32                                                 `protobuf:"varint,45,opt,name=claimed_misses" json:"claimed_misses,omitempty"`
	Misses                   *uint32                                                 `protobuf:"varint,46,opt,name=misses" json:"misses,omitempty"`
	AbilityUpgrades          []*CMatchPlayerAbilityUpgrade    `protobuf:"bytes,47,rep,name=ability_upgrades" json:"ability_upgrades,omitempty"`
	AdditionalUnitsInventory []*CMatchAdditionalUnitInventory `protobuf:"bytes,48,rep,name=additional_units_inventory" json:"additional_units_inventory,omitempty"`
	XXX_unrecognized         []byte                                                  `json:"-"`
}

func (m *CMsgDOTAMatch_Player) Reset()         { *m = CMsgDOTAMatch_Player{} }
func (m *CMsgDOTAMatch_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_Player) ProtoMessage()    {}

func (m *CMsgDOTAMatch_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_0() uint32 {
	if m != nil && m.Item_0 != nil {
		return *m.Item_0
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_1() uint32 {
	if m != nil && m.Item_1 != nil {
		return *m.Item_1
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_2() uint32 {
	if m != nil && m.Item_2 != nil {
		return *m.Item_2
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_3() uint32 {
	if m != nil && m.Item_3 != nil {
		return *m.Item_3
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_4() uint32 {
	if m != nil && m.Item_4 != nil {
		return *m.Item_4
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_5() uint32 {
	if m != nil && m.Item_5 != nil {
		return *m.Item_5
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetExpectedTeamContribution() float32 {
	if m != nil && m.ExpectedTeamContribution != nil {
		return *m.ExpectedTeamContribution
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledMetric() float32 {
	if m != nil && m.ScaledMetric != nil {
		return *m.ScaledMetric
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPreviousRank() uint32 {
	if m != nil && m.PreviousRank != nil {
		return *m.PreviousRank
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetRankChange() uint32 {
	if m != nil && m.RankChange != nil {
		return *m.RankChange
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetSoloRank() bool {
	if m != nil && m.SoloRank != nil {
		return *m.SoloRank
	}
	return false
}

func (m *CMsgDOTAMatch_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLeaverStatus() uint32 {
	if m != nil && m.LeaverStatus != nil {
		return *m.LeaverStatus
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGoldPerMin() uint32 {
	if m != nil && m.GoldPerMin != nil {
		return *m.GoldPerMin
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetXPPerMin() uint32 {
	if m != nil && m.XPPerMin != nil {
		return *m.XPPerMin
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGoldSpent() uint32 {
	if m != nil && m.GoldSpent != nil {
		return *m.GoldSpent
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroDamage() uint32 {
	if m != nil && m.HeroDamage != nil {
		return *m.HeroDamage
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetTowerDamage() uint32 {
	if m != nil && m.TowerDamage != nil {
		return *m.TowerDamage
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroHealing() uint32 {
	if m != nil && m.HeroHealing != nil {
		return *m.HeroHealing
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetTimeLastSeen() uint32 {
	if m != nil && m.TimeLastSeen != nil {
		return *m.TimeLastSeen
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAMatch_Player) GetSupportAbilityValue() uint32 {
	if m != nil && m.SupportAbilityValue != nil {
		return *m.SupportAbilityValue
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetFeedingDetected() bool {
	if m != nil && m.FeedingDetected != nil {
		return *m.FeedingDetected
	}
	return false
}

func (m *CMsgDOTAMatch_Player) GetSearchRank() uint32 {
	if m != nil && m.SearchRank != nil {
		return *m.SearchRank
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetSearchRankUncertainty() uint32 {
	if m != nil && m.SearchRankUncertainty != nil {
		return *m.SearchRankUncertainty
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetRankUncertaintyChange() int32 {
	if m != nil && m.RankUncertaintyChange != nil {
		return *m.RankUncertaintyChange
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroPlayCount() uint32 {
	if m != nil && m.HeroPlayCount != nil {
		return *m.HeroPlayCount
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledKills() float32 {
	if m != nil && m.ScaledKills != nil {
		return *m.ScaledKills
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledDeaths() float32 {
	if m != nil && m.ScaledDeaths != nil {
		return *m.ScaledDeaths
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledAssists() float32 {
	if m != nil && m.ScaledAssists != nil {
		return *m.ScaledAssists
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetClaimedFarmGold() uint32 {
	if m != nil && m.ClaimedFarmGold != nil {
		return *m.ClaimedFarmGold
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetSupportGold() uint32 {
	if m != nil && m.SupportGold != nil {
		return *m.SupportGold
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetClaimedDenies() uint32 {
	if m != nil && m.ClaimedDenies != nil {
		return *m.ClaimedDenies
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetClaimedMisses() uint32 {
	if m != nil && m.ClaimedMisses != nil {
		return *m.ClaimedMisses
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetMisses() uint32 {
	if m != nil && m.Misses != nil {
		return *m.Misses
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetAbilityUpgrades() []*CMatchPlayerAbilityUpgrade {
	if m != nil {
		return m.AbilityUpgrades
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetAdditionalUnitsInventory() []*CMatchAdditionalUnitInventory {
	if m != nil {
		return m.AdditionalUnitsInventory
	}
	return nil
}

type CMsgDOTAPlayerMatchHistory struct {
	MatchIds         []uint32 `protobuf:"varint,1,rep,name=match_ids" json:"match_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAPlayerMatchHistory) Reset()         { *m = CMsgDOTAPlayerMatchHistory{} }
func (m *CMsgDOTAPlayerMatchHistory) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPlayerMatchHistory) ProtoMessage()    {}

func (m *CMsgDOTAPlayerMatchHistory) GetMatchIds() []uint32 {
	if m != nil {
		return m.MatchIds
	}
	return nil
}

type CMsgDOTAMatchHistoryFilter struct {
	MatchIds                 []uint32 `protobuf:"varint,1,rep,name=match_ids" json:"match_ids,omitempty"`
	NewestMatchIdAtLastQuery *uint32  `protobuf:"varint,2,opt,name=newest_match_id_at_last_query" json:"newest_match_id_at_last_query,omitempty"`
	TimeLastQuery            *uint32  `protobuf:"varint,3,opt,name=time_last_query" json:"time_last_query,omitempty"`
	XXX_unrecognized         []byte   `json:"-"`
}

func (m *CMsgDOTAMatchHistoryFilter) Reset()         { *m = CMsgDOTAMatchHistoryFilter{} }
func (m *CMsgDOTAMatchHistoryFilter) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchHistoryFilter) ProtoMessage()    {}

func (m *CMsgDOTAMatchHistoryFilter) GetMatchIds() []uint32 {
	if m != nil {
		return m.MatchIds
	}
	return nil
}

func (m *CMsgDOTAMatchHistoryFilter) GetNewestMatchIdAtLastQuery() uint32 {
	if m != nil && m.NewestMatchIdAtLastQuery != nil {
		return *m.NewestMatchIdAtLastQuery
	}
	return 0
}

func (m *CMsgDOTAMatchHistoryFilter) GetTimeLastQuery() uint32 {
	if m != nil && m.TimeLastQuery != nil {
		return *m.TimeLastQuery
	}
	return 0
}

type CMsgDOTARequestMatches struct {
	HeroId              *uint32                            `protobuf:"varint,2,opt,name=hero_id" json:"hero_id,omitempty"`
	GameMode            *uint32                            `protobuf:"varint,3,opt,name=game_mode" json:"game_mode,omitempty"`
	DateMin             *uint32                            `protobuf:"fixed32,6,opt,name=date_min" json:"date_min,omitempty"`
	DateMax             *uint32                            `protobuf:"fixed32,7,opt,name=date_max" json:"date_max,omitempty"`
	MatchesRequested    *uint32                            `protobuf:"varint,10,opt,name=matches_requested" json:"matches_requested,omitempty"`
	StartAtMatchId      *uint32                            `protobuf:"varint,11,opt,name=start_at_match_id" json:"start_at_match_id,omitempty"`
	MinPlayers          *uint32                            `protobuf:"fixed32,12,opt,name=min_players" json:"min_players,omitempty"`
	RequestId           *uint32                            `protobuf:"varint,13,opt,name=request_id" json:"request_id,omitempty"`
	TournamentGamesOnly *bool                              `protobuf:"varint,14,opt,name=tournament_games_only" json:"tournament_games_only,omitempty"`
	AccountId           *uint32                            `protobuf:"varint,15,opt,name=account_id" json:"account_id,omitempty"`
	LeagueId            *uint32                            `protobuf:"varint,16,opt,name=league_id" json:"league_id,omitempty"`
	Skill               *CMsgDOTARequestMatches_SkillLevel `protobuf:"varint,17,opt,name=skill,enum=CMsgDOTARequestMatches_SkillLevel,def=0" json:"skill,omitempty"`
	TeamId              *uint32                            `protobuf:"varint,18,opt,name=team_id" json:"team_id,omitempty"`
	CustomGameId        *uint64                            `protobuf:"varint,20,opt,name=custom_game_id" json:"custom_game_id,omitempty"`
	XXX_unrecognized    []byte                             `json:"-"`
}

func (m *CMsgDOTARequestMatches) Reset()         { *m = CMsgDOTARequestMatches{} }
func (m *CMsgDOTARequestMatches) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestMatches) ProtoMessage()    {}

const Default_CMsgDOTARequestMatches_Skill CMsgDOTARequestMatches_SkillLevel = CMsgDOTARequestMatches_Any

func (m *CMsgDOTARequestMatches) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetDateMin() uint32 {
	if m != nil && m.DateMin != nil {
		return *m.DateMin
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetDateMax() uint32 {
	if m != nil && m.DateMax != nil {
		return *m.DateMax
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetMatchesRequested() uint32 {
	if m != nil && m.MatchesRequested != nil {
		return *m.MatchesRequested
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetStartAtMatchId() uint32 {
	if m != nil && m.StartAtMatchId != nil {
		return *m.StartAtMatchId
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetMinPlayers() uint32 {
	if m != nil && m.MinPlayers != nil {
		return *m.MinPlayers
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetTournamentGamesOnly() bool {
	if m != nil && m.TournamentGamesOnly != nil {
		return *m.TournamentGamesOnly
	}
	return false
}

func (m *CMsgDOTARequestMatches) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetSkill() CMsgDOTARequestMatches_SkillLevel {
	if m != nil && m.Skill != nil {
		return *m.Skill
	}
	return Default_CMsgDOTARequestMatches_Skill
}

func (m *CMsgDOTARequestMatches) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTARequestMatches) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

type CMsgDOTARequestMatchesResponse struct {
	Matches          []*CMsgDOTAMatch                         `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	Series           []*CMsgDOTARequestMatchesResponse_Series `protobuf:"bytes,2,rep,name=series" json:"series,omitempty"`
	RequestId        *uint32                                  `protobuf:"varint,3,opt,name=request_id" json:"request_id,omitempty"`
	TotalResults     *uint32                                  `protobuf:"varint,4,opt,name=total_results" json:"total_results,omitempty"`
	ResultsRemaining *uint32                                  `protobuf:"varint,5,opt,name=results_remaining" json:"results_remaining,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgDOTARequestMatchesResponse) Reset()         { *m = CMsgDOTARequestMatchesResponse{} }
func (m *CMsgDOTARequestMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestMatchesResponse) ProtoMessage()    {}

func (m *CMsgDOTARequestMatchesResponse) GetMatches() []*CMsgDOTAMatch {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *CMsgDOTARequestMatchesResponse) GetSeries() []*CMsgDOTARequestMatchesResponse_Series {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *CMsgDOTARequestMatchesResponse) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgDOTARequestMatchesResponse) GetTotalResults() uint32 {
	if m != nil && m.TotalResults != nil {
		return *m.TotalResults
	}
	return 0
}

func (m *CMsgDOTARequestMatchesResponse) GetResultsRemaining() uint32 {
	if m != nil && m.ResultsRemaining != nil {
		return *m.ResultsRemaining
	}
	return 0
}

type CMsgDOTARequestMatchesResponse_Series struct {
	Matches          []*CMsgDOTAMatch `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	SeriesId         *uint32          `protobuf:"varint,2,opt,name=series_id" json:"series_id,omitempty"`
	SeriesType       *uint32          `protobuf:"varint,3,opt,name=series_type" json:"series_type,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CMsgDOTARequestMatchesResponse_Series) Reset()         { *m = CMsgDOTARequestMatchesResponse_Series{} }
func (m *CMsgDOTARequestMatchesResponse_Series) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestMatchesResponse_Series) ProtoMessage()    {}

func (m *CMsgDOTARequestMatchesResponse_Series) GetMatches() []*CMsgDOTAMatch {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *CMsgDOTARequestMatchesResponse_Series) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTARequestMatchesResponse_Series) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

type CMsgDOTAPopup struct {
	Id               *CMsgDOTAPopup_PopupID `protobuf:"varint,1,opt,name=id,enum=CMsgDOTAPopup_PopupID,def=0" json:"id,omitempty"`
	CustomText       *string                `protobuf:"bytes,2,opt,name=custom_text" json:"custom_text,omitempty"`
	IntData          *int32                 `protobuf:"zigzag32,3,opt,name=int_data" json:"int_data,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CMsgDOTAPopup) Reset()         { *m = CMsgDOTAPopup{} }
func (m *CMsgDOTAPopup) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPopup) ProtoMessage()    {}

const Default_CMsgDOTAPopup_Id CMsgDOTAPopup_PopupID = CMsgDOTAPopup_KICKED_FROM_LOBBY

func (m *CMsgDOTAPopup) GetId() CMsgDOTAPopup_PopupID {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Default_CMsgDOTAPopup_Id
}

func (m *CMsgDOTAPopup) GetCustomText() string {
	if m != nil && m.CustomText != nil {
		return *m.CustomText
	}
	return ""
}

func (m *CMsgDOTAPopup) GetIntData() int32 {
	if m != nil && m.IntData != nil {
		return *m.IntData
	}
	return 0
}

type CMsgDOTATeamMemberSDO struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TeamIds          []uint32 `protobuf:"varint,2,rep,name=team_ids" json:"team_ids,omitempty"`
	ProfileTeamId    *uint32  `protobuf:"varint,3,opt,name=profile_team_id" json:"profile_team_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTATeamMemberSDO) Reset()         { *m = CMsgDOTATeamMemberSDO{} }
func (m *CMsgDOTATeamMemberSDO) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamMemberSDO) ProtoMessage()    {}

func (m *CMsgDOTATeamMemberSDO) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamMemberSDO) GetTeamIds() []uint32 {
	if m != nil {
		return m.TeamIds
	}
	return nil
}

func (m *CMsgDOTATeamMemberSDO) GetProfileTeamId() uint32 {
	if m != nil && m.ProfileTeamId != nil {
		return *m.ProfileTeamId
	}
	return 0
}

type CMsgDOTATeamAdminSDO struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TeamIds          []uint32 `protobuf:"varint,2,rep,name=team_ids" json:"team_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTATeamAdminSDO) Reset()         { *m = CMsgDOTATeamAdminSDO{} }
func (m *CMsgDOTATeamAdminSDO) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamAdminSDO) ProtoMessage()    {}

func (m *CMsgDOTATeamAdminSDO) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamAdminSDO) GetTeamIds() []uint32 {
	if m != nil {
		return m.TeamIds
	}
	return nil
}

type CMsgDOTATeamMember struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TimeJoined       *uint32 `protobuf:"varint,4,opt,name=time_joined" json:"time_joined,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamMember) Reset()         { *m = CMsgDOTATeamMember{} }
func (m *CMsgDOTATeamMember) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamMember) ProtoMessage()    {}

func (m *CMsgDOTATeamMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamMember) GetTimeJoined() uint32 {
	if m != nil && m.TimeJoined != nil {
		return *m.TimeJoined
	}
	return 0
}

type CMsgDOTATeam struct {
	Members                      []*CMsgDOTATeamMember `protobuf:"bytes,1,rep,name=members" json:"members,omitempty"`
	TeamId                       *uint32               `protobuf:"varint,2,opt,name=team_id" json:"team_id,omitempty"`
	Name                         *string               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Tag                          *string               `protobuf:"bytes,4,opt,name=tag" json:"tag,omitempty"`
	AdminId                      *uint32               `protobuf:"varint,5,opt,name=admin_id" json:"admin_id,omitempty"`
	TimeCreated                  *uint32               `protobuf:"varint,6,opt,name=time_created" json:"time_created,omitempty"`
	Disbanded                    *bool                 `protobuf:"varint,7,opt,name=disbanded" json:"disbanded,omitempty"`
	Wins                         *uint32               `protobuf:"varint,8,opt,name=wins" json:"wins,omitempty"`
	Losses                       *uint32               `protobuf:"varint,9,opt,name=losses" json:"losses,omitempty"`
	Rank                         *uint32               `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	CalibrationGamesRemaining    *uint32               `protobuf:"varint,24,opt,name=calibration_games_remaining" json:"calibration_games_remaining,omitempty"`
	Logo                         *uint64               `protobuf:"varint,11,opt,name=logo" json:"logo,omitempty"`
	BaseLogo                     *uint64               `protobuf:"varint,12,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo                   *uint64               `protobuf:"varint,13,opt,name=banner_logo" json:"banner_logo,omitempty"`
	SponsorLogo                  *uint64               `protobuf:"varint,14,opt,name=sponsor_logo" json:"sponsor_logo,omitempty"`
	CountryCode                  *string               `protobuf:"bytes,15,opt,name=country_code" json:"country_code,omitempty"`
	Url                          *string               `protobuf:"bytes,16,opt,name=url" json:"url,omitempty"`
	Fullgamesplayed              *uint32               `protobuf:"varint,17,opt,name=fullgamesplayed" json:"fullgamesplayed,omitempty"`
	Leagues                      []uint32              `protobuf:"varint,18,rep,name=leagues" json:"leagues,omitempty"`
	Gamesplayed                  *uint32               `protobuf:"varint,19,opt,name=gamesplayed" json:"gamesplayed,omitempty"`
	Gamesplayedwithcurrentroster *uint32               `protobuf:"varint,20,opt,name=gamesplayedwithcurrentroster" json:"gamesplayedwithcurrentroster,omitempty"`
	Teammatchmakinggamesplayed   *uint32               `protobuf:"varint,21,opt,name=teammatchmakinggamesplayed" json:"teammatchmakinggamesplayed,omitempty"`
	Lastplayedgametime           *uint32               `protobuf:"varint,22,opt,name=lastplayedgametime" json:"lastplayedgametime,omitempty"`
	Lastrenametime               *uint32               `protobuf:"varint,23,opt,name=lastrenametime" json:"lastrenametime,omitempty"`
	XXX_unrecognized             []byte                `json:"-"`
}

func (m *CMsgDOTATeam) Reset()         { *m = CMsgDOTATeam{} }
func (m *CMsgDOTATeam) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeam) ProtoMessage()    {}

func (m *CMsgDOTATeam) GetMembers() []*CMsgDOTATeamMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgDOTATeam) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTATeam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTATeam) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTATeam) GetAdminId() uint32 {
	if m != nil && m.AdminId != nil {
		return *m.AdminId
	}
	return 0
}

func (m *CMsgDOTATeam) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTATeam) GetDisbanded() bool {
	if m != nil && m.Disbanded != nil {
		return *m.Disbanded
	}
	return false
}

func (m *CMsgDOTATeam) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTATeam) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTATeam) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgDOTATeam) GetCalibrationGamesRemaining() uint32 {
	if m != nil && m.CalibrationGamesRemaining != nil {
		return *m.CalibrationGamesRemaining
	}
	return 0
}

func (m *CMsgDOTATeam) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTATeam) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTATeam) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTATeam) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTATeam) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTATeam) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTATeam) GetFullgamesplayed() uint32 {
	if m != nil && m.Fullgamesplayed != nil {
		return *m.Fullgamesplayed
	}
	return 0
}

func (m *CMsgDOTATeam) GetLeagues() []uint32 {
	if m != nil {
		return m.Leagues
	}
	return nil
}

func (m *CMsgDOTATeam) GetGamesplayed() uint32 {
	if m != nil && m.Gamesplayed != nil {
		return *m.Gamesplayed
	}
	return 0
}

func (m *CMsgDOTATeam) GetGamesplayedwithcurrentroster() uint32 {
	if m != nil && m.Gamesplayedwithcurrentroster != nil {
		return *m.Gamesplayedwithcurrentroster
	}
	return 0
}

func (m *CMsgDOTATeam) GetTeammatchmakinggamesplayed() uint32 {
	if m != nil && m.Teammatchmakinggamesplayed != nil {
		return *m.Teammatchmakinggamesplayed
	}
	return 0
}

func (m *CMsgDOTATeam) GetLastplayedgametime() uint32 {
	if m != nil && m.Lastplayedgametime != nil {
		return *m.Lastplayedgametime
	}
	return 0
}

func (m *CMsgDOTATeam) GetLastrenametime() uint32 {
	if m != nil && m.Lastrenametime != nil {
		return *m.Lastrenametime
	}
	return 0
}

type CMsgDOTACreateTeam struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,3,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,4,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,5,opt,name=banner_logo" json:"banner_logo,omitempty"`
	SponsorLogo      *uint64 `protobuf:"varint,6,opt,name=sponsor_logo" json:"sponsor_logo,omitempty"`
	CountryCode      *string `protobuf:"bytes,7,opt,name=country_code" json:"country_code,omitempty"`
	Url              *string `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTACreateTeam) Reset()         { *m = CMsgDOTACreateTeam{} }
func (m *CMsgDOTACreateTeam) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACreateTeam) ProtoMessage()    {}

func (m *CMsgDOTACreateTeam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CMsgDOTACreateTeamResponse struct {
	Results          []CMsgDOTACreateTeamResponse_Result `protobuf:"varint,1,rep,name=results,enum=CMsgDOTACreateTeamResponse_Result" json:"results,omitempty"`
	TeamId           *uint32                             `protobuf:"varint,2,opt,name=team_id" json:"team_id,omitempty"`
	SecondsRemaining *uint32                             `protobuf:"varint,3,opt,name=seconds_remaining" json:"seconds_remaining,omitempty"`
	RequiredLevel    *uint32                             `protobuf:"varint,4,opt,name=required_level" json:"required_level,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgDOTACreateTeamResponse) Reset()         { *m = CMsgDOTACreateTeamResponse{} }
func (m *CMsgDOTACreateTeamResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACreateTeamResponse) ProtoMessage()    {}

func (m *CMsgDOTACreateTeamResponse) GetResults() []CMsgDOTACreateTeamResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *CMsgDOTACreateTeamResponse) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTACreateTeamResponse) GetSecondsRemaining() uint32 {
	if m != nil && m.SecondsRemaining != nil {
		return *m.SecondsRemaining
	}
	return 0
}

func (m *CMsgDOTACreateTeamResponse) GetRequiredLevel() uint32 {
	if m != nil && m.RequiredLevel != nil {
		return *m.RequiredLevel
	}
	return 0
}

type CMsgDOTAEditTeam struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,3,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,4,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,5,opt,name=banner_logo" json:"banner_logo,omitempty"`
	SponsorLogo      *uint64 `protobuf:"varint,6,opt,name=sponsor_logo" json:"sponsor_logo,omitempty"`
	CountryCode      *string `protobuf:"bytes,7,opt,name=country_code" json:"country_code,omitempty"`
	Url              *string `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	TeamId           *uint32 `protobuf:"varint,9,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAEditTeam) Reset()         { *m = CMsgDOTAEditTeam{} }
func (m *CMsgDOTAEditTeam) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeam) ProtoMessage()    {}

func (m *CMsgDOTAEditTeam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTAEditTeam) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTAEditTeam) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAEditTeam) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeam) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeam) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeam) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTAEditTeam) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTAEditTeam) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTAEditTeamLogo struct {
	Logo             *uint64 `protobuf:"varint,1,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,2,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,3,opt,name=banner_logo" json:"banner_logo,omitempty"`
	SponsorLogo      *uint64 `protobuf:"varint,4,opt,name=sponsor_logo" json:"sponsor_logo,omitempty"`
	TeamId           *uint32 `protobuf:"varint,5,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAEditTeamLogo) Reset()         { *m = CMsgDOTAEditTeamLogo{} }
func (m *CMsgDOTAEditTeamLogo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeamLogo) ProtoMessage()    {}

func (m *CMsgDOTAEditTeamLogo) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAEditTeamLogo) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeamLogo) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeamLogo) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeamLogo) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTAEditTeamLogoResponse struct {
	Results          []CMsgDOTAEditTeamLogoResponse_Result `protobuf:"varint,1,rep,name=results,enum=CMsgDOTAEditTeamLogoResponse_Result" json:"results,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgDOTAEditTeamLogoResponse) Reset()         { *m = CMsgDOTAEditTeamLogoResponse{} }
func (m *CMsgDOTAEditTeamLogoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeamLogoResponse) ProtoMessage()    {}

func (m *CMsgDOTAEditTeamLogoResponse) GetResults() []CMsgDOTAEditTeamLogoResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type CMsgDOTAEditTeamDetails struct {
	CountryCode      *string `protobuf:"bytes,1,opt,name=country_code" json:"country_code,omitempty"`
	Url              *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	TeamId           *uint32 `protobuf:"varint,3,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAEditTeamDetails) Reset()         { *m = CMsgDOTAEditTeamDetails{} }
func (m *CMsgDOTAEditTeamDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeamDetails) ProtoMessage()    {}

func (m *CMsgDOTAEditTeamDetails) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTAEditTeamDetails) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTAEditTeamDetails) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTAEditTeamDetailsResponse struct {
	Results          []CMsgDOTAEditTeamDetailsResponse_Result `protobuf:"varint,1,rep,name=results,enum=CMsgDOTAEditTeamDetailsResponse_Result" json:"results,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgDOTAEditTeamDetailsResponse) Reset()         { *m = CMsgDOTAEditTeamDetailsResponse{} }
func (m *CMsgDOTAEditTeamDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeamDetailsResponse) ProtoMessage()    {}

func (m *CMsgDOTAEditTeamDetailsResponse) GetResults() []CMsgDOTAEditTeamDetailsResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type CMsgDOTADisbandTeam struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTADisbandTeam) Reset()         { *m = CMsgDOTADisbandTeam{} }
func (m *CMsgDOTADisbandTeam) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADisbandTeam) ProtoMessage()    {}

func (m *CMsgDOTADisbandTeam) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTADisbandTeamResponse struct {
	Result           *CMsgDOTADisbandTeamResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTADisbandTeamResponse_Result,def=0" json:"result,omitempty"`
	TeamName         *string                             `protobuf:"bytes,2,opt,name=team_name" json:"team_name,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgDOTADisbandTeamResponse) Reset()         { *m = CMsgDOTADisbandTeamResponse{} }
func (m *CMsgDOTADisbandTeamResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADisbandTeamResponse) ProtoMessage()    {}

const Default_CMsgDOTADisbandTeamResponse_Result CMsgDOTADisbandTeamResponse_Result = CMsgDOTADisbandTeamResponse_SUCCESS

func (m *CMsgDOTADisbandTeamResponse) GetResult() CMsgDOTADisbandTeamResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTADisbandTeamResponse_Result
}

func (m *CMsgDOTADisbandTeamResponse) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

type CMsgDOTARequestTeamData struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTARequestTeamData) Reset()         { *m = CMsgDOTARequestTeamData{} }
func (m *CMsgDOTARequestTeamData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestTeamData) ProtoMessage()    {}

type CMsgDOTARequestTeamDataResponse struct {
	Result           *CMsgDOTARequestTeamDataResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTARequestTeamDataResponse_Result,def=0" json:"result,omitempty"`
	Data             []*CMsgDOTATeamData                     `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgDOTARequestTeamDataResponse) Reset()         { *m = CMsgDOTARequestTeamDataResponse{} }
func (m *CMsgDOTARequestTeamDataResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestTeamDataResponse) ProtoMessage()    {}

const Default_CMsgDOTARequestTeamDataResponse_Result CMsgDOTARequestTeamDataResponse_Result = CMsgDOTARequestTeamDataResponse_SUCCESS

func (m *CMsgDOTARequestTeamDataResponse) GetResult() CMsgDOTARequestTeamDataResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTARequestTeamDataResponse_Result
}

func (m *CMsgDOTARequestTeamDataResponse) GetData() []*CMsgDOTATeamData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgDOTATeamData struct {
	OnTeam           *bool         `protobuf:"varint,1,opt,name=on_team" json:"on_team,omitempty"`
	ProfileTeam      *bool         `protobuf:"varint,2,opt,name=profile_team" json:"profile_team,omitempty"`
	Team             *CMsgDOTATeam `protobuf:"bytes,3,opt,name=team" json:"team,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CMsgDOTATeamData) Reset()         { *m = CMsgDOTATeamData{} }
func (m *CMsgDOTATeamData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamData) ProtoMessage()    {}

func (m *CMsgDOTATeamData) GetOnTeam() bool {
	if m != nil && m.OnTeam != nil {
		return *m.OnTeam
	}
	return false
}

func (m *CMsgDOTATeamData) GetProfileTeam() bool {
	if m != nil && m.ProfileTeam != nil {
		return *m.ProfileTeam
	}
	return false
}

func (m *CMsgDOTATeamData) GetTeam() *CMsgDOTATeam {
	if m != nil {
		return m.Team
	}
	return nil
}

type CMsgDOTATeamProfileRequest struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamProfileRequest) Reset()         { *m = CMsgDOTATeamProfileRequest{} }
func (m *CMsgDOTATeamProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamProfileRequest) ProtoMessage()    {}

func (m *CMsgDOTATeamProfileRequest) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTATeamMemberProfileRequest struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamMemberProfileRequest) Reset()         { *m = CMsgDOTATeamMemberProfileRequest{} }
func (m *CMsgDOTATeamMemberProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamMemberProfileRequest) ProtoMessage()    {}

func (m *CMsgDOTATeamMemberProfileRequest) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgDOTATeamIDByNameRequest struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamIDByNameRequest) Reset()         { *m = CMsgDOTATeamIDByNameRequest{} }
func (m *CMsgDOTATeamIDByNameRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamIDByNameRequest) ProtoMessage()    {}

func (m *CMsgDOTATeamIDByNameRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CMsgDOTATeamIDByNameResponse struct {
	Eresult          *uint32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	TeamId           *uint32 `protobuf:"varint,2,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamIDByNameResponse) Reset()         { *m = CMsgDOTATeamIDByNameResponse{} }
func (m *CMsgDOTATeamIDByNameResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamIDByNameResponse) ProtoMessage()    {}

func (m *CMsgDOTATeamIDByNameResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

func (m *CMsgDOTATeamIDByNameResponse) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTATeamProfileResponse struct {
	Eresult          *uint32       `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	Team             *CMsgDOTATeam `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CMsgDOTATeamProfileResponse) Reset()         { *m = CMsgDOTATeamProfileResponse{} }
func (m *CMsgDOTATeamProfileResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamProfileResponse) ProtoMessage()    {}

func (m *CMsgDOTATeamProfileResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

func (m *CMsgDOTATeamProfileResponse) GetTeam() *CMsgDOTATeam {
	if m != nil {
		return m.Team
	}
	return nil
}

type CMsgDOTAProTeamListRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAProTeamListRequest) Reset()         { *m = CMsgDOTAProTeamListRequest{} }
func (m *CMsgDOTAProTeamListRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProTeamListRequest) ProtoMessage()    {}

type CMsgDOTAProTeamListResponse struct {
	Teams            []*CMsgDOTAProTeamListResponse_TeamEntry `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
	Eresult          *uint32                                  `protobuf:"varint,2,opt,name=eresult" json:"eresult,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgDOTAProTeamListResponse) Reset()         { *m = CMsgDOTAProTeamListResponse{} }
func (m *CMsgDOTAProTeamListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProTeamListResponse) ProtoMessage()    {}

func (m *CMsgDOTAProTeamListResponse) GetTeams() []*CMsgDOTAProTeamListResponse_TeamEntry {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgDOTAProTeamListResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

type CMsgDOTAProTeamListResponse_TeamEntry struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	TimeCreated      *uint32 `protobuf:"varint,3,opt,name=time_created" json:"time_created,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	CountryCode      *string `protobuf:"bytes,5,opt,name=country_code" json:"country_code,omitempty"`
	MemberCount      *uint32 `protobuf:"varint,6,opt,name=member_count" json:"member_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) Reset()         { *m = CMsgDOTAProTeamListResponse_TeamEntry{} }
func (m *CMsgDOTAProTeamListResponse_TeamEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProTeamListResponse_TeamEntry) ProtoMessage()    {}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetMemberCount() uint32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

type CMsgDOTATeamInvite_InviterToGC struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TeamId           *uint32 `protobuf:"varint,2,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamInvite_InviterToGC) Reset()         { *m = CMsgDOTATeamInvite_InviterToGC{} }
func (m *CMsgDOTATeamInvite_InviterToGC) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_InviterToGC) ProtoMessage()    {}

func (m *CMsgDOTATeamInvite_InviterToGC) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamInvite_InviterToGC) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTATeamInvite_GCImmediateResponseToInviter struct {
	Result           *CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result,def=0" json:"result,omitempty"`
	InviteeName      *string                                                 `protobuf:"bytes,2,opt,name=invitee_name" json:"invitee_name,omitempty"`
	RequiredLevel    *uint32                                                 `protobuf:"varint,3,opt,name=required_level" json:"required_level,omitempty"`
	XXX_unrecognized []byte                                                  `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) Reset() {
	*m = CMsgDOTATeamInvite_GCImmediateResponseToInviter{}
}
func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTATeamInvite_GCImmediateResponseToInviter) ProtoMessage() {}

const Default_CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result = CMsgDOTATeamInvite_GCImmediateResponseToInviter_SUCCESS

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) GetResult() CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result
}

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) GetInviteeName() string {
	if m != nil && m.InviteeName != nil {
		return *m.InviteeName
	}
	return ""
}

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) GetRequiredLevel() uint32 {
	if m != nil && m.RequiredLevel != nil {
		return *m.RequiredLevel
	}
	return 0
}

type CMsgDOTATeamInvite_GCRequestToInvitee struct {
	InviterAccountId *uint32 `protobuf:"varint,1,opt,name=inviter_account_id" json:"inviter_account_id,omitempty"`
	TeamName         *string `protobuf:"bytes,2,opt,name=team_name" json:"team_name,omitempty"`
	TeamTag          *string `protobuf:"bytes,3,opt,name=team_tag" json:"team_tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) Reset()         { *m = CMsgDOTATeamInvite_GCRequestToInvitee{} }
func (m *CMsgDOTATeamInvite_GCRequestToInvitee) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_GCRequestToInvitee) ProtoMessage()    {}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetInviterAccountId() uint32 {
	if m != nil && m.InviterAccountId != nil {
		return *m.InviterAccountId
	}
	return 0
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

type CMsgDOTATeamInvite_InviteeResponseToGC struct {
	Result           *CMsgDOTATeamInvite_InviteeResponseToGC_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTATeamInvite_InviteeResponseToGC_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTATeamInvite_InviteeResponseToGC) Reset() {
	*m = CMsgDOTATeamInvite_InviteeResponseToGC{}
}
func (m *CMsgDOTATeamInvite_InviteeResponseToGC) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_InviteeResponseToGC) ProtoMessage()    {}

const Default_CMsgDOTATeamInvite_InviteeResponseToGC_Result CMsgDOTATeamInvite_InviteeResponseToGC_Result = CMsgDOTATeamInvite_InviteeResponseToGC_JOIN

func (m *CMsgDOTATeamInvite_InviteeResponseToGC) GetResult() CMsgDOTATeamInvite_InviteeResponseToGC_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_InviteeResponseToGC_Result
}

type CMsgDOTATeamInvite_GCResponseToInviter struct {
	Result           *CMsgDOTATeamInvite_GCResponseToInviter_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTATeamInvite_GCResponseToInviter_Result,def=0" json:"result,omitempty"`
	InviteeName      *string                                        `protobuf:"bytes,2,opt,name=invitee_name" json:"invitee_name,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCResponseToInviter) Reset() {
	*m = CMsgDOTATeamInvite_GCResponseToInviter{}
}
func (m *CMsgDOTATeamInvite_GCResponseToInviter) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_GCResponseToInviter) ProtoMessage()    {}

const Default_CMsgDOTATeamInvite_GCResponseToInviter_Result CMsgDOTATeamInvite_GCResponseToInviter_Result = CMsgDOTATeamInvite_GCResponseToInviter_JOINED

func (m *CMsgDOTATeamInvite_GCResponseToInviter) GetResult() CMsgDOTATeamInvite_GCResponseToInviter_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_GCResponseToInviter_Result
}

func (m *CMsgDOTATeamInvite_GCResponseToInviter) GetInviteeName() string {
	if m != nil && m.InviteeName != nil {
		return *m.InviteeName
	}
	return ""
}

type CMsgDOTATeamInvite_GCResponseToInvitee struct {
	Result           *CMsgDOTATeamInvite_GCResponseToInvitee_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTATeamInvite_GCResponseToInvitee_Result,def=0" json:"result,omitempty"`
	TeamName         *string                                        `protobuf:"bytes,2,opt,name=team_name" json:"team_name,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCResponseToInvitee) Reset() {
	*m = CMsgDOTATeamInvite_GCResponseToInvitee{}
}
func (m *CMsgDOTATeamInvite_GCResponseToInvitee) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_GCResponseToInvitee) ProtoMessage()    {}

const Default_CMsgDOTATeamInvite_GCResponseToInvitee_Result CMsgDOTATeamInvite_GCResponseToInvitee_Result = CMsgDOTATeamInvite_GCResponseToInvitee_SUCCESS

func (m *CMsgDOTATeamInvite_GCResponseToInvitee) GetResult() CMsgDOTATeamInvite_GCResponseToInvitee_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_GCResponseToInvitee_Result
}

func (m *CMsgDOTATeamInvite_GCResponseToInvitee) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

type CMsgDOTATeamOnProfile struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	Enabled          *bool   `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamOnProfile) Reset()         { *m = CMsgDOTATeamOnProfile{} }
func (m *CMsgDOTATeamOnProfile) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamOnProfile) ProtoMessage()    {}

func (m *CMsgDOTATeamOnProfile) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTATeamOnProfile) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CMsgDOTAKickTeamMember struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TeamId           *uint32 `protobuf:"varint,2,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAKickTeamMember) Reset()         { *m = CMsgDOTAKickTeamMember{} }
func (m *CMsgDOTAKickTeamMember) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAKickTeamMember) ProtoMessage()    {}

func (m *CMsgDOTAKickTeamMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAKickTeamMember) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTAKickTeamMemberResponse struct {
	Result           *CMsgDOTAKickTeamMemberResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAKickTeamMemberResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgDOTAKickTeamMemberResponse) Reset()         { *m = CMsgDOTAKickTeamMemberResponse{} }
func (m *CMsgDOTAKickTeamMemberResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAKickTeamMemberResponse) ProtoMessage()    {}

const Default_CMsgDOTAKickTeamMemberResponse_Result CMsgDOTAKickTeamMemberResponse_Result = CMsgDOTAKickTeamMemberResponse_SUCCESS

func (m *CMsgDOTAKickTeamMemberResponse) GetResult() CMsgDOTAKickTeamMemberResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAKickTeamMemberResponse_Result
}

type CMsgDOTATransferTeamAdmin struct {
	NewAdminAccountId *uint32 `protobuf:"varint,1,opt,name=new_admin_account_id" json:"new_admin_account_id,omitempty"`
	TeamId            *uint32 `protobuf:"varint,2,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgDOTATransferTeamAdmin) Reset()         { *m = CMsgDOTATransferTeamAdmin{} }
func (m *CMsgDOTATransferTeamAdmin) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATransferTeamAdmin) ProtoMessage()    {}

func (m *CMsgDOTATransferTeamAdmin) GetNewAdminAccountId() uint32 {
	if m != nil && m.NewAdminAccountId != nil {
		return *m.NewAdminAccountId
	}
	return 0
}

func (m *CMsgDOTATransferTeamAdmin) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTATransferTeamAdminResponse struct {
	Result           *CMsgDOTATransferTeamAdminResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTATransferTeamAdminResponse_Result,def=0" json:"result,omitempty"`
	InviteeName      *string                                   `protobuf:"bytes,2,opt,name=invitee_name" json:"invitee_name,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgDOTATransferTeamAdminResponse) Reset()         { *m = CMsgDOTATransferTeamAdminResponse{} }
func (m *CMsgDOTATransferTeamAdminResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATransferTeamAdminResponse) ProtoMessage()    {}

const Default_CMsgDOTATransferTeamAdminResponse_Result CMsgDOTATransferTeamAdminResponse_Result = CMsgDOTATransferTeamAdminResponse_SUCCESS

func (m *CMsgDOTATransferTeamAdminResponse) GetResult() CMsgDOTATransferTeamAdminResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATransferTeamAdminResponse_Result
}

func (m *CMsgDOTATransferTeamAdminResponse) GetInviteeName() string {
	if m != nil && m.InviteeName != nil {
		return *m.InviteeName
	}
	return ""
}

type CMsgDOTALeaveTeam struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALeaveTeam) Reset()         { *m = CMsgDOTALeaveTeam{} }
func (m *CMsgDOTALeaveTeam) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeaveTeam) ProtoMessage()    {}

func (m *CMsgDOTALeaveTeam) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTALeaveTeamResponse struct {
	Result           *CMsgDOTALeaveTeamResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTALeaveTeamResponse_Result,def=0" json:"result,omitempty"`
	TeamName         *string                           `protobuf:"bytes,2,opt,name=team_name" json:"team_name,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CMsgDOTALeaveTeamResponse) Reset()         { *m = CMsgDOTALeaveTeamResponse{} }
func (m *CMsgDOTALeaveTeamResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeaveTeamResponse) ProtoMessage()    {}

const Default_CMsgDOTALeaveTeamResponse_Result CMsgDOTALeaveTeamResponse_Result = CMsgDOTALeaveTeamResponse_SUCCESS

func (m *CMsgDOTALeaveTeamResponse) GetResult() CMsgDOTALeaveTeamResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTALeaveTeamResponse_Result
}

func (m *CMsgDOTALeaveTeamResponse) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

type CMsgDOTABetaParticipation struct {
	AccessRights     *uint32 `protobuf:"varint,1,opt,name=access_rights" json:"access_rights,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTABetaParticipation) Reset()         { *m = CMsgDOTABetaParticipation{} }
func (m *CMsgDOTABetaParticipation) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABetaParticipation) ProtoMessage()    {}

func (m *CMsgDOTABetaParticipation) GetAccessRights() uint32 {
	if m != nil && m.AccessRights != nil {
		return *m.AccessRights
	}
	return 0
}

type CMsgDOTAJoinChatChannel struct {
	ChannelName      *string               `protobuf:"bytes,2,opt,name=channel_name" json:"channel_name,omitempty"`
	ChannelType      *DOTAChatChannelTypeT `protobuf:"varint,4,opt,name=channel_type,enum=DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAJoinChatChannel) Reset()         { *m = CMsgDOTAJoinChatChannel{} }
func (m *CMsgDOTAJoinChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAJoinChatChannel) ProtoMessage()    {}

const Default_CMsgDOTAJoinChatChannel_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional

func (m *CMsgDOTAJoinChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTAJoinChatChannel) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTAJoinChatChannel_ChannelType
}

type CMsgDOTALeaveChatChannel struct {
	ChannelId        *uint64 `protobuf:"varint,1,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALeaveChatChannel) Reset()         { *m = CMsgDOTALeaveChatChannel{} }
func (m *CMsgDOTALeaveChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeaveChatChannel) ProtoMessage()    {}

func (m *CMsgDOTALeaveChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type CMsgDOTAClientIgnoredUser struct {
	IgnoredAccountId *uint32 `protobuf:"varint,1,opt,name=ignored_account_id" json:"ignored_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAClientIgnoredUser) Reset()         { *m = CMsgDOTAClientIgnoredUser{} }
func (m *CMsgDOTAClientIgnoredUser) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAClientIgnoredUser) ProtoMessage()    {}

func (m *CMsgDOTAClientIgnoredUser) GetIgnoredAccountId() uint32 {
	if m != nil && m.IgnoredAccountId != nil {
		return *m.IgnoredAccountId
	}
	return 0
}

type CMsgDOTAChatMessage struct {
	AccountId                   *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	ChannelId                   *uint64 `protobuf:"varint,2,opt,name=channel_id" json:"channel_id,omitempty"`
	PersonaName                 *string `protobuf:"bytes,3,opt,name=persona_name" json:"persona_name,omitempty"`
	Text                        *string `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Timestamp                   *uint32 `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	SuggestInviteAccountId      *uint32 `protobuf:"varint,6,opt,name=suggest_invite_account_id" json:"suggest_invite_account_id,omitempty"`
	SuggestInviteName           *string `protobuf:"bytes,7,opt,name=suggest_invite_name" json:"suggest_invite_name,omitempty"`
	FantasyDraftOwnerAccountId  *uint32 `protobuf:"varint,8,opt,name=fantasy_draft_owner_account_id" json:"fantasy_draft_owner_account_id,omitempty"`
	FantasyDraftPlayerAccountId *uint32 `protobuf:"varint,9,opt,name=fantasy_draft_player_account_id" json:"fantasy_draft_player_account_id,omitempty"`
	CompendiumLevel             *uint32 `protobuf:"varint,10,opt,name=compendium_level" json:"compendium_level,omitempty"`
	XXX_unrecognized            []byte  `json:"-"`
}

func (m *CMsgDOTAChatMessage) Reset()         { *m = CMsgDOTAChatMessage{} }
func (m *CMsgDOTAChatMessage) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatMessage) ProtoMessage()    {}

func (m *CMsgDOTAChatMessage) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestInviteAccountId() uint32 {
	if m != nil && m.SuggestInviteAccountId != nil {
		return *m.SuggestInviteAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestInviteName() string {
	if m != nil && m.SuggestInviteName != nil {
		return *m.SuggestInviteName
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetFantasyDraftOwnerAccountId() uint32 {
	if m != nil && m.FantasyDraftOwnerAccountId != nil {
		return *m.FantasyDraftOwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetFantasyDraftPlayerAccountId() uint32 {
	if m != nil && m.FantasyDraftPlayerAccountId != nil {
		return *m.FantasyDraftPlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetCompendiumLevel() uint32 {
	if m != nil && m.CompendiumLevel != nil {
		return *m.CompendiumLevel
	}
	return 0
}

type CMsgDOTAChatMember struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name" json:"persona_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatMember) Reset()         { *m = CMsgDOTAChatMember{} }
func (m *CMsgDOTAChatMember) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatMember) ProtoMessage()    {}

func (m *CMsgDOTAChatMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAChatMember) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

type CMsgDOTAJoinChatChannelResponse struct {
	Response         *uint32               `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	ChannelName      *string               `protobuf:"bytes,2,opt,name=channel_name" json:"channel_name,omitempty"`
	ChannelId        *uint64               `protobuf:"fixed64,3,opt,name=channel_id" json:"channel_id,omitempty"`
	MaxMembers       *uint32               `protobuf:"varint,4,opt,name=max_members" json:"max_members,omitempty"`
	Members          []*CMsgDOTAChatMember `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAJoinChatChannelResponse) Reset()         { *m = CMsgDOTAJoinChatChannelResponse{} }
func (m *CMsgDOTAJoinChatChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAJoinChatChannelResponse) ProtoMessage()    {}

func (m *CMsgDOTAJoinChatChannelResponse) GetResponse() uint32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTAJoinChatChannelResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetMaxMembers() uint32 {
	if m != nil && m.MaxMembers != nil {
		return *m.MaxMembers
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetMembers() []*CMsgDOTAChatMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgDOTAChatChannelFullUpdate struct {
	ChannelId        *uint64               `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	Members          []*CMsgDOTAChatMember `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAChatChannelFullUpdate) Reset()         { *m = CMsgDOTAChatChannelFullUpdate{} }
func (m *CMsgDOTAChatChannelFullUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatChannelFullUpdate) ProtoMessage()    {}

func (m *CMsgDOTAChatChannelFullUpdate) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatChannelFullUpdate) GetMembers() []*CMsgDOTAChatMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgDOTAOtherJoinedChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name" json:"persona_name,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,3,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAOtherJoinedChatChannel) Reset()         { *m = CMsgDOTAOtherJoinedChatChannel{} }
func (m *CMsgDOTAOtherJoinedChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAOtherJoinedChatChannel) ProtoMessage()    {}

func (m *CMsgDOTAOtherJoinedChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgDOTAOtherLeftChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAOtherLeftChatChannel) Reset()         { *m = CMsgDOTAOtherLeftChatChannel{} }
func (m *CMsgDOTAOtherLeftChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAOtherLeftChatChannel) ProtoMessage()    {}

func (m *CMsgDOTAOtherLeftChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAOtherLeftChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgDOTAChatChannelMemberUpdate struct {
	ChannelId        *uint64                                         `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	LeftSteamIds     []uint64                                        `protobuf:"fixed64,2,rep,name=left_steam_ids" json:"left_steam_ids,omitempty"`
	JoinedMembers    []*CMsgDOTAChatChannelMemberUpdate_JoinedMember `protobuf:"bytes,3,rep,name=joined_members" json:"joined_members,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *CMsgDOTAChatChannelMemberUpdate) Reset()         { *m = CMsgDOTAChatChannelMemberUpdate{} }
func (m *CMsgDOTAChatChannelMemberUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatChannelMemberUpdate) ProtoMessage()    {}

func (m *CMsgDOTAChatChannelMemberUpdate) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatChannelMemberUpdate) GetLeftSteamIds() []uint64 {
	if m != nil {
		return m.LeftSteamIds
	}
	return nil
}

func (m *CMsgDOTAChatChannelMemberUpdate) GetJoinedMembers() []*CMsgDOTAChatChannelMemberUpdate_JoinedMember {
	if m != nil {
		return m.JoinedMembers
	}
	return nil
}

type CMsgDOTAChatChannelMemberUpdate_JoinedMember struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name" json:"persona_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) Reset() {
	*m = CMsgDOTAChatChannelMemberUpdate_JoinedMember{}
}
func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAChatChannelMemberUpdate_JoinedMember) ProtoMessage() {}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

type CMsgDOTARequestChatChannelList struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTARequestChatChannelList) Reset()         { *m = CMsgDOTARequestChatChannelList{} }
func (m *CMsgDOTARequestChatChannelList) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestChatChannelList) ProtoMessage()    {}

type CMsgDOTARequestChatChannelListResponse struct {
	Channels         []*CMsgDOTARequestChatChannelListResponse_ChatChannel `protobuf:"bytes,1,rep,name=channels" json:"channels,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *CMsgDOTARequestChatChannelListResponse) Reset() {
	*m = CMsgDOTARequestChatChannelListResponse{}
}
func (m *CMsgDOTARequestChatChannelListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestChatChannelListResponse) ProtoMessage()    {}

func (m *CMsgDOTARequestChatChannelListResponse) GetChannels() []*CMsgDOTARequestChatChannelListResponse_ChatChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type CMsgDOTARequestChatChannelListResponse_ChatChannel struct {
	ChannelName      *string               `protobuf:"bytes,1,opt,name=channel_name" json:"channel_name,omitempty"`
	NumMembers       *uint32               `protobuf:"varint,2,opt,name=num_members" json:"num_members,omitempty"`
	ChannelType      *DOTAChatChannelTypeT `protobuf:"varint,3,opt,name=channel_type,enum=DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) Reset() {
	*m = CMsgDOTARequestChatChannelListResponse_ChatChannel{}
}
func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARequestChatChannelListResponse_ChatChannel) ProtoMessage() {}

const Default_CMsgDOTARequestChatChannelListResponse_ChatChannel_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) GetNumMembers() uint32 {
	if m != nil && m.NumMembers != nil {
		return *m.NumMembers
	}
	return 0
}

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTARequestChatChannelListResponse_ChatChannel_ChannelType
}

type CMsgDOTAChatGetUserList struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatGetUserList) Reset()         { *m = CMsgDOTAChatGetUserList{} }
func (m *CMsgDOTAChatGetUserList) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetUserList) ProtoMessage()    {}

func (m *CMsgDOTAChatGetUserList) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type CMsgDOTAChatGetUserListResponse struct {
	ChannelId        *uint64                                   `protobuf:"fixed64,1,opt,name=channel_id" json:"channel_id,omitempty"`
	Members          []*CMsgDOTAChatGetUserListResponse_Member `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgDOTAChatGetUserListResponse) Reset()         { *m = CMsgDOTAChatGetUserListResponse{} }
func (m *CMsgDOTAChatGetUserListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetUserListResponse) ProtoMessage()    {}

func (m *CMsgDOTAChatGetUserListResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatGetUserListResponse) GetMembers() []*CMsgDOTAChatGetUserListResponse_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgDOTAChatGetUserListResponse_Member struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name" json:"persona_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatGetUserListResponse_Member) Reset() {
	*m = CMsgDOTAChatGetUserListResponse_Member{}
}
func (m *CMsgDOTAChatGetUserListResponse_Member) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetUserListResponse_Member) ProtoMessage()    {}

func (m *CMsgDOTAChatGetUserListResponse_Member) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAChatGetUserListResponse_Member) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

type CMsgDOTAGuildSDO struct {
	GuildId          *uint32                        `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Name             *string                        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Tag              *string                        `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
	TimeCreated      *uint32                        `protobuf:"varint,4,opt,name=time_created" json:"time_created,omitempty"`
	TimeDisbanded    *uint32                        `protobuf:"varint,5,opt,name=time_disbanded" json:"time_disbanded,omitempty"`
	Logo             *uint64                        `protobuf:"varint,6,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64                        `protobuf:"varint,7,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo       *uint64                        `protobuf:"varint,8,opt,name=banner_logo" json:"banner_logo,omitempty"`
	Members          []*CMsgDOTAGuildSDO_Member     `protobuf:"bytes,9,rep,name=members" json:"members,omitempty"`
	Invitations      []*CMsgDOTAGuildSDO_Invitation `protobuf:"bytes,10,rep,name=invitations" json:"invitations,omitempty"`
	Message          *string                        `protobuf:"bytes,11,opt,name=message" json:"message,omitempty"`
	Incremental      *bool                          `protobuf:"varint,12,opt,name=incremental" json:"incremental,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgDOTAGuildSDO) Reset()         { *m = CMsgDOTAGuildSDO{} }
func (m *CMsgDOTAGuildSDO) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildSDO) ProtoMessage()    {}

func (m *CMsgDOTAGuildSDO) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildSDO) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTAGuildSDO) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTAGuildSDO) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTAGuildSDO) GetTimeDisbanded() uint32 {
	if m != nil && m.TimeDisbanded != nil {
		return *m.TimeDisbanded
	}
	return 0
}

func (m *CMsgDOTAGuildSDO) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAGuildSDO) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTAGuildSDO) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTAGuildSDO) GetMembers() []*CMsgDOTAGuildSDO_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgDOTAGuildSDO) GetInvitations() []*CMsgDOTAGuildSDO_Invitation {
	if m != nil {
		return m.Invitations
	}
	return nil
}

func (m *CMsgDOTAGuildSDO) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgDOTAGuildSDO) GetIncremental() bool {
	if m != nil && m.Incremental != nil {
		return *m.Incremental
	}
	return false
}

type CMsgDOTAGuildSDO_Member struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TimeJoined       *uint32 `protobuf:"varint,2,opt,name=time_joined" json:"time_joined,omitempty"`
	Role             *uint32 `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildSDO_Member) Reset()         { *m = CMsgDOTAGuildSDO_Member{} }
func (m *CMsgDOTAGuildSDO_Member) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildSDO_Member) ProtoMessage()    {}

func (m *CMsgDOTAGuildSDO_Member) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAGuildSDO_Member) GetTimeJoined() uint32 {
	if m != nil && m.TimeJoined != nil {
		return *m.TimeJoined
	}
	return 0
}

func (m *CMsgDOTAGuildSDO_Member) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

type CMsgDOTAGuildSDO_Invitation struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TimeSent         *uint32 `protobuf:"varint,2,opt,name=time_sent" json:"time_sent,omitempty"`
	AccountIdSender  *uint32 `protobuf:"varint,3,opt,name=account_id_sender" json:"account_id_sender,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildSDO_Invitation) Reset()         { *m = CMsgDOTAGuildSDO_Invitation{} }
func (m *CMsgDOTAGuildSDO_Invitation) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildSDO_Invitation) ProtoMessage()    {}

func (m *CMsgDOTAGuildSDO_Invitation) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAGuildSDO_Invitation) GetTimeSent() uint32 {
	if m != nil && m.TimeSent != nil {
		return *m.TimeSent
	}
	return 0
}

func (m *CMsgDOTAGuildSDO_Invitation) GetAccountIdSender() uint32 {
	if m != nil && m.AccountIdSender != nil {
		return *m.AccountIdSender
	}
	return 0
}

type CMsgDOTAGuildAuditSDO struct {
	GuildId          *uint32                        `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Entries          []*CMsgDOTAGuildAuditSDO_Entry `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgDOTAGuildAuditSDO) Reset()         { *m = CMsgDOTAGuildAuditSDO{} }
func (m *CMsgDOTAGuildAuditSDO) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildAuditSDO) ProtoMessage()    {}

func (m *CMsgDOTAGuildAuditSDO) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO) GetEntries() []*CMsgDOTAGuildAuditSDO_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type CMsgDOTAGuildAuditSDO_Entry struct {
	EventIndex         *uint32 `protobuf:"varint,1,opt,name=event_index" json:"event_index,omitempty"`
	Timestamp          *uint32 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Action             *uint32 `protobuf:"varint,3,opt,name=action" json:"action,omitempty"`
	AccountIdRequestor *uint32 `protobuf:"varint,4,opt,name=account_id_requestor" json:"account_id_requestor,omitempty"`
	AccountIdTarget    *uint32 `protobuf:"varint,5,opt,name=account_id_target" json:"account_id_target,omitempty"`
	ReferenceDataA     *uint32 `protobuf:"varint,6,opt,name=reference_data_a" json:"reference_data_a,omitempty"`
	ReferenceDataB     *uint32 `protobuf:"varint,7,opt,name=reference_data_b" json:"reference_data_b,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgDOTAGuildAuditSDO_Entry) Reset()         { *m = CMsgDOTAGuildAuditSDO_Entry{} }
func (m *CMsgDOTAGuildAuditSDO_Entry) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildAuditSDO_Entry) ProtoMessage()    {}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetEventIndex() uint32 {
	if m != nil && m.EventIndex != nil {
		return *m.EventIndex
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetAction() uint32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetAccountIdRequestor() uint32 {
	if m != nil && m.AccountIdRequestor != nil {
		return *m.AccountIdRequestor
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetAccountIdTarget() uint32 {
	if m != nil && m.AccountIdTarget != nil {
		return *m.AccountIdTarget
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetReferenceDataA() uint32 {
	if m != nil && m.ReferenceDataA != nil {
		return *m.ReferenceDataA
	}
	return 0
}

func (m *CMsgDOTAGuildAuditSDO_Entry) GetReferenceDataB() uint32 {
	if m != nil && m.ReferenceDataB != nil {
		return *m.ReferenceDataB
	}
	return 0
}

type CMsgDOTAAccountGuildMembershipsSDO struct {
	AccountId        *uint32                                          `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Memberships      []*CMsgDOTAAccountGuildMembershipsSDO_Membership `protobuf:"bytes,2,rep,name=memberships" json:"memberships,omitempty"`
	Invitations      []*CMsgDOTAAccountGuildMembershipsSDO_Invitation `protobuf:"bytes,3,rep,name=invitations" json:"invitations,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *CMsgDOTAAccountGuildMembershipsSDO) Reset()         { *m = CMsgDOTAAccountGuildMembershipsSDO{} }
func (m *CMsgDOTAAccountGuildMembershipsSDO) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAAccountGuildMembershipsSDO) ProtoMessage()    {}

func (m *CMsgDOTAAccountGuildMembershipsSDO) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAAccountGuildMembershipsSDO) GetMemberships() []*CMsgDOTAAccountGuildMembershipsSDO_Membership {
	if m != nil {
		return m.Memberships
	}
	return nil
}

func (m *CMsgDOTAAccountGuildMembershipsSDO) GetInvitations() []*CMsgDOTAAccountGuildMembershipsSDO_Invitation {
	if m != nil {
		return m.Invitations
	}
	return nil
}

type CMsgDOTAAccountGuildMembershipsSDO_Membership struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Role             *uint32 `protobuf:"varint,2,opt,name=role" json:"role,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Membership) Reset() {
	*m = CMsgDOTAAccountGuildMembershipsSDO_Membership{}
}
func (m *CMsgDOTAAccountGuildMembershipsSDO_Membership) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAAccountGuildMembershipsSDO_Membership) ProtoMessage() {}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Membership) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Membership) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

type CMsgDOTAAccountGuildMembershipsSDO_Invitation struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	TimeSent         *uint32 `protobuf:"varint,2,opt,name=time_sent" json:"time_sent,omitempty"`
	AccountIdSender  *uint32 `protobuf:"varint,3,opt,name=account_id_sender" json:"account_id_sender,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Invitation) Reset() {
	*m = CMsgDOTAAccountGuildMembershipsSDO_Invitation{}
}
func (m *CMsgDOTAAccountGuildMembershipsSDO_Invitation) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAAccountGuildMembershipsSDO_Invitation) ProtoMessage() {}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Invitation) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Invitation) GetTimeSent() uint32 {
	if m != nil && m.TimeSent != nil {
		return *m.TimeSent
	}
	return 0
}

func (m *CMsgDOTAAccountGuildMembershipsSDO_Invitation) GetAccountIdSender() uint32 {
	if m != nil && m.AccountIdSender != nil {
		return *m.AccountIdSender
	}
	return 0
}

type CMsgDOTAGuildCreateRequest struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,3,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,4,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,5,opt,name=banner_logo" json:"banner_logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildCreateRequest) Reset()         { *m = CMsgDOTAGuildCreateRequest{} }
func (m *CMsgDOTAGuildCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildCreateRequest) ProtoMessage()    {}

func (m *CMsgDOTAGuildCreateRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTAGuildCreateRequest) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTAGuildCreateRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAGuildCreateRequest) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTAGuildCreateRequest) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

type CMsgDOTAGuildCreateResponse struct {
	GuildId          *uint32                              `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Errors           []CMsgDOTAGuildCreateResponse_EError `protobuf:"varint,2,rep,name=errors,enum=CMsgDOTAGuildCreateResponse_EError" json:"errors,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgDOTAGuildCreateResponse) Reset()         { *m = CMsgDOTAGuildCreateResponse{} }
func (m *CMsgDOTAGuildCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildCreateResponse) ProtoMessage()    {}

func (m *CMsgDOTAGuildCreateResponse) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildCreateResponse) GetErrors() []CMsgDOTAGuildCreateResponse_EError {
	if m != nil {
		return m.Errors
	}
	return nil
}

type CMsgDOTAGuildSetAccountRoleRequest struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	TargetAccountId  *uint32 `protobuf:"varint,2,opt,name=target_account_id" json:"target_account_id,omitempty"`
	TargetRole       *uint32 `protobuf:"varint,3,opt,name=target_role" json:"target_role,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildSetAccountRoleRequest) Reset()         { *m = CMsgDOTAGuildSetAccountRoleRequest{} }
func (m *CMsgDOTAGuildSetAccountRoleRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildSetAccountRoleRequest) ProtoMessage()    {}

func (m *CMsgDOTAGuildSetAccountRoleRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildSetAccountRoleRequest) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

func (m *CMsgDOTAGuildSetAccountRoleRequest) GetTargetRole() uint32 {
	if m != nil && m.TargetRole != nil {
		return *m.TargetRole
	}
	return 0
}

type CMsgDOTAGuildSetAccountRoleResponse struct {
	Result           *CMsgDOTAGuildSetAccountRoleResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAGuildSetAccountRoleResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgDOTAGuildSetAccountRoleResponse) Reset()         { *m = CMsgDOTAGuildSetAccountRoleResponse{} }
func (m *CMsgDOTAGuildSetAccountRoleResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildSetAccountRoleResponse) ProtoMessage()    {}

const Default_CMsgDOTAGuildSetAccountRoleResponse_Result CMsgDOTAGuildSetAccountRoleResponse_EResult = CMsgDOTAGuildSetAccountRoleResponse_SUCCESS

func (m *CMsgDOTAGuildSetAccountRoleResponse) GetResult() CMsgDOTAGuildSetAccountRoleResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAGuildSetAccountRoleResponse_Result
}

type CMsgDOTAGuildInviteAccountRequest struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	TargetAccountId  *uint32 `protobuf:"varint,2,opt,name=target_account_id" json:"target_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildInviteAccountRequest) Reset()         { *m = CMsgDOTAGuildInviteAccountRequest{} }
func (m *CMsgDOTAGuildInviteAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildInviteAccountRequest) ProtoMessage()    {}

func (m *CMsgDOTAGuildInviteAccountRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildInviteAccountRequest) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

type CMsgDOTAGuildInviteAccountResponse struct {
	Result           *CMsgDOTAGuildInviteAccountResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAGuildInviteAccountResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTAGuildInviteAccountResponse) Reset()         { *m = CMsgDOTAGuildInviteAccountResponse{} }
func (m *CMsgDOTAGuildInviteAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildInviteAccountResponse) ProtoMessage()    {}

const Default_CMsgDOTAGuildInviteAccountResponse_Result CMsgDOTAGuildInviteAccountResponse_EResult = CMsgDOTAGuildInviteAccountResponse_SUCCESS

func (m *CMsgDOTAGuildInviteAccountResponse) GetResult() CMsgDOTAGuildInviteAccountResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAGuildInviteAccountResponse_Result
}

type CMsgDOTAGuildCancelInviteRequest struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	TargetAccountId  *uint32 `protobuf:"varint,2,opt,name=target_account_id" json:"target_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildCancelInviteRequest) Reset()         { *m = CMsgDOTAGuildCancelInviteRequest{} }
func (m *CMsgDOTAGuildCancelInviteRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildCancelInviteRequest) ProtoMessage()    {}

func (m *CMsgDOTAGuildCancelInviteRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildCancelInviteRequest) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

type CMsgDOTAGuildCancelInviteResponse struct {
	Result           *CMsgDOTAGuildCancelInviteResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAGuildCancelInviteResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAGuildCancelInviteResponse) Reset()         { *m = CMsgDOTAGuildCancelInviteResponse{} }
func (m *CMsgDOTAGuildCancelInviteResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildCancelInviteResponse) ProtoMessage()    {}

const Default_CMsgDOTAGuildCancelInviteResponse_Result CMsgDOTAGuildCancelInviteResponse_EResult = CMsgDOTAGuildCancelInviteResponse_SUCCESS

func (m *CMsgDOTAGuildCancelInviteResponse) GetResult() CMsgDOTAGuildCancelInviteResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAGuildCancelInviteResponse_Result
}

type CMsgDOTAGuildUpdateDetailsRequest struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Logo             *uint64 `protobuf:"varint,2,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,3,opt,name=base_logo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,4,opt,name=banner_logo" json:"banner_logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildUpdateDetailsRequest) Reset()         { *m = CMsgDOTAGuildUpdateDetailsRequest{} }
func (m *CMsgDOTAGuildUpdateDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildUpdateDetailsRequest) ProtoMessage()    {}

func (m *CMsgDOTAGuildUpdateDetailsRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildUpdateDetailsRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAGuildUpdateDetailsRequest) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTAGuildUpdateDetailsRequest) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

type CMsgDOTAGuildUpdateDetailsResponse struct {
	Result           *CMsgDOTAGuildUpdateDetailsResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAGuildUpdateDetailsResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTAGuildUpdateDetailsResponse) Reset()         { *m = CMsgDOTAGuildUpdateDetailsResponse{} }
func (m *CMsgDOTAGuildUpdateDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildUpdateDetailsResponse) ProtoMessage()    {}

const Default_CMsgDOTAGuildUpdateDetailsResponse_Result CMsgDOTAGuildUpdateDetailsResponse_EResult = CMsgDOTAGuildUpdateDetailsResponse_SUCCESS

func (m *CMsgDOTAGuildUpdateDetailsResponse) GetResult() CMsgDOTAGuildUpdateDetailsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAGuildUpdateDetailsResponse_Result
}

type CMsgDOTAGCToGCUpdateOpenGuildPartyRequest struct {
	PartyId          *uint64  `protobuf:"varint,1,opt,name=party_id" json:"party_id,omitempty"`
	GuildId          *uint32  `protobuf:"varint,2,opt,name=guild_id" json:"guild_id,omitempty"`
	MemberAccountIds []uint32 `protobuf:"varint,3,rep,name=member_account_ids" json:"member_account_ids,omitempty"`
	Description      *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) Reset() {
	*m = CMsgDOTAGCToGCUpdateOpenGuildPartyRequest{}
}
func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) ProtoMessage()    {}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) GetMemberAccountIds() []uint32 {
	if m != nil {
		return m.MemberAccountIds
	}
	return nil
}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyRequest) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CMsgDOTAGCToGCUpdateOpenGuildPartyResponse struct {
	MaintainAssociation *bool  `protobuf:"varint,1,opt,name=maintain_association" json:"maintain_association,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyResponse) Reset() {
	*m = CMsgDOTAGCToGCUpdateOpenGuildPartyResponse{}
}
func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAGCToGCUpdateOpenGuildPartyResponse) ProtoMessage() {}

func (m *CMsgDOTAGCToGCUpdateOpenGuildPartyResponse) GetMaintainAssociation() bool {
	if m != nil && m.MaintainAssociation != nil {
		return *m.MaintainAssociation
	}
	return false
}

type CMsgDOTAGCToGCDestroyOpenGuildPartyRequest struct {
	PartyId          *uint64 `protobuf:"varint,1,opt,name=party_id" json:"party_id,omitempty"`
	GuildId          *uint32 `protobuf:"varint,2,opt,name=guild_id" json:"guild_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGCToGCDestroyOpenGuildPartyRequest) Reset() {
	*m = CMsgDOTAGCToGCDestroyOpenGuildPartyRequest{}
}
func (m *CMsgDOTAGCToGCDestroyOpenGuildPartyRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAGCToGCDestroyOpenGuildPartyRequest) ProtoMessage() {}

func (m *CMsgDOTAGCToGCDestroyOpenGuildPartyRequest) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgDOTAGCToGCDestroyOpenGuildPartyRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

type CMsgDOTAGCToGCDestroyOpenGuildPartyResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAGCToGCDestroyOpenGuildPartyResponse) Reset() {
	*m = CMsgDOTAGCToGCDestroyOpenGuildPartyResponse{}
}
func (m *CMsgDOTAGCToGCDestroyOpenGuildPartyResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAGCToGCDestroyOpenGuildPartyResponse) ProtoMessage() {}

type CMsgDOTAPartySetOpenGuildRequest struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Description      *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAPartySetOpenGuildRequest) Reset()         { *m = CMsgDOTAPartySetOpenGuildRequest{} }
func (m *CMsgDOTAPartySetOpenGuildRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPartySetOpenGuildRequest) ProtoMessage()    {}

func (m *CMsgDOTAPartySetOpenGuildRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAPartySetOpenGuildRequest) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CMsgDOTAPartySetOpenGuildResponse struct {
	Result           *CMsgDOTAPartySetOpenGuildResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAPartySetOpenGuildResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAPartySetOpenGuildResponse) Reset()         { *m = CMsgDOTAPartySetOpenGuildResponse{} }
func (m *CMsgDOTAPartySetOpenGuildResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPartySetOpenGuildResponse) ProtoMessage()    {}

const Default_CMsgDOTAPartySetOpenGuildResponse_Result CMsgDOTAPartySetOpenGuildResponse_EResult = CMsgDOTAPartySetOpenGuildResponse_SUCCESS

func (m *CMsgDOTAPartySetOpenGuildResponse) GetResult() CMsgDOTAPartySetOpenGuildResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAPartySetOpenGuildResponse_Result
}

type CMsgDOTAJoinOpenGuildPartyRequest struct {
	PartyId          *uint64 `protobuf:"varint,1,opt,name=party_id" json:"party_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAJoinOpenGuildPartyRequest) Reset()         { *m = CMsgDOTAJoinOpenGuildPartyRequest{} }
func (m *CMsgDOTAJoinOpenGuildPartyRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAJoinOpenGuildPartyRequest) ProtoMessage()    {}

func (m *CMsgDOTAJoinOpenGuildPartyRequest) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

type CMsgDOTAJoinOpenGuildPartyResponse struct {
	Result           *CMsgDOTAJoinOpenGuildPartyResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAJoinOpenGuildPartyResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTAJoinOpenGuildPartyResponse) Reset()         { *m = CMsgDOTAJoinOpenGuildPartyResponse{} }
func (m *CMsgDOTAJoinOpenGuildPartyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAJoinOpenGuildPartyResponse) ProtoMessage()    {}

const Default_CMsgDOTAJoinOpenGuildPartyResponse_Result CMsgDOTAJoinOpenGuildPartyResponse_EResult = CMsgDOTAJoinOpenGuildPartyResponse_SUCCESS

func (m *CMsgDOTAJoinOpenGuildPartyResponse) GetResult() CMsgDOTAJoinOpenGuildPartyResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAJoinOpenGuildPartyResponse_Result
}

type CMsgDOTAGuildOpenPartyRefresh struct {
	GuildId          *uint32                                    `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	OpenParties      []*CMsgDOTAGuildOpenPartyRefresh_OpenParty `protobuf:"bytes,2,rep,name=open_parties" json:"open_parties,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAGuildOpenPartyRefresh) Reset()         { *m = CMsgDOTAGuildOpenPartyRefresh{} }
func (m *CMsgDOTAGuildOpenPartyRefresh) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildOpenPartyRefresh) ProtoMessage()    {}

func (m *CMsgDOTAGuildOpenPartyRefresh) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildOpenPartyRefresh) GetOpenParties() []*CMsgDOTAGuildOpenPartyRefresh_OpenParty {
	if m != nil {
		return m.OpenParties
	}
	return nil
}

type CMsgDOTAGuildOpenPartyRefresh_OpenParty struct {
	PartyId          *uint64  `protobuf:"varint,1,opt,name=party_id" json:"party_id,omitempty"`
	MemberAccountIds []uint32 `protobuf:"varint,2,rep,name=member_account_ids" json:"member_account_ids,omitempty"`
	TimeCreated      *uint32  `protobuf:"varint,3,opt,name=time_created" json:"time_created,omitempty"`
	Description      *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAGuildOpenPartyRefresh_OpenParty) Reset() {
	*m = CMsgDOTAGuildOpenPartyRefresh_OpenParty{}
}
func (m *CMsgDOTAGuildOpenPartyRefresh_OpenParty) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildOpenPartyRefresh_OpenParty) ProtoMessage()    {}

func (m *CMsgDOTAGuildOpenPartyRefresh_OpenParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgDOTAGuildOpenPartyRefresh_OpenParty) GetMemberAccountIds() []uint32 {
	if m != nil {
		return m.MemberAccountIds
	}
	return nil
}

func (m *CMsgDOTAGuildOpenPartyRefresh_OpenParty) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTAGuildOpenPartyRefresh_OpenParty) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CMsgDOTARequestGuildData struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTARequestGuildData) Reset()         { *m = CMsgDOTARequestGuildData{} }
func (m *CMsgDOTARequestGuildData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestGuildData) ProtoMessage()    {}

type CMsgDOTAGuildInviteData struct {
	InvitedToGuild   *bool   `protobuf:"varint,1,opt,name=invited_to_guild" json:"invited_to_guild,omitempty"`
	GuildId          *uint32 `protobuf:"varint,2,opt,name=guild_id" json:"guild_id,omitempty"`
	GuildName        *string `protobuf:"bytes,3,opt,name=guild_name" json:"guild_name,omitempty"`
	GuildTag         *string `protobuf:"bytes,4,opt,name=guild_tag" json:"guild_tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,5,opt,name=logo" json:"logo,omitempty"`
	Inviter          *uint32 `protobuf:"varint,6,opt,name=inviter" json:"inviter,omitempty"`
	InviterName      *string `protobuf:"bytes,7,opt,name=inviter_name" json:"inviter_name,omitempty"`
	MemberCount      *uint32 `protobuf:"varint,8,opt,name=member_count" json:"member_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildInviteData) Reset()         { *m = CMsgDOTAGuildInviteData{} }
func (m *CMsgDOTAGuildInviteData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildInviteData) ProtoMessage()    {}

func (m *CMsgDOTAGuildInviteData) GetInvitedToGuild() bool {
	if m != nil && m.InvitedToGuild != nil {
		return *m.InvitedToGuild
	}
	return false
}

func (m *CMsgDOTAGuildInviteData) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildInviteData) GetGuildName() string {
	if m != nil && m.GuildName != nil {
		return *m.GuildName
	}
	return ""
}

func (m *CMsgDOTAGuildInviteData) GetGuildTag() string {
	if m != nil && m.GuildTag != nil {
		return *m.GuildTag
	}
	return ""
}

func (m *CMsgDOTAGuildInviteData) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAGuildInviteData) GetInviter() uint32 {
	if m != nil && m.Inviter != nil {
		return *m.Inviter
	}
	return 0
}

func (m *CMsgDOTAGuildInviteData) GetInviterName() string {
	if m != nil && m.InviterName != nil {
		return *m.InviterName
	}
	return ""
}

func (m *CMsgDOTAGuildInviteData) GetMemberCount() uint32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

type CMsgDOTAGuildUpdateMessage struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	GuildId          *uint32 `protobuf:"varint,2,opt,name=guild_id" json:"guild_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildUpdateMessage) Reset()         { *m = CMsgDOTAGuildUpdateMessage{} }
func (m *CMsgDOTAGuildUpdateMessage) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildUpdateMessage) ProtoMessage()    {}

func (m *CMsgDOTAGuildUpdateMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgDOTAGuildUpdateMessage) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

type CMsgDOTAGuildEditLogoRequest struct {
	GuildId          *uint32 `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Logo             *uint64 `protobuf:"varint,2,opt,name=logo" json:"logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGuildEditLogoRequest) Reset()         { *m = CMsgDOTAGuildEditLogoRequest{} }
func (m *CMsgDOTAGuildEditLogoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildEditLogoRequest) ProtoMessage()    {}

func (m *CMsgDOTAGuildEditLogoRequest) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildEditLogoRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

type CMsgDOTAGuildEditLogoResponse struct {
	GuildId          *uint32                                `protobuf:"varint,1,opt,name=guild_id" json:"guild_id,omitempty"`
	Result           *CMsgDOTAGuildEditLogoResponse_EResult `protobuf:"varint,2,opt,name=result,enum=CMsgDOTAGuildEditLogoResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgDOTAGuildEditLogoResponse) Reset()         { *m = CMsgDOTAGuildEditLogoResponse{} }
func (m *CMsgDOTAGuildEditLogoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGuildEditLogoResponse) ProtoMessage()    {}

const Default_CMsgDOTAGuildEditLogoResponse_Result CMsgDOTAGuildEditLogoResponse_EResult = CMsgDOTAGuildEditLogoResponse_SUCCESS

func (m *CMsgDOTAGuildEditLogoResponse) GetGuildId() uint32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

func (m *CMsgDOTAGuildEditLogoResponse) GetResult() CMsgDOTAGuildEditLogoResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAGuildEditLogoResponse_Result
}

type CMsgDOTAReportsRemainingRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAReportsRemainingRequest) Reset()         { *m = CMsgDOTAReportsRemainingRequest{} }
func (m *CMsgDOTAReportsRemainingRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAReportsRemainingRequest) ProtoMessage()    {}

type CMsgDOTAReportsRemainingResponse struct {
	NumPositiveReportsRemaining *uint32 `protobuf:"varint,1,opt,name=num_positive_reports_remaining" json:"num_positive_reports_remaining,omitempty"`
	NumNegativeReportsRemaining *uint32 `protobuf:"varint,2,opt,name=num_negative_reports_remaining" json:"num_negative_reports_remaining,omitempty"`
	NumPositiveReportsTotal     *uint32 `protobuf:"varint,3,opt,name=num_positive_reports_total" json:"num_positive_reports_total,omitempty"`
	NumNegativeReportsTotal     *uint32 `protobuf:"varint,4,opt,name=num_negative_reports_total" json:"num_negative_reports_total,omitempty"`
	XXX_unrecognized            []byte  `json:"-"`
}

func (m *CMsgDOTAReportsRemainingResponse) Reset()         { *m = CMsgDOTAReportsRemainingResponse{} }
func (m *CMsgDOTAReportsRemainingResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAReportsRemainingResponse) ProtoMessage()    {}

func (m *CMsgDOTAReportsRemainingResponse) GetNumPositiveReportsRemaining() uint32 {
	if m != nil && m.NumPositiveReportsRemaining != nil {
		return *m.NumPositiveReportsRemaining
	}
	return 0
}

func (m *CMsgDOTAReportsRemainingResponse) GetNumNegativeReportsRemaining() uint32 {
	if m != nil && m.NumNegativeReportsRemaining != nil {
		return *m.NumNegativeReportsRemaining
	}
	return 0
}

func (m *CMsgDOTAReportsRemainingResponse) GetNumPositiveReportsTotal() uint32 {
	if m != nil && m.NumPositiveReportsTotal != nil {
		return *m.NumPositiveReportsTotal
	}
	return 0
}

func (m *CMsgDOTAReportsRemainingResponse) GetNumNegativeReportsTotal() uint32 {
	if m != nil && m.NumNegativeReportsTotal != nil {
		return *m.NumNegativeReportsTotal
	}
	return 0
}

type CMsgDOTASubmitPlayerReport struct {
	TargetAccountId  *uint32 `protobuf:"varint,1,opt,name=target_account_id" json:"target_account_id,omitempty"`
	ReportFlags      *uint32 `protobuf:"varint,2,opt,name=report_flags" json:"report_flags,omitempty"`
	Comment          *string `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTASubmitPlayerReport) Reset()         { *m = CMsgDOTASubmitPlayerReport{} }
func (m *CMsgDOTASubmitPlayerReport) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASubmitPlayerReport) ProtoMessage()    {}

func (m *CMsgDOTASubmitPlayerReport) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

func (m *CMsgDOTASubmitPlayerReport) GetReportFlags() uint32 {
	if m != nil && m.ReportFlags != nil {
		return *m.ReportFlags
	}
	return 0
}

func (m *CMsgDOTASubmitPlayerReport) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

type CMsgDOTASubmitPlayerReportResponse struct {
	TargetAccountId  *uint32 `protobuf:"varint,1,opt,name=target_account_id" json:"target_account_id,omitempty"`
	ReportFlags      *uint32 `protobuf:"varint,2,opt,name=report_flags" json:"report_flags,omitempty"`
	Result           *uint32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTASubmitPlayerReportResponse) Reset()         { *m = CMsgDOTASubmitPlayerReportResponse{} }
func (m *CMsgDOTASubmitPlayerReportResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASubmitPlayerReportResponse) ProtoMessage()    {}

func (m *CMsgDOTASubmitPlayerReportResponse) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

func (m *CMsgDOTASubmitPlayerReportResponse) GetReportFlags() uint32 {
	if m != nil && m.ReportFlags != nil {
		return *m.ReportFlags
	}
	return 0
}

func (m *CMsgDOTASubmitPlayerReportResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgDOTAReportCountsRequest struct {
	TargetAccountId  *uint32 `protobuf:"varint,1,opt,name=target_account_id" json:"target_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAReportCountsRequest) Reset()         { *m = CMsgDOTAReportCountsRequest{} }
func (m *CMsgDOTAReportCountsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAReportCountsRequest) ProtoMessage()    {}

func (m *CMsgDOTAReportCountsRequest) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

type CMsgDOTAReportCountsResponse struct {
	TargetAccountId  *uint32 `protobuf:"varint,1,opt,name=target_account_id" json:"target_account_id,omitempty"`
	LeadershipCount  *uint32 `protobuf:"varint,2,opt,name=leadership_count" json:"leadership_count,omitempty"`
	TeachingCount    *uint32 `protobuf:"varint,3,opt,name=teaching_count" json:"teaching_count,omitempty"`
	FriendlyCount    *uint32 `protobuf:"varint,4,opt,name=friendly_count" json:"friendly_count,omitempty"`
	ForgivingCount   *uint32 `protobuf:"varint,5,opt,name=forgiving_count" json:"forgiving_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAReportCountsResponse) Reset()         { *m = CMsgDOTAReportCountsResponse{} }
func (m *CMsgDOTAReportCountsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAReportCountsResponse) ProtoMessage()    {}

func (m *CMsgDOTAReportCountsResponse) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

func (m *CMsgDOTAReportCountsResponse) GetLeadershipCount() uint32 {
	if m != nil && m.LeadershipCount != nil {
		return *m.LeadershipCount
	}
	return 0
}

func (m *CMsgDOTAReportCountsResponse) GetTeachingCount() uint32 {
	if m != nil && m.TeachingCount != nil {
		return *m.TeachingCount
	}
	return 0
}

func (m *CMsgDOTAReportCountsResponse) GetFriendlyCount() uint32 {
	if m != nil && m.FriendlyCount != nil {
		return *m.FriendlyCount
	}
	return 0
}

func (m *CMsgDOTAReportCountsResponse) GetForgivingCount() uint32 {
	if m != nil && m.ForgivingCount != nil {
		return *m.ForgivingCount
	}
	return 0
}

type CMsgDOTAKickedFromMatchmakingQueue struct {
	MatchType        *MatchType `protobuf:"varint,1,opt,name=match_type,enum=MatchType,def=0" json:"match_type,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgDOTAKickedFromMatchmakingQueue) Reset()         { *m = CMsgDOTAKickedFromMatchmakingQueue{} }
func (m *CMsgDOTAKickedFromMatchmakingQueue) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAKickedFromMatchmakingQueue) ProtoMessage()    {}

const Default_CMsgDOTAKickedFromMatchmakingQueue_MatchType MatchType = MatchType_MATCH_TYPE_CASUAL

func (m *CMsgDOTAKickedFromMatchmakingQueue) GetMatchType() MatchType {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return Default_CMsgDOTAKickedFromMatchmakingQueue_MatchType
}

type CMsgDOTARequestSaveGames struct {
	ServerRegion     *uint32 `protobuf:"varint,1,opt,name=server_region" json:"server_region,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARequestSaveGames) Reset()         { *m = CMsgDOTARequestSaveGames{} }
func (m *CMsgDOTARequestSaveGames) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestSaveGames) ProtoMessage()    {}

func (m *CMsgDOTARequestSaveGames) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

type CMsgDOTARequestSaveGamesResponse struct {
	SteamId          *uint64                                 `protobuf:"fixed64,1,opt,name=steam_id" json:"steam_id,omitempty"`
	SaveGames        []*CDOTASaveGame `protobuf:"bytes,2,rep,name=save_games" json:"save_games,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgDOTARequestSaveGamesResponse) Reset()         { *m = CMsgDOTARequestSaveGamesResponse{} }
func (m *CMsgDOTARequestSaveGamesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestSaveGamesResponse) ProtoMessage()    {}

func (m *CMsgDOTARequestSaveGamesResponse) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTARequestSaveGamesResponse) GetSaveGames() []*CDOTASaveGame {
	if m != nil {
		return m.SaveGames
	}
	return nil
}

type CMsgWatchGame struct {
	ServerSteamid      *uint64 `protobuf:"fixed64,1,opt,name=server_steamid" json:"server_steamid,omitempty"`
	ClientVersion      *uint32 `protobuf:"varint,2,opt,name=client_version" json:"client_version,omitempty"`
	WatchServerSteamid *uint64 `protobuf:"fixed64,3,opt,name=watch_server_steamid" json:"watch_server_steamid,omitempty"`
	LobbyId            *uint64 `protobuf:"varint,4,opt,name=lobby_id" json:"lobby_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgWatchGame) Reset()         { *m = CMsgWatchGame{} }
func (m *CMsgWatchGame) String() string { return proto.CompactTextString(m) }
func (*CMsgWatchGame) ProtoMessage()    {}

func (m *CMsgWatchGame) GetServerSteamid() uint64 {
	if m != nil && m.ServerSteamid != nil {
		return *m.ServerSteamid
	}
	return 0
}

func (m *CMsgWatchGame) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgWatchGame) GetWatchServerSteamid() uint64 {
	if m != nil && m.WatchServerSteamid != nil {
		return *m.WatchServerSteamid
	}
	return 0
}

func (m *CMsgWatchGame) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

type CMsgCancelWatchGame struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgCancelWatchGame) Reset()         { *m = CMsgCancelWatchGame{} }
func (m *CMsgCancelWatchGame) String() string { return proto.CompactTextString(m) }
func (*CMsgCancelWatchGame) ProtoMessage()    {}

type CMsgWatchGameResponse struct {
	WatchGameResult         *CMsgWatchGameResponse_WatchGameResult `protobuf:"varint,1,opt,name=watch_game_result,enum=CMsgWatchGameResponse_WatchGameResult,def=0" json:"watch_game_result,omitempty"`
	SourceTvPublicAddr      *uint32                                `protobuf:"varint,2,opt,name=source_tv_public_addr" json:"source_tv_public_addr,omitempty"`
	SourceTvPrivateAddr     *uint32                                `protobuf:"varint,3,opt,name=source_tv_private_addr" json:"source_tv_private_addr,omitempty"`
	SourceTvPort            *uint32                                `protobuf:"varint,4,opt,name=source_tv_port" json:"source_tv_port,omitempty"`
	GameServerSteamid       *uint64                                `protobuf:"fixed64,5,opt,name=game_server_steamid" json:"game_server_steamid,omitempty"`
	WatchServerSteamid      *uint64                                `protobuf:"fixed64,6,opt,name=watch_server_steamid" json:"watch_server_steamid,omitempty"`
	WatchTvUniqueSecretCode *uint64                                `protobuf:"fixed64,7,opt,name=watch_tv_unique_secret_code" json:"watch_tv_unique_secret_code,omitempty"`
	XXX_unrecognized        []byte                                 `json:"-"`
}

func (m *CMsgWatchGameResponse) Reset()         { *m = CMsgWatchGameResponse{} }
func (m *CMsgWatchGameResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgWatchGameResponse) ProtoMessage()    {}

const Default_CMsgWatchGameResponse_WatchGameResult CMsgWatchGameResponse_WatchGameResult = CMsgWatchGameResponse_PENDING

func (m *CMsgWatchGameResponse) GetWatchGameResult() CMsgWatchGameResponse_WatchGameResult {
	if m != nil && m.WatchGameResult != nil {
		return *m.WatchGameResult
	}
	return Default_CMsgWatchGameResponse_WatchGameResult
}

func (m *CMsgWatchGameResponse) GetSourceTvPublicAddr() uint32 {
	if m != nil && m.SourceTvPublicAddr != nil {
		return *m.SourceTvPublicAddr
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetSourceTvPrivateAddr() uint32 {
	if m != nil && m.SourceTvPrivateAddr != nil {
		return *m.SourceTvPrivateAddr
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetSourceTvPort() uint32 {
	if m != nil && m.SourceTvPort != nil {
		return *m.SourceTvPort
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetGameServerSteamid() uint64 {
	if m != nil && m.GameServerSteamid != nil {
		return *m.GameServerSteamid
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetWatchServerSteamid() uint64 {
	if m != nil && m.WatchServerSteamid != nil {
		return *m.WatchServerSteamid
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetWatchTvUniqueSecretCode() uint64 {
	if m != nil && m.WatchTvUniqueSecretCode != nil {
		return *m.WatchTvUniqueSecretCode
	}
	return 0
}

type CMsgPartyLeaderWatchGamePrompt struct {
	GameServerSteamid *uint64 `protobuf:"fixed64,5,opt,name=game_server_steamid" json:"game_server_steamid,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgPartyLeaderWatchGamePrompt) Reset()         { *m = CMsgPartyLeaderWatchGamePrompt{} }
func (m *CMsgPartyLeaderWatchGamePrompt) String() string { return proto.CompactTextString(m) }
func (*CMsgPartyLeaderWatchGamePrompt) ProtoMessage()    {}

func (m *CMsgPartyLeaderWatchGamePrompt) GetGameServerSteamid() uint64 {
	if m != nil && m.GameServerSteamid != nil {
		return *m.GameServerSteamid
	}
	return 0
}

type CMsgGCMatchDetailsRequest struct {
	MatchId          *uint32 `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCMatchDetailsRequest) Reset()         { *m = CMsgGCMatchDetailsRequest{} }
func (m *CMsgGCMatchDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCMatchDetailsRequest) ProtoMessage()    {}

func (m *CMsgGCMatchDetailsRequest) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgGCMatchDetailsResponse struct {
	Result           *uint32                               `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Match            *CMsgDOTAMatch                        `protobuf:"bytes,2,opt,name=match" json:"match,omitempty"`
	Vote             *DOTAMatchVote `protobuf:"varint,3,opt,name=vote,enum=DOTAMatchVote,def=0" json:"vote,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgGCMatchDetailsResponse) Reset()         { *m = CMsgGCMatchDetailsResponse{} }
func (m *CMsgGCMatchDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCMatchDetailsResponse) ProtoMessage()    {}

const Default_CMsgGCMatchDetailsResponse_Vote DOTAMatchVote = DOTAMatchVote_DOTAMatchVote_INVALID

func (m *CMsgGCMatchDetailsResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgGCMatchDetailsResponse) GetMatch() *CMsgDOTAMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *CMsgGCMatchDetailsResponse) GetVote() DOTAMatchVote {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return Default_CMsgGCMatchDetailsResponse_Vote
}

type CMsgDOTAProfileRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	RequestName      *bool   `protobuf:"varint,2,opt,name=request_name" json:"request_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProfileRequest) Reset()         { *m = CMsgDOTAProfileRequest{} }
func (m *CMsgDOTAProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileRequest) ProtoMessage()    {}

func (m *CMsgDOTAProfileRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAProfileRequest) GetRequestName() bool {
	if m != nil && m.RequestName != nil {
		return *m.RequestName
	}
	return false
}

type CMsgDOTAProfileResponse struct {
	Result            *uint32                                          `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	GameAccountClient *CSODOTAGameAccountClient `protobuf:"bytes,2,opt,name=game_account_client" json:"game_account_client,omitempty"`
	LatestMatches     []*CMsgDOTAMatch                                 `protobuf:"bytes,3,rep,name=latest_matches" json:"latest_matches,omitempty"`
	Heroes            []*CMsgDOTAProfileResponse_PlayedHero            `protobuf:"bytes,4,rep,name=heroes" json:"heroes,omitempty"`
	PlayerName        *string                                          `protobuf:"bytes,5,opt,name=player_name" json:"player_name,omitempty"`
	TeamName          *string                                          `protobuf:"bytes,6,opt,name=team_name" json:"team_name,omitempty"`
	TeamTag           *string                                          `protobuf:"bytes,7,opt,name=team_tag" json:"team_tag,omitempty"`
	TeamLogo          *uint64                                          `protobuf:"varint,8,opt,name=team_logo" json:"team_logo,omitempty"`
	ShowcaseHero      *CMsgDOTAProfileResponse_ShowcaseHero            `protobuf:"bytes,9,opt,name=showcase_hero" json:"showcase_hero,omitempty"`
	LeaguePasses      []*CMsgDOTAProfileResponse_LeaguePass            `protobuf:"bytes,10,rep,name=league_passes" json:"league_passes,omitempty"`
	EventTickets      []*CMsgDOTAProfileResponse_EventTicket           `protobuf:"bytes,11,rep,name=event_tickets" json:"event_tickets,omitempty"`
	TeamId            *uint32                                          `protobuf:"varint,12,opt,name=team_id" json:"team_id,omitempty"`
	HasPassport       *bool                                            `protobuf:"varint,13,opt,name=has_passport" json:"has_passport,omitempty"`
	FeaturedItems     []*CMsgDOTAProfileResponse_FeaturedItem          `protobuf:"bytes,14,rep,name=featured_items" json:"featured_items,omitempty"`
	AbandonPercent    *uint32                                          `protobuf:"varint,15,opt,name=abandon_percent" json:"abandon_percent,omitempty"`
	XXX_unrecognized  []byte                                           `json:"-"`
}

func (m *CMsgDOTAProfileResponse) Reset()         { *m = CMsgDOTAProfileResponse{} }
func (m *CMsgDOTAProfileResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileResponse) ProtoMessage()    {}

func (m *CMsgDOTAProfileResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgDOTAProfileResponse) GetGameAccountClient() *CSODOTAGameAccountClient {
	if m != nil {
		return m.GameAccountClient
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetLatestMatches() []*CMsgDOTAMatch {
	if m != nil {
		return m.LatestMatches
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetHeroes() []*CMsgDOTAProfileResponse_PlayedHero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAProfileResponse) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAProfileResponse) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgDOTAProfileResponse) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTAProfileResponse) GetShowcaseHero() *CMsgDOTAProfileResponse_ShowcaseHero {
	if m != nil {
		return m.ShowcaseHero
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetLeaguePasses() []*CMsgDOTAProfileResponse_LeaguePass {
	if m != nil {
		return m.LeaguePasses
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetEventTickets() []*CMsgDOTAProfileResponse_EventTicket {
	if m != nil {
		return m.EventTickets
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAProfileResponse) GetHasPassport() bool {
	if m != nil && m.HasPassport != nil {
		return *m.HasPassport
	}
	return false
}

func (m *CMsgDOTAProfileResponse) GetFeaturedItems() []*CMsgDOTAProfileResponse_FeaturedItem {
	if m != nil {
		return m.FeaturedItems
	}
	return nil
}

func (m *CMsgDOTAProfileResponse) GetAbandonPercent() uint32 {
	if m != nil && m.AbandonPercent != nil {
		return *m.AbandonPercent
	}
	return 0
}

type CMsgDOTAProfileResponse_PlayedHero struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	Wins             *uint32 `protobuf:"varint,2,opt,name=wins" json:"wins,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProfileResponse_PlayedHero) Reset()         { *m = CMsgDOTAProfileResponse_PlayedHero{} }
func (m *CMsgDOTAProfileResponse_PlayedHero) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileResponse_PlayedHero) ProtoMessage()    {}

func (m *CMsgDOTAProfileResponse_PlayedHero) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAProfileResponse_PlayedHero) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

type CMsgDOTAProfileResponse_ShowcaseHero struct {
	HeroId           *uint32  `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	ObjectData       [][]byte `protobuf:"bytes,2,rep,name=object_data" json:"object_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAProfileResponse_ShowcaseHero) Reset()         { *m = CMsgDOTAProfileResponse_ShowcaseHero{} }
func (m *CMsgDOTAProfileResponse_ShowcaseHero) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileResponse_ShowcaseHero) ProtoMessage()    {}

func (m *CMsgDOTAProfileResponse_ShowcaseHero) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAProfileResponse_ShowcaseHero) GetObjectData() [][]byte {
	if m != nil {
		return m.ObjectData
	}
	return nil
}

type CMsgDOTAProfileResponse_LeaguePass struct {
	LeagueId         *uint32 `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	ItemDef          *uint32 `protobuf:"varint,2,opt,name=item_def" json:"item_def,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProfileResponse_LeaguePass) Reset()         { *m = CMsgDOTAProfileResponse_LeaguePass{} }
func (m *CMsgDOTAProfileResponse_LeaguePass) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileResponse_LeaguePass) ProtoMessage()    {}

func (m *CMsgDOTAProfileResponse_LeaguePass) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAProfileResponse_LeaguePass) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

type CMsgDOTAProfileResponse_EventTicket struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProfileResponse_EventTicket) Reset()         { *m = CMsgDOTAProfileResponse_EventTicket{} }
func (m *CMsgDOTAProfileResponse_EventTicket) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileResponse_EventTicket) ProtoMessage()    {}

func (m *CMsgDOTAProfileResponse_EventTicket) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

type CMsgDOTAProfileResponse_FeaturedItem struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	ObjectData       []byte  `protobuf:"bytes,2,opt,name=object_data" json:"object_data,omitempty"`
	SlotIndex        *uint32 `protobuf:"varint,3,opt,name=slot_index" json:"slot_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProfileResponse_FeaturedItem) Reset()         { *m = CMsgDOTAProfileResponse_FeaturedItem{} }
func (m *CMsgDOTAProfileResponse_FeaturedItem) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileResponse_FeaturedItem) ProtoMessage()    {}

func (m *CMsgDOTAProfileResponse_FeaturedItem) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgDOTAProfileResponse_FeaturedItem) GetObjectData() []byte {
	if m != nil {
		return m.ObjectData
	}
	return nil
}

func (m *CMsgDOTAProfileResponse_FeaturedItem) GetSlotIndex() uint32 {
	if m != nil && m.SlotIndex != nil {
		return *m.SlotIndex
	}
	return 0
}

type CMsgGCSteamProfileRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCSteamProfileRequest) Reset()         { *m = CMsgGCSteamProfileRequest{} }
func (m *CMsgGCSteamProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCSteamProfileRequest) ProtoMessage()    {}

func (m *CMsgGCSteamProfileRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGCSteamProfileRequestResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCSteamProfileRequestResponse) Reset()         { *m = CMsgGCSteamProfileRequestResponse{} }
func (m *CMsgGCSteamProfileRequestResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCSteamProfileRequestResponse) ProtoMessage()    {}

func (m *CMsgGCSteamProfileRequestResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgDOTAClearNotifySuccessfulReport struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAClearNotifySuccessfulReport) Reset()         { *m = CMsgDOTAClearNotifySuccessfulReport{} }
func (m *CMsgDOTAClearNotifySuccessfulReport) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAClearNotifySuccessfulReport) ProtoMessage()    {}

type CMsgDOTAWelcome struct {
	TournamentAdmin             *bool                                `protobuf:"varint,3,opt,name=tournament_admin" json:"tournament_admin,omitempty"`
	TournamentBroadcaster       *bool                                `protobuf:"varint,4,opt,name=tournament_broadcaster" json:"tournament_broadcaster,omitempty"`
	StoreItemHash               *uint32                              `protobuf:"varint,5,opt,name=store_item_hash" json:"store_item_hash,omitempty"`
	Timeplayedconsecutively     *uint32                              `protobuf:"varint,6,opt,name=timeplayedconsecutively" json:"timeplayedconsecutively,omitempty"`
	Allow_3RdPartyMatchHistory  *bool                                `protobuf:"varint,7,opt,name=allow_3rd_party_match_history" json:"allow_3rd_party_match_history,omitempty"`
	PartnerAccountType          *PartnerAccountType `protobuf:"varint,8,opt,name=partner_account_type,enum=PartnerAccountType,def=0" json:"partner_account_type,omitempty"`
	BannedWordListWordId        *uint32                              `protobuf:"varint,9,opt,name=banned_word_list_word_id" json:"banned_word_list_word_id,omitempty"`
	PartnerAccountState         *uint32                              `protobuf:"varint,11,opt,name=partner_account_state" json:"partner_account_state,omitempty"`
	LastTimePlayed              *uint32                              `protobuf:"varint,12,opt,name=last_time_played" json:"last_time_played,omitempty"`
	LastIpAddress               *uint32                              `protobuf:"varint,13,opt,name=last_ip_address" json:"last_ip_address,omitempty"`
	Shutdownlawterminateminutes *uint32                              `protobuf:"varint,15,opt,name=shutdownlawterminateminutes" json:"shutdownlawterminateminutes,omitempty"`
	BannedWordListVersion       *uint32                              `protobuf:"varint,16,opt,name=banned_word_list_version" json:"banned_word_list_version,omitempty"`
	ProfilePrivate              *bool                                `protobuf:"varint,17,opt,name=profile_private" json:"profile_private,omitempty"`
	Currency                    *uint32                              `protobuf:"varint,18,opt,name=currency" json:"currency,omitempty"`
	BangNo                      *uint32                              `protobuf:"varint,19,opt,name=bang_no" json:"bang_no,omitempty"`
	ShouldRequestPlayerOrigin   *bool                                `protobuf:"varint,20,opt,name=should_request_player_origin" json:"should_request_player_origin,omitempty"`
	CompendiumUnlocks           *uint64                              `protobuf:"varint,21,opt,name=compendium_unlocks" json:"compendium_unlocks,omitempty"`
	GcSocacheFileVersion        *uint32                              `protobuf:"varint,22,opt,name=gc_socache_file_version" json:"gc_socache_file_version,omitempty"`
	XXX_unrecognized            []byte                               `json:"-"`
}

func (m *CMsgDOTAWelcome) Reset()         { *m = CMsgDOTAWelcome{} }
func (m *CMsgDOTAWelcome) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAWelcome) ProtoMessage()    {}

const Default_CMsgDOTAWelcome_PartnerAccountType PartnerAccountType = PartnerAccountType_PARTNER_NONE

func (m *CMsgDOTAWelcome) GetTournamentAdmin() bool {
	if m != nil && m.TournamentAdmin != nil {
		return *m.TournamentAdmin
	}
	return false
}

func (m *CMsgDOTAWelcome) GetTournamentBroadcaster() bool {
	if m != nil && m.TournamentBroadcaster != nil {
		return *m.TournamentBroadcaster
	}
	return false
}

func (m *CMsgDOTAWelcome) GetStoreItemHash() uint32 {
	if m != nil && m.StoreItemHash != nil {
		return *m.StoreItemHash
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetTimeplayedconsecutively() uint32 {
	if m != nil && m.Timeplayedconsecutively != nil {
		return *m.Timeplayedconsecutively
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetAllow_3RdPartyMatchHistory() bool {
	if m != nil && m.Allow_3RdPartyMatchHistory != nil {
		return *m.Allow_3RdPartyMatchHistory
	}
	return false
}

func (m *CMsgDOTAWelcome) GetPartnerAccountType() PartnerAccountType {
	if m != nil && m.PartnerAccountType != nil {
		return *m.PartnerAccountType
	}
	return Default_CMsgDOTAWelcome_PartnerAccountType
}

func (m *CMsgDOTAWelcome) GetBannedWordListWordId() uint32 {
	if m != nil && m.BannedWordListWordId != nil {
		return *m.BannedWordListWordId
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetPartnerAccountState() uint32 {
	if m != nil && m.PartnerAccountState != nil {
		return *m.PartnerAccountState
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetLastTimePlayed() uint32 {
	if m != nil && m.LastTimePlayed != nil {
		return *m.LastTimePlayed
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetLastIpAddress() uint32 {
	if m != nil && m.LastIpAddress != nil {
		return *m.LastIpAddress
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetShutdownlawterminateminutes() uint32 {
	if m != nil && m.Shutdownlawterminateminutes != nil {
		return *m.Shutdownlawterminateminutes
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetBannedWordListVersion() uint32 {
	if m != nil && m.BannedWordListVersion != nil {
		return *m.BannedWordListVersion
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetProfilePrivate() bool {
	if m != nil && m.ProfilePrivate != nil {
		return *m.ProfilePrivate
	}
	return false
}

func (m *CMsgDOTAWelcome) GetCurrency() uint32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetBangNo() uint32 {
	if m != nil && m.BangNo != nil {
		return *m.BangNo
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetShouldRequestPlayerOrigin() bool {
	if m != nil && m.ShouldRequestPlayerOrigin != nil {
		return *m.ShouldRequestPlayerOrigin
	}
	return false
}

func (m *CMsgDOTAWelcome) GetCompendiumUnlocks() uint64 {
	if m != nil && m.CompendiumUnlocks != nil {
		return *m.CompendiumUnlocks
	}
	return 0
}

func (m *CMsgDOTAWelcome) GetGcSocacheFileVersion() uint32 {
	if m != nil && m.GcSocacheFileVersion != nil {
		return *m.GcSocacheFileVersion
	}
	return 0
}

type CSODOTAGameHeroFavorites struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	HeroId           *uint32 `protobuf:"varint,2,opt,name=hero_id" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSODOTAGameHeroFavorites) Reset()         { *m = CSODOTAGameHeroFavorites{} }
func (m *CSODOTAGameHeroFavorites) String() string { return proto.CompactTextString(m) }
func (*CSODOTAGameHeroFavorites) ProtoMessage()    {}

func (m *CSODOTAGameHeroFavorites) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODOTAGameHeroFavorites) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgDOTAHeroFavoritesAdd struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAHeroFavoritesAdd) Reset()         { *m = CMsgDOTAHeroFavoritesAdd{} }
func (m *CMsgDOTAHeroFavoritesAdd) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHeroFavoritesAdd) ProtoMessage()    {}

func (m *CMsgDOTAHeroFavoritesAdd) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgDOTAHeroFavoritesRemove struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAHeroFavoritesRemove) Reset()         { *m = CMsgDOTAHeroFavoritesRemove{} }
func (m *CMsgDOTAHeroFavoritesRemove) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHeroFavoritesRemove) ProtoMessage()    {}

func (m *CMsgDOTAHeroFavoritesRemove) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgSetShowcaseHero struct {
	ShowcaseHeroId   *uint32 `protobuf:"varint,1,opt,name=showcase_hero_id" json:"showcase_hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSetShowcaseHero) Reset()         { *m = CMsgSetShowcaseHero{} }
func (m *CMsgSetShowcaseHero) String() string { return proto.CompactTextString(m) }
func (*CMsgSetShowcaseHero) ProtoMessage()    {}

func (m *CMsgSetShowcaseHero) GetShowcaseHeroId() uint32 {
	if m != nil && m.ShowcaseHeroId != nil {
		return *m.ShowcaseHeroId
	}
	return 0
}

type CMsgSetFeaturedItems struct {
	FeaturedItemId   []uint64 `protobuf:"varint,1,rep,name=featured_item_id" json:"featured_item_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSetFeaturedItems) Reset()         { *m = CMsgSetFeaturedItems{} }
func (m *CMsgSetFeaturedItems) String() string { return proto.CompactTextString(m) }
func (*CMsgSetFeaturedItems) ProtoMessage()    {}

func (m *CMsgSetFeaturedItems) GetFeaturedItemId() []uint64 {
	if m != nil {
		return m.FeaturedItemId
	}
	return nil
}

type CMsgDOTAFeaturedItems struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	FeaturedItemId   []uint64 `protobuf:"varint,2,rep,name=featured_item_id" json:"featured_item_id,omitempty"`
	ObjectData       [][]byte `protobuf:"bytes,3,rep,name=object_data" json:"object_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFeaturedItems) Reset()         { *m = CMsgDOTAFeaturedItems{} }
func (m *CMsgDOTAFeaturedItems) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFeaturedItems) ProtoMessage()    {}

func (m *CMsgDOTAFeaturedItems) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFeaturedItems) GetFeaturedItemId() []uint64 {
	if m != nil {
		return m.FeaturedItemId
	}
	return nil
}

func (m *CMsgDOTAFeaturedItems) GetObjectData() [][]byte {
	if m != nil {
		return m.ObjectData
	}
	return nil
}

type CMsgRequestLeagueInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgRequestLeagueInfo) Reset()         { *m = CMsgRequestLeagueInfo{} }
func (m *CMsgRequestLeagueInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestLeagueInfo) ProtoMessage()    {}

type CLeague struct {
	Leagueid           *uint32 `protobuf:"varint,1,opt,name=leagueid" json:"leagueid,omitempty"`
	Live               *bool   `protobuf:"varint,2,opt,name=live" json:"live,omitempty"`
	Lastgametime       *uint32 `protobuf:"fixed32,4,opt,name=lastgametime" json:"lastgametime,omitempty"`
	PrizePoolUsd       *uint32 `protobuf:"varint,5,opt,name=prize_pool_usd" json:"prize_pool_usd,omitempty"`
	Version            *uint32 `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
	CompendiumIsPublic *bool   `protobuf:"varint,7,opt,name=compendium_is_public" json:"compendium_is_public,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CLeague) Reset()         { *m = CLeague{} }
func (m *CLeague) String() string { return proto.CompactTextString(m) }
func (*CLeague) ProtoMessage()    {}

func (m *CLeague) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CLeague) GetLive() bool {
	if m != nil && m.Live != nil {
		return *m.Live
	}
	return false
}

func (m *CLeague) GetLastgametime() uint32 {
	if m != nil && m.Lastgametime != nil {
		return *m.Lastgametime
	}
	return 0
}

func (m *CLeague) GetPrizePoolUsd() uint32 {
	if m != nil && m.PrizePoolUsd != nil {
		return *m.PrizePoolUsd
	}
	return 0
}

func (m *CLeague) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CLeague) GetCompendiumIsPublic() bool {
	if m != nil && m.CompendiumIsPublic != nil {
		return *m.CompendiumIsPublic
	}
	return false
}

type CMsgResponseLeagueInfo struct {
	Leagues          []*CLeague `protobuf:"bytes,1,rep,name=leagues" json:"leagues,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CMsgResponseLeagueInfo) Reset()         { *m = CMsgResponseLeagueInfo{} }
func (m *CMsgResponseLeagueInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgResponseLeagueInfo) ProtoMessage()    {}

func (m *CMsgResponseLeagueInfo) GetLeagues() []*CLeague {
	if m != nil {
		return m.Leagues
	}
	return nil
}

type CMsgDOTAMatchVotes struct {
	MatchId          *uint32                          `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	Votes            []*CMsgDOTAMatchVotes_PlayerVote `protobuf:"bytes,2,rep,name=votes" json:"votes,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *CMsgDOTAMatchVotes) Reset()         { *m = CMsgDOTAMatchVotes{} }
func (m *CMsgDOTAMatchVotes) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchVotes) ProtoMessage()    {}

func (m *CMsgDOTAMatchVotes) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAMatchVotes) GetVotes() []*CMsgDOTAMatchVotes_PlayerVote {
	if m != nil {
		return m.Votes
	}
	return nil
}

type CMsgDOTAMatchVotes_PlayerVote struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Vote             *uint32 `protobuf:"varint,2,opt,name=vote" json:"vote,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAMatchVotes_PlayerVote) Reset()         { *m = CMsgDOTAMatchVotes_PlayerVote{} }
func (m *CMsgDOTAMatchVotes_PlayerVote) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchVotes_PlayerVote) ProtoMessage()    {}

func (m *CMsgDOTAMatchVotes_PlayerVote) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatchVotes_PlayerVote) GetVote() uint32 {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return 0
}

type CMsgCastMatchVote struct {
	MatchId          *uint32                               `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	Vote             *DOTAMatchVote `protobuf:"varint,2,opt,name=vote,enum=DOTAMatchVote,def=0" json:"vote,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgCastMatchVote) Reset()         { *m = CMsgCastMatchVote{} }
func (m *CMsgCastMatchVote) String() string { return proto.CompactTextString(m) }
func (*CMsgCastMatchVote) ProtoMessage()    {}

const Default_CMsgCastMatchVote_Vote DOTAMatchVote = DOTAMatchVote_DOTAMatchVote_INVALID

func (m *CMsgCastMatchVote) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgCastMatchVote) GetVote() DOTAMatchVote {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return Default_CMsgCastMatchVote_Vote
}

type CMsgRetrieveMatchVote struct {
	MatchId          *uint32 `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	Incremental      *uint32 `protobuf:"varint,2,opt,name=incremental" json:"incremental,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRetrieveMatchVote) Reset()         { *m = CMsgRetrieveMatchVote{} }
func (m *CMsgRetrieveMatchVote) String() string { return proto.CompactTextString(m) }
func (*CMsgRetrieveMatchVote) ProtoMessage()    {}

func (m *CMsgRetrieveMatchVote) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgRetrieveMatchVote) GetIncremental() uint32 {
	if m != nil && m.Incremental != nil {
		return *m.Incremental
	}
	return 0
}

type CMsgMatchVoteResponse struct {
	Eresult          *uint32                               `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Vote             *DOTAMatchVote `protobuf:"varint,2,opt,name=vote,enum=DOTAMatchVote,def=0" json:"vote,omitempty"`
	PositiveVotes    *uint32                               `protobuf:"varint,3,opt,name=positive_votes" json:"positive_votes,omitempty"`
	NegativeVotes    *uint32                               `protobuf:"varint,4,opt,name=negative_votes" json:"negative_votes,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgMatchVoteResponse) Reset()         { *m = CMsgMatchVoteResponse{} }
func (m *CMsgMatchVoteResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchVoteResponse) ProtoMessage()    {}

const Default_CMsgMatchVoteResponse_Eresult uint32 = 2
const Default_CMsgMatchVoteResponse_Vote DOTAMatchVote = DOTAMatchVote_DOTAMatchVote_INVALID

func (m *CMsgMatchVoteResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgMatchVoteResponse_Eresult
}

func (m *CMsgMatchVoteResponse) GetVote() DOTAMatchVote {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return Default_CMsgMatchVoteResponse_Vote
}

func (m *CMsgMatchVoteResponse) GetPositiveVotes() uint32 {
	if m != nil && m.PositiveVotes != nil {
		return *m.PositiveVotes
	}
	return 0
}

func (m *CMsgMatchVoteResponse) GetNegativeVotes() uint32 {
	if m != nil && m.NegativeVotes != nil {
		return *m.NegativeVotes
	}
	return 0
}

type CMsgDOTAHallOfFame struct {
	Week             *uint32                              `protobuf:"varint,1,opt,name=week" json:"week,omitempty"`
	FeaturedPlayers  []*CMsgDOTAHallOfFame_FeaturedPlayer `protobuf:"bytes,2,rep,name=featured_players" json:"featured_players,omitempty"`
	FeaturedFarmer   *CMsgDOTAHallOfFame_FeaturedFarmer   `protobuf:"bytes,3,opt,name=featured_farmer" json:"featured_farmer,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgDOTAHallOfFame) Reset()         { *m = CMsgDOTAHallOfFame{} }
func (m *CMsgDOTAHallOfFame) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHallOfFame) ProtoMessage()    {}

func (m *CMsgDOTAHallOfFame) GetWeek() uint32 {
	if m != nil && m.Week != nil {
		return *m.Week
	}
	return 0
}

func (m *CMsgDOTAHallOfFame) GetFeaturedPlayers() []*CMsgDOTAHallOfFame_FeaturedPlayer {
	if m != nil {
		return m.FeaturedPlayers
	}
	return nil
}

func (m *CMsgDOTAHallOfFame) GetFeaturedFarmer() *CMsgDOTAHallOfFame_FeaturedFarmer {
	if m != nil {
		return m.FeaturedFarmer
	}
	return nil
}

type CMsgDOTAHallOfFame_FeaturedPlayer struct {
	AccountId           *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	HeroId              *uint32  `protobuf:"varint,2,opt,name=hero_id" json:"hero_id,omitempty"`
	AverageScaledMetric *float32 `protobuf:"fixed32,3,opt,name=average_scaled_metric" json:"average_scaled_metric,omitempty"`
	NumGames            *uint32  `protobuf:"varint,4,opt,name=num_games" json:"num_games,omitempty"`
	XXX_unrecognized    []byte   `json:"-"`
}

func (m *CMsgDOTAHallOfFame_FeaturedPlayer) Reset()         { *m = CMsgDOTAHallOfFame_FeaturedPlayer{} }
func (m *CMsgDOTAHallOfFame_FeaturedPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHallOfFame_FeaturedPlayer) ProtoMessage()    {}

func (m *CMsgDOTAHallOfFame_FeaturedPlayer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAHallOfFame_FeaturedPlayer) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAHallOfFame_FeaturedPlayer) GetAverageScaledMetric() float32 {
	if m != nil && m.AverageScaledMetric != nil {
		return *m.AverageScaledMetric
	}
	return 0
}

func (m *CMsgDOTAHallOfFame_FeaturedPlayer) GetNumGames() uint32 {
	if m != nil && m.NumGames != nil {
		return *m.NumGames
	}
	return 0
}

type CMsgDOTAHallOfFame_FeaturedFarmer struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	HeroId           *uint32 `protobuf:"varint,2,opt,name=hero_id" json:"hero_id,omitempty"`
	GoldPerMin       *uint32 `protobuf:"varint,3,opt,name=gold_per_min" json:"gold_per_min,omitempty"`
	MatchId          *uint32 `protobuf:"varint,4,opt,name=match_id" json:"match_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAHallOfFame_FeaturedFarmer) Reset()         { *m = CMsgDOTAHallOfFame_FeaturedFarmer{} }
func (m *CMsgDOTAHallOfFame_FeaturedFarmer) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHallOfFame_FeaturedFarmer) ProtoMessage()    {}

func (m *CMsgDOTAHallOfFame_FeaturedFarmer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAHallOfFame_FeaturedFarmer) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAHallOfFame_FeaturedFarmer) GetGoldPerMin() uint32 {
	if m != nil && m.GoldPerMin != nil {
		return *m.GoldPerMin
	}
	return 0
}

func (m *CMsgDOTAHallOfFame_FeaturedFarmer) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgDOTAHallOfFameRequest struct {
	Week             *uint32 `protobuf:"varint,1,opt,name=week" json:"week,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAHallOfFameRequest) Reset()         { *m = CMsgDOTAHallOfFameRequest{} }
func (m *CMsgDOTAHallOfFameRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHallOfFameRequest) ProtoMessage()    {}

func (m *CMsgDOTAHallOfFameRequest) GetWeek() uint32 {
	if m != nil && m.Week != nil {
		return *m.Week
	}
	return 0
}

type CMsgDOTAHallOfFameResponse struct {
	HallOfFame       *CMsgDOTAHallOfFame `protobuf:"bytes,1,opt,name=hall_of_fame" json:"hall_of_fame,omitempty"`
	Eresult          *uint32             `protobuf:"varint,2,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMsgDOTAHallOfFameResponse) Reset()         { *m = CMsgDOTAHallOfFameResponse{} }
func (m *CMsgDOTAHallOfFameResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHallOfFameResponse) ProtoMessage()    {}

const Default_CMsgDOTAHallOfFameResponse_Eresult uint32 = 2

func (m *CMsgDOTAHallOfFameResponse) GetHallOfFame() *CMsgDOTAHallOfFame {
	if m != nil {
		return m.HallOfFame
	}
	return nil
}

func (m *CMsgDOTAHallOfFameResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgDOTAHallOfFameResponse_Eresult
}

type CMsgDOTAHalloweenHighScoreRequest struct {
	Round            *int32 `protobuf:"varint,1,opt,name=round,def=-1" json:"round,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAHalloweenHighScoreRequest) Reset()         { *m = CMsgDOTAHalloweenHighScoreRequest{} }
func (m *CMsgDOTAHalloweenHighScoreRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHalloweenHighScoreRequest) ProtoMessage()    {}

const Default_CMsgDOTAHalloweenHighScoreRequest_Round int32 = -1

func (m *CMsgDOTAHalloweenHighScoreRequest) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return Default_CMsgDOTAHalloweenHighScoreRequest_Round
}

type CMsgDOTAHalloweenHighScoreResponse struct {
	Score            *uint32        `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Match            *CMsgDOTAMatch `protobuf:"bytes,2,opt,name=match" json:"match,omitempty"`
	Eresult          *uint32        `protobuf:"varint,3,opt,name=eresult" json:"eresult,omitempty"`
	Round            *int32         `protobuf:"varint,4,opt,name=round" json:"round,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgDOTAHalloweenHighScoreResponse) Reset()         { *m = CMsgDOTAHalloweenHighScoreResponse{} }
func (m *CMsgDOTAHalloweenHighScoreResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHalloweenHighScoreResponse) ProtoMessage()    {}

func (m *CMsgDOTAHalloweenHighScoreResponse) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTAHalloweenHighScoreResponse) GetMatch() *CMsgDOTAMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *CMsgDOTAHalloweenHighScoreResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

func (m *CMsgDOTAHalloweenHighScoreResponse) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

type CMsgDOTAStorePromoPagesRequest struct {
	VersionSeen      *uint32 `protobuf:"varint,1,opt,name=version_seen" json:"version_seen,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAStorePromoPagesRequest) Reset()         { *m = CMsgDOTAStorePromoPagesRequest{} }
func (m *CMsgDOTAStorePromoPagesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAStorePromoPagesRequest) ProtoMessage()    {}

func (m *CMsgDOTAStorePromoPagesRequest) GetVersionSeen() uint32 {
	if m != nil && m.VersionSeen != nil {
		return *m.VersionSeen
	}
	return 0
}

type CMsgDOTAStorePromoPagesResponse struct {
	Pages            []*CMsgDOTAStorePromoPagesResponse_PromoPage `protobuf:"bytes,1,rep,name=pages" json:"pages,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgDOTAStorePromoPagesResponse) Reset()         { *m = CMsgDOTAStorePromoPagesResponse{} }
func (m *CMsgDOTAStorePromoPagesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAStorePromoPagesResponse) ProtoMessage()    {}

func (m *CMsgDOTAStorePromoPagesResponse) GetPages() []*CMsgDOTAStorePromoPagesResponse_PromoPage {
	if m != nil {
		return m.Pages
	}
	return nil
}

type CMsgDOTAStorePromoPagesResponse_PromoPage struct {
	PromoId          *uint32 `protobuf:"varint,1,opt,name=promo_id" json:"promo_id,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Url              *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAStorePromoPagesResponse_PromoPage) Reset() {
	*m = CMsgDOTAStorePromoPagesResponse_PromoPage{}
}
func (m *CMsgDOTAStorePromoPagesResponse_PromoPage) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAStorePromoPagesResponse_PromoPage) ProtoMessage()    {}

func (m *CMsgDOTAStorePromoPagesResponse_PromoPage) GetPromoId() uint32 {
	if m != nil && m.PromoId != nil {
		return *m.PromoId
	}
	return 0
}

func (m *CMsgDOTAStorePromoPagesResponse_PromoPage) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CMsgDOTAStorePromoPagesResponse_PromoPage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CMsgLeagueScheduleBlockTeamInfo struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgLeagueScheduleBlockTeamInfo) Reset()         { *m = CMsgLeagueScheduleBlockTeamInfo{} }
func (m *CMsgLeagueScheduleBlockTeamInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgLeagueScheduleBlockTeamInfo) ProtoMessage()    {}

func (m *CMsgLeagueScheduleBlockTeamInfo) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgLeagueScheduleBlockTeamInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgLeagueScheduleBlockTeamInfo) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

type CMsgLeagueScheduleBlock struct {
	BlockId          *uint32                            `protobuf:"varint,1,opt,name=block_id" json:"block_id,omitempty"`
	StartTime        *uint32                            `protobuf:"varint,2,opt,name=start_time" json:"start_time,omitempty"`
	Finals           *bool                              `protobuf:"varint,4,opt,name=finals" json:"finals,omitempty"`
	Comment          *string                            `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	Teams            []*CMsgLeagueScheduleBlockTeamInfo `protobuf:"bytes,6,rep,name=teams" json:"teams,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CMsgLeagueScheduleBlock) Reset()         { *m = CMsgLeagueScheduleBlock{} }
func (m *CMsgLeagueScheduleBlock) String() string { return proto.CompactTextString(m) }
func (*CMsgLeagueScheduleBlock) ProtoMessage()    {}

func (m *CMsgLeagueScheduleBlock) GetBlockId() uint32 {
	if m != nil && m.BlockId != nil {
		return *m.BlockId
	}
	return 0
}

func (m *CMsgLeagueScheduleBlock) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgLeagueScheduleBlock) GetFinals() bool {
	if m != nil && m.Finals != nil {
		return *m.Finals
	}
	return false
}

func (m *CMsgLeagueScheduleBlock) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *CMsgLeagueScheduleBlock) GetTeams() []*CMsgLeagueScheduleBlockTeamInfo {
	if m != nil {
		return m.Teams
	}
	return nil
}

type CMsgDOTALeague struct {
	LeagueId         *uint32                    `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	Schedule         []*CMsgLeagueScheduleBlock `protobuf:"bytes,2,rep,name=schedule" json:"schedule,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgDOTALeague) Reset()         { *m = CMsgDOTALeague{} }
func (m *CMsgDOTALeague) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeague) ProtoMessage()    {}

func (m *CMsgDOTALeague) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTALeague) GetSchedule() []*CMsgLeagueScheduleBlock {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type CMsgDOTALeagueScheduleRequest struct {
	LeagueId         *uint32 `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALeagueScheduleRequest) Reset()         { *m = CMsgDOTALeagueScheduleRequest{} }
func (m *CMsgDOTALeagueScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeagueScheduleRequest) ProtoMessage()    {}

func (m *CMsgDOTALeagueScheduleRequest) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

type CMsgDOTALeagueScheduleResponse struct {
	League           *CMsgDOTALeague `protobuf:"bytes,1,opt,name=league" json:"league,omitempty"`
	Eresult          *uint32         `protobuf:"varint,2,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CMsgDOTALeagueScheduleResponse) Reset()         { *m = CMsgDOTALeagueScheduleResponse{} }
func (m *CMsgDOTALeagueScheduleResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeagueScheduleResponse) ProtoMessage()    {}

const Default_CMsgDOTALeagueScheduleResponse_Eresult uint32 = 2

func (m *CMsgDOTALeagueScheduleResponse) GetLeague() *CMsgDOTALeague {
	if m != nil {
		return m.League
	}
	return nil
}

func (m *CMsgDOTALeagueScheduleResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgDOTALeagueScheduleResponse_Eresult
}

type CMsgDOTALeagueScheduleEdit struct {
	LeagueId         *uint32                  `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	Schedule         *CMsgLeagueScheduleBlock `protobuf:"bytes,2,opt,name=schedule" json:"schedule,omitempty"`
	DeleteBlock      *bool                    `protobuf:"varint,3,opt,name=delete_block" json:"delete_block,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CMsgDOTALeagueScheduleEdit) Reset()         { *m = CMsgDOTALeagueScheduleEdit{} }
func (m *CMsgDOTALeagueScheduleEdit) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeagueScheduleEdit) ProtoMessage()    {}

func (m *CMsgDOTALeagueScheduleEdit) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTALeagueScheduleEdit) GetSchedule() *CMsgLeagueScheduleBlock {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *CMsgDOTALeagueScheduleEdit) GetDeleteBlock() bool {
	if m != nil && m.DeleteBlock != nil {
		return *m.DeleteBlock
	}
	return false
}

type CMsgDOTALeagueScheduleEditResponse struct {
	League           *CMsgDOTALeague `protobuf:"bytes,1,opt,name=league" json:"league,omitempty"`
	Eresult          *uint32         `protobuf:"varint,2,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CMsgDOTALeagueScheduleEditResponse) Reset()         { *m = CMsgDOTALeagueScheduleEditResponse{} }
func (m *CMsgDOTALeagueScheduleEditResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeagueScheduleEditResponse) ProtoMessage()    {}

const Default_CMsgDOTALeagueScheduleEditResponse_Eresult uint32 = 2

func (m *CMsgDOTALeagueScheduleEditResponse) GetLeague() *CMsgDOTALeague {
	if m != nil {
		return m.League
	}
	return nil
}

func (m *CMsgDOTALeagueScheduleEditResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgDOTALeagueScheduleEditResponse_Eresult
}

type CMsgDOTALeaguesInMonthRequest struct {
	Month            *uint32 `protobuf:"varint,1,opt,name=month" json:"month,omitempty"`
	Year             *uint32 `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Tier             *uint32 `protobuf:"varint,3,opt,name=tier" json:"tier,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALeaguesInMonthRequest) Reset()         { *m = CMsgDOTALeaguesInMonthRequest{} }
func (m *CMsgDOTALeaguesInMonthRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeaguesInMonthRequest) ProtoMessage()    {}

func (m *CMsgDOTALeaguesInMonthRequest) GetMonth() uint32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *CMsgDOTALeaguesInMonthRequest) GetYear() uint32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *CMsgDOTALeaguesInMonthRequest) GetTier() uint32 {
	if m != nil && m.Tier != nil {
		return *m.Tier
	}
	return 0
}

type CMsgDOTALeaguesInMonthResponse struct {
	Eresult          *uint32           `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Month            *uint32           `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Year             *uint32           `protobuf:"varint,3,opt,name=year" json:"year,omitempty"`
	Leagues          []*CMsgDOTALeague `protobuf:"bytes,4,rep,name=leagues" json:"leagues,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgDOTALeaguesInMonthResponse) Reset()         { *m = CMsgDOTALeaguesInMonthResponse{} }
func (m *CMsgDOTALeaguesInMonthResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALeaguesInMonthResponse) ProtoMessage()    {}

const Default_CMsgDOTALeaguesInMonthResponse_Eresult uint32 = 2

func (m *CMsgDOTALeaguesInMonthResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgDOTALeaguesInMonthResponse_Eresult
}

func (m *CMsgDOTALeaguesInMonthResponse) GetMonth() uint32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *CMsgDOTALeaguesInMonthResponse) GetYear() uint32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *CMsgDOTALeaguesInMonthResponse) GetLeagues() []*CMsgDOTALeague {
	if m != nil {
		return m.Leagues
	}
	return nil
}

type CMsgSockAddrList struct {
	Ip               []uint32 `protobuf:"fixed32,1,rep,packed,name=ip" json:"ip,omitempty"`
	Port             []uint32 `protobuf:"varint,2,rep,packed,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSockAddrList) Reset()         { *m = CMsgSockAddrList{} }
func (m *CMsgSockAddrList) String() string { return proto.CompactTextString(m) }
func (*CMsgSockAddrList) ProtoMessage()    {}

func (m *CMsgSockAddrList) GetIp() []uint32 {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *CMsgSockAddrList) GetPort() []uint32 {
	if m != nil {
		return m.Port
	}
	return nil
}

type CMsgMatchmakingGroupServerSample struct {
	ServersByGroup    []*CMsgSockAddrList `protobuf:"bytes,1,rep,name=servers_by_group" json:"servers_by_group,omitempty"`
	ServersToPing     *uint32             `protobuf:"varint,2,opt,name=servers_to_ping" json:"servers_to_ping,omitempty"`
	ReplyOdds         *uint32             `protobuf:"varint,3,opt,name=reply_odds" json:"reply_odds,omitempty"`
	ReplyDetailedOdds *uint32             `protobuf:"varint,4,opt,name=reply_detailed_odds" json:"reply_detailed_odds,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *CMsgMatchmakingGroupServerSample) Reset()         { *m = CMsgMatchmakingGroupServerSample{} }
func (m *CMsgMatchmakingGroupServerSample) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchmakingGroupServerSample) ProtoMessage()    {}

func (m *CMsgMatchmakingGroupServerSample) GetServersByGroup() []*CMsgSockAddrList {
	if m != nil {
		return m.ServersByGroup
	}
	return nil
}

func (m *CMsgMatchmakingGroupServerSample) GetServersToPing() uint32 {
	if m != nil && m.ServersToPing != nil {
		return *m.ServersToPing
	}
	return 0
}

func (m *CMsgMatchmakingGroupServerSample) GetReplyOdds() uint32 {
	if m != nil && m.ReplyOdds != nil {
		return *m.ReplyOdds
	}
	return 0
}

func (m *CMsgMatchmakingGroupServerSample) GetReplyDetailedOdds() uint32 {
	if m != nil && m.ReplyDetailedOdds != nil {
		return *m.ReplyDetailedOdds
	}
	return 0
}

type CMsgClientGameserverPings struct {
	AveragePingByGroup []uint32                                `protobuf:"varint,1,rep,name=average_ping_by_group" json:"average_ping_by_group,omitempty"`
	PingDetails        []*CMsgClientGameserverPings_PingDetail `protobuf:"bytes,2,rep,name=ping_details" json:"ping_details,omitempty"`
	XXX_unrecognized   []byte                                  `json:"-"`
}

func (m *CMsgClientGameserverPings) Reset()         { *m = CMsgClientGameserverPings{} }
func (m *CMsgClientGameserverPings) String() string { return proto.CompactTextString(m) }
func (*CMsgClientGameserverPings) ProtoMessage()    {}

func (m *CMsgClientGameserverPings) GetAveragePingByGroup() []uint32 {
	if m != nil {
		return m.AveragePingByGroup
	}
	return nil
}

func (m *CMsgClientGameserverPings) GetPingDetails() []*CMsgClientGameserverPings_PingDetail {
	if m != nil {
		return m.PingDetails
	}
	return nil
}

type CMsgClientGameserverPings_PingDetail struct {
	Ip               *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
	Port             *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Ping             *uint32 `protobuf:"varint,3,opt,name=ping" json:"ping,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientGameserverPings_PingDetail) Reset()         { *m = CMsgClientGameserverPings_PingDetail{} }
func (m *CMsgClientGameserverPings_PingDetail) String() string { return proto.CompactTextString(m) }
func (*CMsgClientGameserverPings_PingDetail) ProtoMessage()    {}

func (m *CMsgClientGameserverPings_PingDetail) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *CMsgClientGameserverPings_PingDetail) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *CMsgClientGameserverPings_PingDetail) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

type CMsgDOTAMatchmakingStatsRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAMatchmakingStatsRequest) Reset()         { *m = CMsgDOTAMatchmakingStatsRequest{} }
func (m *CMsgDOTAMatchmakingStatsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchmakingStatsRequest) ProtoMessage()    {}

type CMsgDOTAMatchmakingStatsResponse struct {
	WaitTimesByGroup        []uint32                          `protobuf:"varint,1,rep,name=wait_times_by_group" json:"wait_times_by_group,omitempty"`
	SearchingPlayersByGroup []uint32                          `protobuf:"varint,2,rep,name=searching_players_by_group" json:"searching_players_by_group,omitempty"`
	DisabledGroups          *uint32                           `protobuf:"varint,3,opt,name=disabled_groups" json:"disabled_groups,omitempty"`
	GameserverSample        *CMsgMatchmakingGroupServerSample `protobuf:"bytes,4,opt,name=gameserver_sample" json:"gameserver_sample,omitempty"`
	MaintenanceAlerts       *bool                             `protobuf:"varint,5,opt,name=maintenance_alerts" json:"maintenance_alerts,omitempty"`
	XXX_unrecognized        []byte                            `json:"-"`
}

func (m *CMsgDOTAMatchmakingStatsResponse) Reset()         { *m = CMsgDOTAMatchmakingStatsResponse{} }
func (m *CMsgDOTAMatchmakingStatsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchmakingStatsResponse) ProtoMessage()    {}

func (m *CMsgDOTAMatchmakingStatsResponse) GetWaitTimesByGroup() []uint32 {
	if m != nil {
		return m.WaitTimesByGroup
	}
	return nil
}

func (m *CMsgDOTAMatchmakingStatsResponse) GetSearchingPlayersByGroup() []uint32 {
	if m != nil {
		return m.SearchingPlayersByGroup
	}
	return nil
}

func (m *CMsgDOTAMatchmakingStatsResponse) GetDisabledGroups() uint32 {
	if m != nil && m.DisabledGroups != nil {
		return *m.DisabledGroups
	}
	return 0
}

func (m *CMsgDOTAMatchmakingStatsResponse) GetGameserverSample() *CMsgMatchmakingGroupServerSample {
	if m != nil {
		return m.GameserverSample
	}
	return nil
}

func (m *CMsgDOTAMatchmakingStatsResponse) GetMaintenanceAlerts() bool {
	if m != nil && m.MaintenanceAlerts != nil {
		return *m.MaintenanceAlerts
	}
	return false
}

type CMsgDOTASetMatchHistoryAccess struct {
	Allow_3RdPartyMatchHistory *bool  `protobuf:"varint,1,opt,name=allow_3rd_party_match_history" json:"allow_3rd_party_match_history,omitempty"`
	XXX_unrecognized           []byte `json:"-"`
}

func (m *CMsgDOTASetMatchHistoryAccess) Reset()         { *m = CMsgDOTASetMatchHistoryAccess{} }
func (m *CMsgDOTASetMatchHistoryAccess) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASetMatchHistoryAccess) ProtoMessage()    {}

func (m *CMsgDOTASetMatchHistoryAccess) GetAllow_3RdPartyMatchHistory() bool {
	if m != nil && m.Allow_3RdPartyMatchHistory != nil {
		return *m.Allow_3RdPartyMatchHistory
	}
	return false
}

type CMsgDOTASetMatchHistoryAccessResponse struct {
	Eresult          *uint32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTASetMatchHistoryAccessResponse) Reset()         { *m = CMsgDOTASetMatchHistoryAccessResponse{} }
func (m *CMsgDOTASetMatchHistoryAccessResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASetMatchHistoryAccessResponse) ProtoMessage()    {}

const Default_CMsgDOTASetMatchHistoryAccessResponse_Eresult uint32 = 2

func (m *CMsgDOTASetMatchHistoryAccessResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgDOTASetMatchHistoryAccessResponse_Eresult
}

type CMsgDOTANotifyAccountFlagsChange struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	AccountFlags     *uint32 `protobuf:"varint,2,opt,name=account_flags" json:"account_flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTANotifyAccountFlagsChange) Reset()         { *m = CMsgDOTANotifyAccountFlagsChange{} }
func (m *CMsgDOTANotifyAccountFlagsChange) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTANotifyAccountFlagsChange) ProtoMessage()    {}

func (m *CMsgDOTANotifyAccountFlagsChange) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgDOTANotifyAccountFlagsChange) GetAccountFlags() uint32 {
	if m != nil && m.AccountFlags != nil {
		return *m.AccountFlags
	}
	return 0
}

type CMsgDOTASetProfilePrivacy struct {
	ProfilePrivate   *bool  `protobuf:"varint,1,opt,name=profile_private" json:"profile_private,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTASetProfilePrivacy) Reset()         { *m = CMsgDOTASetProfilePrivacy{} }
func (m *CMsgDOTASetProfilePrivacy) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASetProfilePrivacy) ProtoMessage()    {}

func (m *CMsgDOTASetProfilePrivacy) GetProfilePrivate() bool {
	if m != nil && m.ProfilePrivate != nil {
		return *m.ProfilePrivate
	}
	return false
}

type CMsgDOTASetProfilePrivacyResponse struct {
	Eresult          *uint32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTASetProfilePrivacyResponse) Reset()         { *m = CMsgDOTASetProfilePrivacyResponse{} }
func (m *CMsgDOTASetProfilePrivacyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASetProfilePrivacyResponse) ProtoMessage()    {}

func (m *CMsgDOTASetProfilePrivacyResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

type CMsgUpgradeLeagueItem struct {
	MatchId          *uint32 `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	LeagueId         *uint32 `protobuf:"varint,2,opt,name=league_id" json:"league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgUpgradeLeagueItem) Reset()         { *m = CMsgUpgradeLeagueItem{} }
func (m *CMsgUpgradeLeagueItem) String() string { return proto.CompactTextString(m) }
func (*CMsgUpgradeLeagueItem) ProtoMessage()    {}

func (m *CMsgUpgradeLeagueItem) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgUpgradeLeagueItem) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

type CMsgUpgradeLeagueItemResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgUpgradeLeagueItemResponse) Reset()         { *m = CMsgUpgradeLeagueItemResponse{} }
func (m *CMsgUpgradeLeagueItemResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgUpgradeLeagueItemResponse) ProtoMessage()    {}

type CMsgGCWatchDownloadedReplay struct {
	MatchId          *uint64               `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	WatchType        *DOTA_WatchReplayType `protobuf:"varint,2,opt,name=watch_type,enum=DOTA_WatchReplayType,def=0" json:"watch_type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgGCWatchDownloadedReplay) Reset()         { *m = CMsgGCWatchDownloadedReplay{} }
func (m *CMsgGCWatchDownloadedReplay) String() string { return proto.CompactTextString(m) }
func (*CMsgGCWatchDownloadedReplay) ProtoMessage()    {}

const Default_CMsgGCWatchDownloadedReplay_WatchType DOTA_WatchReplayType = DOTA_WatchReplayType_DOTA_WATCH_REPLAY_NORMAL

func (m *CMsgGCWatchDownloadedReplay) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCWatchDownloadedReplay) GetWatchType() DOTA_WatchReplayType {
	if m != nil && m.WatchType != nil {
		return *m.WatchType
	}
	return Default_CMsgGCWatchDownloadedReplay_WatchType
}

type CMsgSetMapLocationState struct {
	LocationId       *int32 `protobuf:"varint,1,opt,name=location_id" json:"location_id,omitempty"`
	Completed        *bool  `protobuf:"varint,2,opt,name=completed" json:"completed,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgSetMapLocationState) Reset()         { *m = CMsgSetMapLocationState{} }
func (m *CMsgSetMapLocationState) String() string { return proto.CompactTextString(m) }
func (*CMsgSetMapLocationState) ProtoMessage()    {}

func (m *CMsgSetMapLocationState) GetLocationId() int32 {
	if m != nil && m.LocationId != nil {
		return *m.LocationId
	}
	return 0
}

func (m *CMsgSetMapLocationState) GetCompleted() bool {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return false
}

type CMsgSetMapLocationStateResponse struct {
	Eresult          *uint32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSetMapLocationStateResponse) Reset()         { *m = CMsgSetMapLocationStateResponse{} }
func (m *CMsgSetMapLocationStateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgSetMapLocationStateResponse) ProtoMessage()    {}

const Default_CMsgSetMapLocationStateResponse_Eresult uint32 = 2

func (m *CMsgSetMapLocationStateResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgSetMapLocationStateResponse_Eresult
}

type CMsgResetMapLocations struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgResetMapLocations) Reset()         { *m = CMsgResetMapLocations{} }
func (m *CMsgResetMapLocations) String() string { return proto.CompactTextString(m) }
func (*CMsgResetMapLocations) ProtoMessage()    {}

type CMsgResetMapLocationsResponse struct {
	Eresult          *uint32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgResetMapLocationsResponse) Reset()         { *m = CMsgResetMapLocationsResponse{} }
func (m *CMsgResetMapLocationsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgResetMapLocationsResponse) ProtoMessage()    {}

const Default_CMsgResetMapLocationsResponse_Eresult uint32 = 2

func (m *CMsgResetMapLocationsResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgResetMapLocationsResponse_Eresult
}

type CMsgRefreshPartnerAccountLink struct {
	PartnerType      *int32 `protobuf:"varint,1,opt,name=partner_type" json:"partner_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgRefreshPartnerAccountLink) Reset()         { *m = CMsgRefreshPartnerAccountLink{} }
func (m *CMsgRefreshPartnerAccountLink) String() string { return proto.CompactTextString(m) }
func (*CMsgRefreshPartnerAccountLink) ProtoMessage()    {}

func (m *CMsgRefreshPartnerAccountLink) GetPartnerType() int32 {
	if m != nil && m.PartnerType != nil {
		return *m.PartnerType
	}
	return 0
}

type CMsgClientsRejoinChatChannels struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgClientsRejoinChatChannels) Reset()         { *m = CMsgClientsRejoinChatChannels{} }
func (m *CMsgClientsRejoinChatChannels) String() string { return proto.CompactTextString(m) }
func (*CMsgClientsRejoinChatChannels) ProtoMessage()    {}

type CMsgDOTACreateFantasyLeagueRequest struct {
	LeagueName       *string                                        `protobuf:"bytes,1,opt,name=league_name" json:"league_name,omitempty"`
	LeagueLogo       *uint64                                        `protobuf:"varint,2,opt,name=league_logo" json:"league_logo,omitempty"`
	SelectionMode    *Fantasy_Selection_Mode `protobuf:"varint,3,opt,name=selection_mode,enum=Fantasy_Selection_Mode,def=0" json:"selection_mode,omitempty"`
	TeamCount        *uint32                                        `protobuf:"varint,4,opt,name=team_count" json:"team_count,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTACreateFantasyLeagueRequest) Reset()         { *m = CMsgDOTACreateFantasyLeagueRequest{} }
func (m *CMsgDOTACreateFantasyLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACreateFantasyLeagueRequest) ProtoMessage()    {}

const Default_CMsgDOTACreateFantasyLeagueRequest_SelectionMode Fantasy_Selection_Mode = Fantasy_Selection_Mode_FANTASY_SELECTION_INVALID

func (m *CMsgDOTACreateFantasyLeagueRequest) GetLeagueName() string {
	if m != nil && m.LeagueName != nil {
		return *m.LeagueName
	}
	return ""
}

func (m *CMsgDOTACreateFantasyLeagueRequest) GetLeagueLogo() uint64 {
	if m != nil && m.LeagueLogo != nil {
		return *m.LeagueLogo
	}
	return 0
}

func (m *CMsgDOTACreateFantasyLeagueRequest) GetSelectionMode() Fantasy_Selection_Mode {
	if m != nil && m.SelectionMode != nil {
		return *m.SelectionMode
	}
	return Default_CMsgDOTACreateFantasyLeagueRequest_SelectionMode
}

func (m *CMsgDOTACreateFantasyLeagueRequest) GetTeamCount() uint32 {
	if m != nil && m.TeamCount != nil {
		return *m.TeamCount
	}
	return 0
}

type CMsgDOTACreateFantasyLeagueResponse struct {
	Result           *CMsgDOTACreateFantasyLeagueResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTACreateFantasyLeagueResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgDOTACreateFantasyLeagueResponse) Reset()         { *m = CMsgDOTACreateFantasyLeagueResponse{} }
func (m *CMsgDOTACreateFantasyLeagueResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACreateFantasyLeagueResponse) ProtoMessage()    {}

const Default_CMsgDOTACreateFantasyLeagueResponse_Result CMsgDOTACreateFantasyLeagueResponse_EResult = CMsgDOTACreateFantasyLeagueResponse_SUCCESS

func (m *CMsgDOTACreateFantasyLeagueResponse) GetResult() CMsgDOTACreateFantasyLeagueResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTACreateFantasyLeagueResponse_Result
}

type CMsgFantasyLeagueRoleScoring struct {
	Level            *float32 `protobuf:"fixed32,1,opt,name=level" json:"level,omitempty"`
	Kills            *float32 `protobuf:"fixed32,2,opt,name=kills" json:"kills,omitempty"`
	Deaths           *float32 `protobuf:"fixed32,3,opt,name=deaths" json:"deaths,omitempty"`
	Assists          *float32 `protobuf:"fixed32,4,opt,name=assists" json:"assists,omitempty"`
	LastHits         *float32 `protobuf:"fixed32,5,opt,name=last_hits" json:"last_hits,omitempty"`
	Denies           *float32 `protobuf:"fixed32,6,opt,name=denies" json:"denies,omitempty"`
	Gpm              *float32 `protobuf:"fixed32,7,opt,name=gpm" json:"gpm,omitempty"`
	Xppm             *float32 `protobuf:"fixed32,8,opt,name=xppm" json:"xppm,omitempty"`
	Stuns            *float32 `protobuf:"fixed32,9,opt,name=stuns" json:"stuns,omitempty"`
	Healing          *float32 `protobuf:"fixed32,10,opt,name=healing" json:"healing,omitempty"`
	TowerKills       *float32 `protobuf:"fixed32,11,opt,name=tower_kills" json:"tower_kills,omitempty"`
	RoshanKills      *float32 `protobuf:"fixed32,12,opt,name=roshan_kills" json:"roshan_kills,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgFantasyLeagueRoleScoring) Reset()         { *m = CMsgFantasyLeagueRoleScoring{} }
func (m *CMsgFantasyLeagueRoleScoring) String() string { return proto.CompactTextString(m) }
func (*CMsgFantasyLeagueRoleScoring) ProtoMessage()    {}

func (m *CMsgFantasyLeagueRoleScoring) GetLevel() float32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetKills() float32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetDeaths() float32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetAssists() float32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetLastHits() float32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetDenies() float32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetGpm() float32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetXppm() float32 {
	if m != nil && m.Xppm != nil {
		return *m.Xppm
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetStuns() float32 {
	if m != nil && m.Stuns != nil {
		return *m.Stuns
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetHealing() float32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetTowerKills() float32 {
	if m != nil && m.TowerKills != nil {
		return *m.TowerKills
	}
	return 0
}

func (m *CMsgFantasyLeagueRoleScoring) GetRoshanKills() float32 {
	if m != nil && m.RoshanKills != nil {
		return *m.RoshanKills
	}
	return 0
}

type CMsgDOTAFantasyLeagueInfo struct {
	FantasyLeagueId       *uint32                                        `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	CommissionerAccountId *uint32                                        `protobuf:"varint,2,opt,name=commissioner_account_id" json:"commissioner_account_id,omitempty"`
	FantasyLeagueName     *string                                        `protobuf:"bytes,3,opt,name=fantasy_league_name" json:"fantasy_league_name,omitempty"`
	SelectionMode         *Fantasy_Selection_Mode `protobuf:"varint,4,opt,name=selection_mode,enum=Fantasy_Selection_Mode,def=0" json:"selection_mode,omitempty"`
	TeamCount             *uint32                                        `protobuf:"varint,5,opt,name=team_count" json:"team_count,omitempty"`
	Logo                  *uint64                                        `protobuf:"varint,6,opt,name=logo" json:"logo,omitempty"`
	Scoring               *CMsgFantasyLeagueRoleScoring                  `protobuf:"bytes,7,opt,name=scoring" json:"scoring,omitempty"`
	DraftTime             *uint32                                        `protobuf:"varint,12,opt,name=draft_time" json:"draft_time,omitempty"`
	DraftPickTime         *uint32                                        `protobuf:"varint,13,opt,name=draft_pick_time" json:"draft_pick_time,omitempty"`
	SeasonStart           *uint32                                        `protobuf:"varint,15,opt,name=season_start" json:"season_start,omitempty"`
	SeasonLength          *uint32                                        `protobuf:"varint,16,opt,name=season_length" json:"season_length,omitempty"`
	VetoVotes             *uint32                                        `protobuf:"varint,17,opt,name=veto_votes" json:"veto_votes,omitempty"`
	Acquisitions          *uint32                                        `protobuf:"varint,18,opt,name=acquisitions" json:"acquisitions,omitempty"`
	Slot_1                *uint32                                        `protobuf:"varint,19,opt,name=slot_1" json:"slot_1,omitempty"`
	Slot_2                *uint32                                        `protobuf:"varint,20,opt,name=slot_2" json:"slot_2,omitempty"`
	Slot_3                *uint32                                        `protobuf:"varint,21,opt,name=slot_3" json:"slot_3,omitempty"`
	Slot_4                *uint32                                        `protobuf:"varint,22,opt,name=slot_4" json:"slot_4,omitempty"`
	Slot_5                *uint32                                        `protobuf:"varint,23,opt,name=slot_5" json:"slot_5,omitempty"`
	BenchSlots            *uint32                                        `protobuf:"varint,24,opt,name=bench_slots" json:"bench_slots,omitempty"`
	OwnerInfo             []*CMsgDOTAFantasyLeagueInfo_OwnerInfo         `protobuf:"bytes,25,rep,name=owner_info" json:"owner_info,omitempty"`
	Players               []uint32                                       `protobuf:"varint,26,rep,name=players" json:"players,omitempty"`
	TimeZone              *uint32                                        `protobuf:"varint,27,opt,name=time_zone" json:"time_zone,omitempty"`
	Season                *uint32                                        `protobuf:"varint,28,opt,name=season" json:"season,omitempty"`
	Password              *string                                        `protobuf:"bytes,29,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized      []byte                                         `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfo) Reset()         { *m = CMsgDOTAFantasyLeagueInfo{} }
func (m *CMsgDOTAFantasyLeagueInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfo) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueInfo_SelectionMode Fantasy_Selection_Mode = Fantasy_Selection_Mode_FANTASY_SELECTION_INVALID

func (m *CMsgDOTAFantasyLeagueInfo) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetCommissionerAccountId() uint32 {
	if m != nil && m.CommissionerAccountId != nil {
		return *m.CommissionerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetFantasyLeagueName() string {
	if m != nil && m.FantasyLeagueName != nil {
		return *m.FantasyLeagueName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSelectionMode() Fantasy_Selection_Mode {
	if m != nil && m.SelectionMode != nil {
		return *m.SelectionMode
	}
	return Default_CMsgDOTAFantasyLeagueInfo_SelectionMode
}

func (m *CMsgDOTAFantasyLeagueInfo) GetTeamCount() uint32 {
	if m != nil && m.TeamCount != nil {
		return *m.TeamCount
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetScoring() *CMsgFantasyLeagueRoleScoring {
	if m != nil {
		return m.Scoring
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueInfo) GetDraftTime() uint32 {
	if m != nil && m.DraftTime != nil {
		return *m.DraftTime
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetDraftPickTime() uint32 {
	if m != nil && m.DraftPickTime != nil {
		return *m.DraftPickTime
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSeasonStart() uint32 {
	if m != nil && m.SeasonStart != nil {
		return *m.SeasonStart
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSeasonLength() uint32 {
	if m != nil && m.SeasonLength != nil {
		return *m.SeasonLength
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetVetoVotes() uint32 {
	if m != nil && m.VetoVotes != nil {
		return *m.VetoVotes
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetAcquisitions() uint32 {
	if m != nil && m.Acquisitions != nil {
		return *m.Acquisitions
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_1() uint32 {
	if m != nil && m.Slot_1 != nil {
		return *m.Slot_1
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_2() uint32 {
	if m != nil && m.Slot_2 != nil {
		return *m.Slot_2
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_3() uint32 {
	if m != nil && m.Slot_3 != nil {
		return *m.Slot_3
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_4() uint32 {
	if m != nil && m.Slot_4 != nil {
		return *m.Slot_4
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_5() uint32 {
	if m != nil && m.Slot_5 != nil {
		return *m.Slot_5
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetBenchSlots() uint32 {
	if m != nil && m.BenchSlots != nil {
		return *m.BenchSlots
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetOwnerInfo() []*CMsgDOTAFantasyLeagueInfo_OwnerInfo {
	if m != nil {
		return m.OwnerInfo
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueInfo) GetPlayers() []uint32 {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueInfo) GetTimeZone() uint32 {
	if m != nil && m.TimeZone != nil {
		return *m.TimeZone
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSeason() uint32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type CMsgDOTAFantasyLeagueInfo_OwnerInfo struct {
	OwnerAccountId   *uint32  `protobuf:"varint,1,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	LeftLeague       *bool    `protobuf:"varint,2,opt,name=left_league" json:"left_league,omitempty"`
	PlayerAccountId  []uint32 `protobuf:"varint,3,rep,name=player_account_id" json:"player_account_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) Reset()         { *m = CMsgDOTAFantasyLeagueInfo_OwnerInfo{} }
func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfo_OwnerInfo) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) GetLeftLeague() bool {
	if m != nil && m.LeftLeague != nil {
		return *m.LeftLeague
	}
	return false
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) GetPlayerAccountId() []uint32 {
	if m != nil {
		return m.PlayerAccountId
	}
	return nil
}

type CMsgDOTAFantasyLeagueEditInfoRequest struct {
	FantasyLeagueId  *uint32                    `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	EditInfo         *CMsgDOTAFantasyLeagueInfo `protobuf:"bytes,2,opt,name=edit_info" json:"edit_info,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) Reset()         { *m = CMsgDOTAFantasyLeagueEditInfoRequest{} }
func (m *CMsgDOTAFantasyLeagueEditInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInfoRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) GetEditInfo() *CMsgDOTAFantasyLeagueInfo {
	if m != nil {
		return m.EditInfo
	}
	return nil
}

type CMsgDOTAFantasyLeagueEditInfoResponse struct {
	Result           *CMsgDOTAFantasyLeagueEditInfoResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueEditInfoResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInfoResponse) Reset()         { *m = CMsgDOTAFantasyLeagueEditInfoResponse{} }
func (m *CMsgDOTAFantasyLeagueEditInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInfoResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueEditInfoResponse_Result CMsgDOTAFantasyLeagueEditInfoResponse_EResult = CMsgDOTAFantasyLeagueEditInfoResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueEditInfoResponse) GetResult() CMsgDOTAFantasyLeagueEditInfoResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueEditInfoResponse_Result
}

type CMsgDOTAFantasyLeagueFindRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Password         *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueFindRequest) Reset()         { *m = CMsgDOTAFantasyLeagueFindRequest{} }
func (m *CMsgDOTAFantasyLeagueFindRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueFindRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueFindRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueFindRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type CMsgDOTAFantasyLeagueFindResponse struct {
	Result            *CMsgDOTAFantasyLeagueFindResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueFindResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueName *string                                    `protobuf:"bytes,2,opt,name=fantasy_league_name" json:"fantasy_league_name,omitempty"`
	CommissionerName  *string                                    `protobuf:"bytes,3,opt,name=commissioner_name" json:"commissioner_name,omitempty"`
	XXX_unrecognized  []byte                                     `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueFindResponse) Reset()         { *m = CMsgDOTAFantasyLeagueFindResponse{} }
func (m *CMsgDOTAFantasyLeagueFindResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueFindResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueFindResponse_Result CMsgDOTAFantasyLeagueFindResponse_EResult = CMsgDOTAFantasyLeagueFindResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueFindResponse) GetResult() CMsgDOTAFantasyLeagueFindResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueFindResponse_Result
}

func (m *CMsgDOTAFantasyLeagueFindResponse) GetFantasyLeagueName() string {
	if m != nil && m.FantasyLeagueName != nil {
		return *m.FantasyLeagueName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueFindResponse) GetCommissionerName() string {
	if m != nil && m.CommissionerName != nil {
		return *m.CommissionerName
	}
	return ""
}

type CMsgDOTAFantasyLeagueInfoRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfoRequest) Reset()         { *m = CMsgDOTAFantasyLeagueInfoRequest{} }
func (m *CMsgDOTAFantasyLeagueInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfoRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueInfoRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyLeagueInfoResponse struct {
	Result           *CMsgDOTAFantasyLeagueInfoResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueInfoResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfoResponse) Reset()         { *m = CMsgDOTAFantasyLeagueInfoResponse{} }
func (m *CMsgDOTAFantasyLeagueInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfoResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueInfoResponse_Result CMsgDOTAFantasyLeagueInfoResponse_EResult = CMsgDOTAFantasyLeagueInfoResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueInfoResponse) GetResult() CMsgDOTAFantasyLeagueInfoResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueInfoResponse_Result
}

type CMsgDOTAFantasyLeagueMatchupsRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsRequest) Reset()         { *m = CMsgDOTAFantasyLeagueMatchupsRequest{} }
func (m *CMsgDOTAFantasyLeagueMatchupsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueMatchupsRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueMatchupsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyLeagueMatchupsResponse struct {
	Result           *CMsgDOTAFantasyLeagueMatchupsResponse_EResult          `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueMatchupsResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId  *uint32                                                 `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	WeeklyMatchups   []*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups `protobuf:"bytes,3,rep,name=weekly_matchups" json:"weekly_matchups,omitempty"`
	XXX_unrecognized []byte                                                  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) Reset()         { *m = CMsgDOTAFantasyLeagueMatchupsResponse{} }
func (m *CMsgDOTAFantasyLeagueMatchupsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueMatchupsResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueMatchupsResponse_Result CMsgDOTAFantasyLeagueMatchupsResponse_EResult = CMsgDOTAFantasyLeagueMatchupsResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) GetResult() CMsgDOTAFantasyLeagueMatchupsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueMatchupsResponse_Result
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) GetWeeklyMatchups() []*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups {
	if m != nil {
		return m.WeeklyMatchups
	}
	return nil
}

type CMsgDOTAFantasyLeagueMatchupsResponse_Matchup struct {
	OwnerAccountId_1 *uint32  `protobuf:"varint,1,opt,name=owner_account_id_1" json:"owner_account_id_1,omitempty"`
	OwnerAccountId_2 *uint32  `protobuf:"varint,2,opt,name=owner_account_id_2" json:"owner_account_id_2,omitempty"`
	Score_1          *float32 `protobuf:"fixed32,3,opt,name=score_1" json:"score_1,omitempty"`
	Score_2          *float32 `protobuf:"fixed32,4,opt,name=score_2" json:"score_2,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) Reset() {
	*m = CMsgDOTAFantasyLeagueMatchupsResponse_Matchup{}
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) ProtoMessage() {}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetOwnerAccountId_1() uint32 {
	if m != nil && m.OwnerAccountId_1 != nil {
		return *m.OwnerAccountId_1
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetOwnerAccountId_2() uint32 {
	if m != nil && m.OwnerAccountId_2 != nil {
		return *m.OwnerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetScore_1() float32 {
	if m != nil && m.Score_1 != nil {
		return *m.Score_1
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetScore_2() float32 {
	if m != nil && m.Score_2 != nil {
		return *m.Score_2
	}
	return 0
}

type CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups struct {
	Matchup          []*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup `protobuf:"bytes,1,rep,name=matchup" json:"matchup,omitempty"`
	StartTime        *uint32                                          `protobuf:"varint,2,opt,name=start_time" json:"start_time,omitempty"`
	EndTime          *uint32                                          `protobuf:"varint,3,opt,name=end_time" json:"end_time,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) Reset() {
	*m = CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups{}
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) ProtoMessage() {}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) GetMatchup() []*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup {
	if m != nil {
		return m.Matchup
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type CMsgDOTAEditFantasyTeamRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex        *uint32 `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	TeamName         *string `protobuf:"bytes,3,opt,name=team_name" json:"team_name,omitempty"`
	TeamLogo         *uint64 `protobuf:"varint,4,opt,name=team_logo" json:"team_logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAEditFantasyTeamRequest) Reset()         { *m = CMsgDOTAEditFantasyTeamRequest{} }
func (m *CMsgDOTAEditFantasyTeamRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditFantasyTeamRequest) ProtoMessage()    {}

func (m *CMsgDOTAEditFantasyTeamRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAEditFantasyTeamRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAEditFantasyTeamRequest) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAEditFantasyTeamRequest) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

type CMsgDOTAEditFantasyTeamResponse struct {
	Result           *CMsgDOTAEditFantasyTeamResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAEditFantasyTeamResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgDOTAEditFantasyTeamResponse) Reset()         { *m = CMsgDOTAEditFantasyTeamResponse{} }
func (m *CMsgDOTAEditFantasyTeamResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditFantasyTeamResponse) ProtoMessage()    {}

const Default_CMsgDOTAEditFantasyTeamResponse_Result CMsgDOTAEditFantasyTeamResponse_EResult = CMsgDOTAEditFantasyTeamResponse_SUCCESS

func (m *CMsgDOTAEditFantasyTeamResponse) GetResult() CMsgDOTAEditFantasyTeamResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAEditFantasyTeamResponse_Result
}

type CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) Reset() {
	*m = CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID{}
}
func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) ProtoMessage() {}

func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID struct {
	OwnerAccountId   *uint32 `protobuf:"varint,1,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) Reset() {
	*m = CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID{}
}
func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) ProtoMessage() {}

func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

type CMsgDOTAFantasyTeamInfoResponse struct {
	Results          []*CMsgDOTAFantasyTeamInfo `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfoResponse) Reset()         { *m = CMsgDOTAFantasyTeamInfoResponse{} }
func (m *CMsgDOTAFantasyTeamInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamInfoResponse) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamInfoResponse) GetResults() []*CMsgDOTAFantasyTeamInfo {
	if m != nil {
		return m.Results
	}
	return nil
}

type CMsgDOTAFantasyTeamInfo struct {
	FantasyLeagueId  *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId   *uint32  `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	FantasyTeamIndex *uint32  `protobuf:"varint,3,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	TeamName         *string  `protobuf:"bytes,4,opt,name=team_name" json:"team_name,omitempty"`
	TeamLogo         *uint64  `protobuf:"varint,5,opt,name=team_logo" json:"team_logo,omitempty"`
	Wins             *uint32  `protobuf:"varint,6,opt,name=wins" json:"wins,omitempty"`
	Losses           *uint32  `protobuf:"varint,7,opt,name=losses" json:"losses,omitempty"`
	CurrentRoster    []uint32 `protobuf:"varint,8,rep,name=current_roster" json:"current_roster,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfo) Reset()         { *m = CMsgDOTAFantasyTeamInfo{} }
func (m *CMsgDOTAFantasyTeamInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamInfo) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamInfo) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamInfo) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetCurrentRoster() []uint32 {
	if m != nil {
		return m.CurrentRoster
	}
	return nil
}

type CMsgDOTAFantasyMatchFinished struct {
	MatchId          *uint32 `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	LeagueId         *uint32 `protobuf:"varint,2,opt,name=league_id" json:"league_id,omitempty"`
	SeriesId         *uint32 `protobuf:"varint,3,opt,name=series_id" json:"series_id,omitempty"`
	StartTime        *uint32 `protobuf:"varint,4,opt,name=start_time" json:"start_time,omitempty"`
	SeriesType       *uint32 `protobuf:"varint,5,opt,name=series_type" json:"series_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyMatchFinished) Reset()         { *m = CMsgDOTAFantasyMatchFinished{} }
func (m *CMsgDOTAFantasyMatchFinished) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMatchFinished) ProtoMessage()    {}

func (m *CMsgDOTAFantasyMatchFinished) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyMatchFinished) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyMatchFinished) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAFantasyMatchFinished) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyMatchFinished) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

type CMsgDOTAFantasyTeamScoreRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId   *uint32 `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	FantasyTeamIndex *uint32 `protobuf:"varint,3,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	FilterMatchId    *uint32 `protobuf:"varint,4,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterStartTime  *uint32 `protobuf:"varint,5,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime    *uint32 `protobuf:"varint,6,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	IncludeBench     *bool   `protobuf:"varint,7,opt,name=include_bench" json:"include_bench,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamScoreRequest) Reset()         { *m = CMsgDOTAFantasyTeamScoreRequest{} }
func (m *CMsgDOTAFantasyTeamScoreRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamScoreRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFilterMatchId() uint32 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetIncludeBench() bool {
	if m != nil && m.IncludeBench != nil {
		return *m.IncludeBench
	}
	return false
}

type CMsgDOTAFantasyTeamScoreResponse struct {
	Result             *CMsgDOTAFantasyTeamScoreResponse_EResult           `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamScoreResponse_EResult,def=0" json:"result,omitempty"`
	FantasyTeamScore   *float32                                            `protobuf:"fixed32,2,opt,name=fantasy_team_score" json:"fantasy_team_score,omitempty"`
	FantasyPlayerScore []*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore `protobuf:"bytes,3,rep,name=fantasy_player_score" json:"fantasy_player_score,omitempty"`
	XXX_unrecognized   []byte                                              `json:"-"`
}

func (m *CMsgDOTAFantasyTeamScoreResponse) Reset()         { *m = CMsgDOTAFantasyTeamScoreResponse{} }
func (m *CMsgDOTAFantasyTeamScoreResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamScoreResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamScoreResponse_Result CMsgDOTAFantasyTeamScoreResponse_EResult = CMsgDOTAFantasyTeamScoreResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamScoreResponse) GetResult() CMsgDOTAFantasyTeamScoreResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamScoreResponse_Result
}

func (m *CMsgDOTAFantasyTeamScoreResponse) GetFantasyTeamScore() float32 {
	if m != nil && m.FantasyTeamScore != nil {
		return *m.FantasyTeamScore
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreResponse) GetFantasyPlayerScore() []*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore {
	if m != nil {
		return m.FantasyPlayerScore
	}
	return nil
}

type CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Score            *float32 `protobuf:"fixed32,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) Reset() {
	*m = CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore{}
}
func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) ProtoMessage() {}

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyTeamStandingsRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Count            *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	FilterStartTime  *uint32 `protobuf:"varint,3,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime    *uint32 `protobuf:"varint,4,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	FilterMatchId    *uint32 `protobuf:"varint,5,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterLastMatch  *bool   `protobuf:"varint,6,opt,name=filter_last_match" json:"filter_last_match,omitempty"`
	FilterInHall     *bool   `protobuf:"varint,7,opt,name=filter_in_hall" json:"filter_in_hall,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) Reset()         { *m = CMsgDOTAFantasyTeamStandingsRequest{} }
func (m *CMsgDOTAFantasyTeamStandingsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamStandingsRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterMatchId() uint32 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterLastMatch() bool {
	if m != nil && m.FilterLastMatch != nil {
		return *m.FilterLastMatch
	}
	return false
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterInHall() bool {
	if m != nil && m.FilterInHall != nil {
		return *m.FilterInHall
	}
	return false
}

type CMsgDOTAFantasyTeamStandingsResponse struct {
	Result           *CMsgDOTAFantasyTeamStandingsResponse_EResult         `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamStandingsResponse_EResult,def=0" json:"result,omitempty"`
	TeamScores       []*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore `protobuf:"bytes,3,rep,name=team_scores" json:"team_scores,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *CMsgDOTAFantasyTeamStandingsResponse) Reset()         { *m = CMsgDOTAFantasyTeamStandingsResponse{} }
func (m *CMsgDOTAFantasyTeamStandingsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamStandingsResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamStandingsResponse_Result CMsgDOTAFantasyTeamStandingsResponse_EResult = CMsgDOTAFantasyTeamStandingsResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamStandingsResponse) GetResult() CMsgDOTAFantasyTeamStandingsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamStandingsResponse_Result
}

func (m *CMsgDOTAFantasyTeamStandingsResponse) GetTeamScores() []*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore {
	if m != nil {
		return m.TeamScores
	}
	return nil
}

type CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore struct {
	FantasyLeagueId  *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId   *uint32  `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	FantasyTeamIndex *uint32  `protobuf:"varint,3,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	FantasyTeamLogo  *uint64  `protobuf:"varint,4,opt,name=fantasy_team_logo" json:"fantasy_team_logo,omitempty"`
	OwnerName        *string  `protobuf:"bytes,5,opt,name=owner_name" json:"owner_name,omitempty"`
	FantasyTeamName  *string  `protobuf:"bytes,6,opt,name=fantasy_team_name" json:"fantasy_team_name,omitempty"`
	Score            *float32 `protobuf:"fixed32,7,opt,name=score" json:"score,omitempty"`
	ScoreAgainst     *float32 `protobuf:"fixed32,8,opt,name=score_against" json:"score_against,omitempty"`
	Wins             *uint32  `protobuf:"varint,9,opt,name=wins" json:"wins,omitempty"`
	Losses           *uint32  `protobuf:"varint,10,opt,name=losses" json:"losses,omitempty"`
	Streak           *int32   `protobuf:"varint,11,opt,name=streak" json:"streak,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) Reset() {
	*m = CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore{}
}
func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) ProtoMessage() {}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyTeamLogo() uint64 {
	if m != nil && m.FantasyTeamLogo != nil {
		return *m.FantasyTeamLogo
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyTeamName() string {
	if m != nil && m.FantasyTeamName != nil {
		return *m.FantasyTeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetScoreAgainst() float32 {
	if m != nil && m.ScoreAgainst != nil {
		return *m.ScoreAgainst
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetStreak() int32 {
	if m != nil && m.Streak != nil {
		return *m.Streak
	}
	return 0
}

type CMsgDOTAFantasyPlayerScoreRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	PlayerAccountId  *uint32 `protobuf:"varint,2,opt,name=player_account_id" json:"player_account_id,omitempty"`
	FilterStartTime  *uint32 `protobuf:"varint,3,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime    *uint32 `protobuf:"varint,4,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	FilterMatchId    *uint32 `protobuf:"varint,5,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterLastMatch  *bool   `protobuf:"varint,6,opt,name=filter_last_match" json:"filter_last_match,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) Reset()         { *m = CMsgDOTAFantasyPlayerScoreRequest{} }
func (m *CMsgDOTAFantasyPlayerScoreRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterMatchId() uint32 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterLastMatch() bool {
	if m != nil && m.FilterLastMatch != nil {
		return *m.FilterLastMatch
	}
	return false
}

type CMsgDOTAFantasyPlayerScoreResponse struct {
	Result           *CMsgDOTAFantasyPlayerScoreResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerScoreResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId  *uint32                                     `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	PlayerAccountId  *uint32                                     `protobuf:"varint,3,opt,name=player_account_id" json:"player_account_id,omitempty"`
	PlayerName       *string                                     `protobuf:"bytes,4,opt,name=player_name" json:"player_name,omitempty"`
	Score            *float32                                    `protobuf:"fixed32,5,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) Reset()         { *m = CMsgDOTAFantasyPlayerScoreResponse{} }
func (m *CMsgDOTAFantasyPlayerScoreResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyPlayerScoreResponse_Result CMsgDOTAFantasyPlayerScoreResponse_EResult = CMsgDOTAFantasyPlayerScoreResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetResult() CMsgDOTAFantasyPlayerScoreResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerScoreResponse_Result
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyPlayerStandingsRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Count            *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Role             *uint32 `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	FilterStartTime  *uint32 `protobuf:"varint,4,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime    *uint32 `protobuf:"varint,5,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	FilterMatchId    *uint32 `protobuf:"varint,6,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterLastMatch  *bool   `protobuf:"varint,7,opt,name=filter_last_match" json:"filter_last_match,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) Reset()         { *m = CMsgDOTAFantasyPlayerStandingsRequest{} }
func (m *CMsgDOTAFantasyPlayerStandingsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerStandingsRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterMatchId() uint32 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterLastMatch() bool {
	if m != nil && m.FilterLastMatch != nil {
		return *m.FilterLastMatch
	}
	return false
}

type CMsgDOTAFantasyPlayerStandingsResponse struct {
	Result           *CMsgDOTAFantasyPlayerStandingsResponse_EResult           `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerStandingsResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId  *uint32                                                   `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Role             *uint32                                                   `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	PlayerScores     []*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore `protobuf:"bytes,4,rep,name=player_scores" json:"player_scores,omitempty"`
	XXX_unrecognized []byte                                                    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) Reset() {
	*m = CMsgDOTAFantasyPlayerStandingsResponse{}
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerStandingsResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyPlayerStandingsResponse_Result CMsgDOTAFantasyPlayerStandingsResponse_EResult = CMsgDOTAFantasyPlayerStandingsResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetResult() CMsgDOTAFantasyPlayerStandingsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerStandingsResponse_Result
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetPlayerScores() []*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

type CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore struct {
	PlayerAccountId  *uint32  `protobuf:"varint,1,opt,name=player_account_id" json:"player_account_id,omitempty"`
	PlayerName       *string  `protobuf:"bytes,2,opt,name=player_name" json:"player_name,omitempty"`
	Score            *float32 `protobuf:"fixed32,3,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) Reset() {
	*m = CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore{}
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) ProtoMessage() {}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyPlayerInfoRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerInfoRequest) Reset()         { *m = CMsgDOTAFantasyPlayerInfoRequest{} }
func (m *CMsgDOTAFantasyPlayerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerInfoRequest) ProtoMessage()    {}

type CMsgDOTAFantasyPlayerInfoResponse struct {
	Msg              *CMsgGCPlayerInfo `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerInfoResponse) Reset()         { *m = CMsgDOTAFantasyPlayerInfoResponse{} }
func (m *CMsgDOTAFantasyPlayerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerInfoResponse) ProtoMessage()    {}

func (m *CMsgDOTAFantasyPlayerInfoResponse) GetMsg() *CMsgGCPlayerInfo {
	if m != nil {
		return m.Msg
	}
	return nil
}

type CMsgDOTAFantasyLeagueCreateRequest struct {
	SeasonId          *uint32 `protobuf:"varint,1,opt,name=season_id" json:"season_id,omitempty"`
	FantasyLeagueName *string `protobuf:"bytes,2,opt,name=fantasy_league_name" json:"fantasy_league_name,omitempty"`
	Password          *string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	TeamName          *string `protobuf:"bytes,4,opt,name=team_name" json:"team_name,omitempty"`
	Logo              *uint64 `protobuf:"varint,5,opt,name=logo" json:"logo,omitempty"`
	TicketItemId      *uint64 `protobuf:"varint,6,opt,name=ticket_item_id" json:"ticket_item_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) Reset()         { *m = CMsgDOTAFantasyLeagueCreateRequest{} }
func (m *CMsgDOTAFantasyLeagueCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueCreateRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetSeasonId() uint32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetFantasyLeagueName() string {
	if m != nil && m.FantasyLeagueName != nil {
		return *m.FantasyLeagueName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetTicketItemId() uint64 {
	if m != nil && m.TicketItemId != nil {
		return *m.TicketItemId
	}
	return 0
}

type CMsgDOTAFantasyLeagueCreateResponse struct {
	Result           *CMsgDOTAFantasyLeagueCreateResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueCreateResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId  *uint32                                      `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueCreateResponse) Reset()         { *m = CMsgDOTAFantasyLeagueCreateResponse{} }
func (m *CMsgDOTAFantasyLeagueCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueCreateResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueCreateResponse_Result CMsgDOTAFantasyLeagueCreateResponse_EResult = CMsgDOTAFantasyLeagueCreateResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueCreateResponse) GetResult() CMsgDOTAFantasyLeagueCreateResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueCreateResponse_Result
}

func (m *CMsgDOTAFantasyLeagueCreateResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyTeamCreateRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Password         *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	TeamName         *string `protobuf:"bytes,3,opt,name=team_name" json:"team_name,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	TicketItemId     *uint64 `protobuf:"varint,5,opt,name=ticket_item_id" json:"ticket_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamCreateRequest) Reset()         { *m = CMsgDOTAFantasyTeamCreateRequest{} }
func (m *CMsgDOTAFantasyTeamCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamCreateRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetTicketItemId() uint64 {
	if m != nil && m.TicketItemId != nil {
		return *m.TicketItemId
	}
	return 0
}

type CMsgDOTAFantasyTeamCreateResponse struct {
	Result           *CMsgDOTAFantasyTeamCreateResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamCreateResponse_EResult,def=0" json:"result,omitempty"`
	FantasyTeamIndex *uint32                                    `protobuf:"varint,2,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAFantasyTeamCreateResponse) Reset()         { *m = CMsgDOTAFantasyTeamCreateResponse{} }
func (m *CMsgDOTAFantasyTeamCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamCreateResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamCreateResponse_Result CMsgDOTAFantasyTeamCreateResponse_EResult = CMsgDOTAFantasyTeamCreateResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamCreateResponse) GetResult() CMsgDOTAFantasyTeamCreateResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamCreateResponse_Result
}

func (m *CMsgDOTAFantasyTeamCreateResponse) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

type CMsgDOTAFantasyLeagueEditInvitesRequest struct {
	FantasyLeagueId  *uint32                                                 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Password         *string                                                 `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	InviteChange     []*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange `protobuf:"bytes,3,rep,name=invite_change" json:"invite_change,omitempty"`
	XXX_unrecognized []byte                                                  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) Reset() {
	*m = CMsgDOTAFantasyLeagueEditInvitesRequest{}
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInvitesRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) GetInviteChange() []*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange {
	if m != nil {
		return m.InviteChange
	}
	return nil
}

type CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Invited          *bool   `protobuf:"varint,2,opt,name=invited" json:"invited,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) Reset() {
	*m = CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange{}
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) ProtoMessage() {}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) GetInvited() bool {
	if m != nil && m.Invited != nil {
		return *m.Invited
	}
	return false
}

type CMsgDOTAFantasyLeagueEditInvitesResponse struct {
	Result           *CMsgDOTAFantasyLeagueEditInvitesResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueEditInvitesResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) Reset() {
	*m = CMsgDOTAFantasyLeagueEditInvitesResponse{}
}
func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInvitesResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueEditInvitesResponse_Result CMsgDOTAFantasyLeagueEditInvitesResponse_EResult = CMsgDOTAFantasyLeagueEditInvitesResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) GetResult() CMsgDOTAFantasyLeagueEditInvitesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueEditInvitesResponse_Result
}

type CMsgDOTAFantasyLeagueDraftStatusRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) Reset() {
	*m = CMsgDOTAFantasyLeagueDraftStatusRequest{}
}
func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftStatusRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyLeagueDraftStatus struct {
	FantasyLeagueId  *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	DraftOrder       []uint32 `protobuf:"varint,2,rep,name=draft_order" json:"draft_order,omitempty"`
	CurrentPick      *uint32  `protobuf:"varint,3,opt,name=current_pick" json:"current_pick,omitempty"`
	TimeRemaining    *uint32  `protobuf:"varint,4,opt,name=time_remaining" json:"time_remaining,omitempty"`
	PendingResume    *bool    `protobuf:"varint,5,opt,name=pending_resume" json:"pending_resume,omitempty"`
	Completed        *bool    `protobuf:"varint,6,opt,name=completed" json:"completed,omitempty"`
	AvailablePlayers []uint32 `protobuf:"varint,7,rep,name=available_players" json:"available_players,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) Reset()         { *m = CMsgDOTAFantasyLeagueDraftStatus{} }
func (m *CMsgDOTAFantasyLeagueDraftStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftStatus) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetDraftOrder() []uint32 {
	if m != nil {
		return m.DraftOrder
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetCurrentPick() uint32 {
	if m != nil && m.CurrentPick != nil {
		return *m.CurrentPick
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetTimeRemaining() uint32 {
	if m != nil && m.TimeRemaining != nil {
		return *m.TimeRemaining
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetPendingResume() bool {
	if m != nil && m.PendingResume != nil {
		return *m.PendingResume
	}
	return false
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetCompleted() bool {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return false
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetAvailablePlayers() []uint32 {
	if m != nil {
		return m.AvailablePlayers
	}
	return nil
}

type CMsgDOTAFantasyLeagueDraftPlayerRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex        *uint32 `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	PlayerAccountId  *uint32 `protobuf:"varint,3,opt,name=player_account_id" json:"player_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) Reset() {
	*m = CMsgDOTAFantasyLeagueDraftPlayerRequest{}
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftPlayerRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

type CMsgDOTAFantasyLeagueDraftPlayerResponse struct {
	Result           *CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) Reset() {
	*m = CMsgDOTAFantasyLeagueDraftPlayerResponse{}
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftPlayerResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeagueDraftPlayerResponse_Result CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = CMsgDOTAFantasyLeagueDraftPlayerResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) GetResult() CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueDraftPlayerResponse_Result
}

type CMsgDOTAFantasyTeamRosterSwapRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex        *uint32 `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Slot_1           *uint32 `protobuf:"varint,4,opt,name=slot_1" json:"slot_1,omitempty"`
	Slot_2           *uint32 `protobuf:"varint,5,opt,name=slot_2" json:"slot_2,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) Reset()         { *m = CMsgDOTAFantasyTeamRosterSwapRequest{} }
func (m *CMsgDOTAFantasyTeamRosterSwapRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterSwapRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetSlot_1() uint32 {
	if m != nil && m.Slot_1 != nil {
		return *m.Slot_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetSlot_2() uint32 {
	if m != nil && m.Slot_2 != nil {
		return *m.Slot_2
	}
	return 0
}

type CMsgDOTAFantasyTeamRosterSwapResponse struct {
	Result           *CMsgDOTAFantasyTeamRosterSwapResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamRosterSwapResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterSwapResponse) Reset()         { *m = CMsgDOTAFantasyTeamRosterSwapResponse{} }
func (m *CMsgDOTAFantasyTeamRosterSwapResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterSwapResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamRosterSwapResponse_Result CMsgDOTAFantasyTeamRosterSwapResponse_EResult = CMsgDOTAFantasyTeamRosterSwapResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamRosterSwapResponse) GetResult() CMsgDOTAFantasyTeamRosterSwapResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamRosterSwapResponse_Result
}

type CMsgDOTAFantasyTeamRosterAddDropRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex        *uint32 `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	AddAccountId     *uint32 `protobuf:"varint,5,opt,name=add_account_id" json:"add_account_id,omitempty"`
	DropAccountId    *uint32 `protobuf:"varint,6,opt,name=drop_account_id" json:"drop_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) Reset() {
	*m = CMsgDOTAFantasyTeamRosterAddDropRequest{}
}
func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterAddDropRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetAddAccountId() uint32 {
	if m != nil && m.AddAccountId != nil {
		return *m.AddAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetDropAccountId() uint32 {
	if m != nil && m.DropAccountId != nil {
		return *m.DropAccountId
	}
	return 0
}

type CMsgDOTAFantasyTeamRosterAddDropResponse struct {
	Result           *CMsgDOTAFantasyTeamRosterAddDropResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamRosterAddDropResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) Reset() {
	*m = CMsgDOTAFantasyTeamRosterAddDropResponse{}
}
func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterAddDropResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamRosterAddDropResponse_Result CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = CMsgDOTAFantasyTeamRosterAddDropResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) GetResult() CMsgDOTAFantasyTeamRosterAddDropResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamRosterAddDropResponse_Result
}

type CMsgDOTAFantasyTeamTradesRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradesRequest) Reset()         { *m = CMsgDOTAFantasyTeamTradesRequest{} }
func (m *CMsgDOTAFantasyTeamTradesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradesRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamTradesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyTeamTradesResponse struct {
	Result           *CMsgDOTAFantasyTeamTradesResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamTradesResponse_EResult,def=0" json:"result,omitempty"`
	Trades           []*CMsgDOTAFantasyTeamTradesResponse_Trade `protobuf:"bytes,2,rep,name=trades" json:"trades,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradesResponse) Reset()         { *m = CMsgDOTAFantasyTeamTradesResponse{} }
func (m *CMsgDOTAFantasyTeamTradesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradesResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamTradesResponse_Result CMsgDOTAFantasyTeamTradesResponse_EResult = CMsgDOTAFantasyTeamTradesResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamTradesResponse) GetResult() CMsgDOTAFantasyTeamTradesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamTradesResponse_Result
}

func (m *CMsgDOTAFantasyTeamTradesResponse) GetTrades() []*CMsgDOTAFantasyTeamTradesResponse_Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type CMsgDOTAFantasyTeamTradesResponse_Trade struct {
	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	OwnerAccountId_1  *uint32 `protobuf:"varint,2,opt,name=owner_account_id_1" json:"owner_account_id_1,omitempty"`
	OwnerAccountId_2  *uint32 `protobuf:"varint,3,opt,name=owner_account_id_2" json:"owner_account_id_2,omitempty"`
	PlayerAccountId_1 *uint32 `protobuf:"varint,4,opt,name=player_account_id_1" json:"player_account_id_1,omitempty"`
	PlayerAccountId_2 *uint32 `protobuf:"varint,5,opt,name=player_account_id_2" json:"player_account_id_2,omitempty"`
	Status            *uint32 `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) Reset() {
	*m = CMsgDOTAFantasyTeamTradesResponse_Trade{}
}
func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradesResponse_Trade) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetOwnerAccountId_1() uint32 {
	if m != nil && m.OwnerAccountId_1 != nil {
		return *m.OwnerAccountId_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetOwnerAccountId_2() uint32 {
	if m != nil && m.OwnerAccountId_2 != nil {
		return *m.OwnerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetPlayerAccountId_1() uint32 {
	if m != nil && m.PlayerAccountId_1 != nil {
		return *m.PlayerAccountId_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetPlayerAccountId_2() uint32 {
	if m != nil && m.PlayerAccountId_2 != nil {
		return *m.PlayerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTAFantasyTeamTradeCancelRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex_1      *uint32 `protobuf:"varint,3,opt,name=team_index_1" json:"team_index_1,omitempty"`
	OwnerAccountId_2 *uint32 `protobuf:"varint,4,opt,name=owner_account_id_2" json:"owner_account_id_2,omitempty"`
	TeamIndex_2      *uint32 `protobuf:"varint,5,opt,name=team_index_2" json:"team_index_2,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) Reset()         { *m = CMsgDOTAFantasyTeamTradeCancelRequest{} }
func (m *CMsgDOTAFantasyTeamTradeCancelRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradeCancelRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetTeamIndex_1() uint32 {
	if m != nil && m.TeamIndex_1 != nil {
		return *m.TeamIndex_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetOwnerAccountId_2() uint32 {
	if m != nil && m.OwnerAccountId_2 != nil {
		return *m.OwnerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetTeamIndex_2() uint32 {
	if m != nil && m.TeamIndex_2 != nil {
		return *m.TeamIndex_2
	}
	return 0
}

type CMsgDOTAFantasyTeamTradeCancelResponse struct {
	Result           *CMsgDOTAFantasyTeamTradeCancelResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamTradeCancelResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradeCancelResponse) Reset() {
	*m = CMsgDOTAFantasyTeamTradeCancelResponse{}
}
func (m *CMsgDOTAFantasyTeamTradeCancelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradeCancelResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamTradeCancelResponse_Result CMsgDOTAFantasyTeamTradeCancelResponse_EResult = CMsgDOTAFantasyTeamTradeCancelResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamTradeCancelResponse) GetResult() CMsgDOTAFantasyTeamTradeCancelResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamTradeCancelResponse_Result
}

type CMsgDOTAFantasyTeamRosterRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex        *uint32 `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	OwnerAccountId   *uint32 `protobuf:"varint,3,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterRequest) Reset()         { *m = CMsgDOTAFantasyTeamRosterRequest{} }
func (m *CMsgDOTAFantasyTeamRosterRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type CMsgDOTAFantasyTeamRosterResponse struct {
	Result           *CMsgDOTAFantasyTeamRosterResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamRosterResponse_EResult,def=0" json:"result,omitempty"`
	PlayerAccountIds []uint32                                   `protobuf:"varint,2,rep,name=player_account_ids" json:"player_account_ids,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterResponse) Reset()         { *m = CMsgDOTAFantasyTeamRosterResponse{} }
func (m *CMsgDOTAFantasyTeamRosterResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyTeamRosterResponse_Result CMsgDOTAFantasyTeamRosterResponse_EResult = CMsgDOTAFantasyTeamRosterResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamRosterResponse) GetResult() CMsgDOTAFantasyTeamRosterResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamRosterResponse_Result
}

func (m *CMsgDOTAFantasyTeamRosterResponse) GetPlayerAccountIds() []uint32 {
	if m != nil {
		return m.PlayerAccountIds
	}
	return nil
}

type CMsgDOTAFantasyPlayerHisoricalStatsRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsRequest{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsRequest) ProtoMessage() {}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse struct {
	Result           *CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult       `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult,def=0" json:"result,omitempty"`
	Stats            []*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats `protobuf:"bytes,2,rep,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte                                                     `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsResponse{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse) ProtoMessage() {}

const Default_CMsgDOTAFantasyPlayerHisoricalStatsResponse_Result CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = CMsgDOTAFantasyPlayerHisoricalStatsResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) GetResult() CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerHisoricalStatsResponse_Result
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) GetStats() []*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Matches          *uint32  `protobuf:"varint,2,opt,name=matches" json:"matches,omitempty"`
	Weeks            *uint32  `protobuf:"varint,3,opt,name=weeks" json:"weeks,omitempty"`
	Score            *float32 `protobuf:"fixed32,4,opt,name=score" json:"score,omitempty"`
	Levels           *float32 `protobuf:"fixed32,5,opt,name=levels" json:"levels,omitempty"`
	Kills            *float32 `protobuf:"fixed32,6,opt,name=kills" json:"kills,omitempty"`
	Deaths           *float32 `protobuf:"fixed32,7,opt,name=deaths" json:"deaths,omitempty"`
	Assists          *float32 `protobuf:"fixed32,8,opt,name=assists" json:"assists,omitempty"`
	LastHits         *float32 `protobuf:"fixed32,9,opt,name=last_hits" json:"last_hits,omitempty"`
	Denies           *float32 `protobuf:"fixed32,10,opt,name=denies" json:"denies,omitempty"`
	Gpm              *float32 `protobuf:"fixed32,11,opt,name=gpm" json:"gpm,omitempty"`
	Xppm             *float32 `protobuf:"fixed32,12,opt,name=xppm" json:"xppm,omitempty"`
	Stuns            *float32 `protobuf:"fixed32,13,opt,name=stuns" json:"stuns,omitempty"`
	Healing          *float32 `protobuf:"fixed32,14,opt,name=healing" json:"healing,omitempty"`
	TowerKills       *float32 `protobuf:"fixed32,15,opt,name=tower_kills" json:"tower_kills,omitempty"`
	RoshanKills      *float32 `protobuf:"fixed32,16,opt,name=roshan_kills" json:"roshan_kills,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) ProtoMessage() {}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetMatches() uint32 {
	if m != nil && m.Matches != nil {
		return *m.Matches
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetWeeks() uint32 {
	if m != nil && m.Weeks != nil {
		return *m.Weeks
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetLevels() float32 {
	if m != nil && m.Levels != nil {
		return *m.Levels
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetKills() float32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetDeaths() float32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetAssists() float32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetLastHits() float32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetDenies() float32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetGpm() float32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetXppm() float32 {
	if m != nil && m.Xppm != nil {
		return *m.Xppm
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetStuns() float32 {
	if m != nil && m.Stuns != nil {
		return *m.Stuns
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetHealing() float32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetTowerKills() float32 {
	if m != nil && m.TowerKills != nil {
		return *m.TowerKills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetRoshanKills() float32 {
	if m != nil && m.RoshanKills != nil {
		return *m.RoshanKills
	}
	return 0
}

type CMsgDOTAFantasyMessageAdd struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyMessageAdd) Reset()         { *m = CMsgDOTAFantasyMessageAdd{} }
func (m *CMsgDOTAFantasyMessageAdd) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessageAdd) ProtoMessage()    {}

func (m *CMsgDOTAFantasyMessageAdd) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessageAdd) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgDOTAFantasyMessagesRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	StartMessage     *uint32 `protobuf:"varint,2,opt,name=start_message" json:"start_message,omitempty"`
	EndMessage       *uint32 `protobuf:"varint,3,opt,name=end_message" json:"end_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyMessagesRequest) Reset()         { *m = CMsgDOTAFantasyMessagesRequest{} }
func (m *CMsgDOTAFantasyMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessagesRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyMessagesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesRequest) GetStartMessage() uint32 {
	if m != nil && m.StartMessage != nil {
		return *m.StartMessage
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesRequest) GetEndMessage() uint32 {
	if m != nil && m.EndMessage != nil {
		return *m.EndMessage
	}
	return 0
}

type CMsgDOTAFantasyMessagesResponse struct {
	Result           *CMsgDOTAFantasyMessagesResponse_EResult   `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyMessagesResponse_EResult,def=0" json:"result,omitempty"`
	Messages         []*CMsgDOTAFantasyMessagesResponse_Message `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	NumTotalMessages *uint32                                    `protobuf:"varint,3,opt,name=num_total_messages" json:"num_total_messages,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgDOTAFantasyMessagesResponse) Reset()         { *m = CMsgDOTAFantasyMessagesResponse{} }
func (m *CMsgDOTAFantasyMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessagesResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyMessagesResponse_Result CMsgDOTAFantasyMessagesResponse_EResult = CMsgDOTAFantasyMessagesResponse_SUCCESS

func (m *CMsgDOTAFantasyMessagesResponse) GetResult() CMsgDOTAFantasyMessagesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyMessagesResponse_Result
}

func (m *CMsgDOTAFantasyMessagesResponse) GetMessages() []*CMsgDOTAFantasyMessagesResponse_Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *CMsgDOTAFantasyMessagesResponse) GetNumTotalMessages() uint32 {
	if m != nil && m.NumTotalMessages != nil {
		return *m.NumTotalMessages
	}
	return 0
}

type CMsgDOTAFantasyMessagesResponse_Message struct {
	MessageId        *uint32 `protobuf:"varint,1,opt,name=message_id" json:"message_id,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	AuthorAccountId  *uint32 `protobuf:"varint,3,opt,name=author_account_id" json:"author_account_id,omitempty"`
	Time             *uint32 `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) Reset() {
	*m = CMsgDOTAFantasyMessagesResponse_Message{}
}
func (m *CMsgDOTAFantasyMessagesResponse_Message) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessagesResponse_Message) ProtoMessage()    {}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetMessageId() uint32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetAuthorAccountId() uint32 {
	if m != nil && m.AuthorAccountId != nil {
		return *m.AuthorAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CMsgDOTAFantasyRemoveOwner struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId   *uint32 `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	TeamIndex        *uint32 `protobuf:"varint,3,opt,name=team_index" json:"team_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyRemoveOwner) Reset()         { *m = CMsgDOTAFantasyRemoveOwner{} }
func (m *CMsgDOTAFantasyRemoveOwner) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyRemoveOwner) ProtoMessage()    {}

func (m *CMsgDOTAFantasyRemoveOwner) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyRemoveOwner) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyRemoveOwner) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

type CMsgDOTAFantasyRemoveOwnerResponse struct {
	Result           *CMsgDOTAFantasyRemoveOwnerResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyRemoveOwnerResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTAFantasyRemoveOwnerResponse) Reset()         { *m = CMsgDOTAFantasyRemoveOwnerResponse{} }
func (m *CMsgDOTAFantasyRemoveOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyRemoveOwnerResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyRemoveOwnerResponse_Result CMsgDOTAFantasyRemoveOwnerResponse_EResult = CMsgDOTAFantasyRemoveOwnerResponse_SUCCESS

func (m *CMsgDOTAFantasyRemoveOwnerResponse) GetResult() CMsgDOTAFantasyRemoveOwnerResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyRemoveOwnerResponse_Result
}

type CMsgDOTAFantasyScheduledMatchesRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyScheduledMatchesRequest) Reset() {
	*m = CMsgDOTAFantasyScheduledMatchesRequest{}
}
func (m *CMsgDOTAFantasyScheduledMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyScheduledMatchesRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyScheduledMatchesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyScheduledMatchesResponse struct {
	Result             *CMsgDOTAFantasyScheduledMatchesResponse_EResult              `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyScheduledMatchesResponse_EResult,def=0" json:"result,omitempty"`
	ScheduledMatchDays []*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays `protobuf:"bytes,2,rep,name=scheduled_match_days" json:"scheduled_match_days,omitempty"`
	XXX_unrecognized   []byte                                                        `json:"-"`
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse) Reset() {
	*m = CMsgDOTAFantasyScheduledMatchesResponse{}
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyScheduledMatchesResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyScheduledMatchesResponse_Result CMsgDOTAFantasyScheduledMatchesResponse_EResult = CMsgDOTAFantasyScheduledMatchesResponse_SUCCESS

func (m *CMsgDOTAFantasyScheduledMatchesResponse) GetResult() CMsgDOTAFantasyScheduledMatchesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyScheduledMatchesResponse_Result
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse) GetScheduledMatchDays() []*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays {
	if m != nil {
		return m.ScheduledMatchDays
	}
	return nil
}

type CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays struct {
	Timestamp        *uint32  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	TeamIds          []uint32 `protobuf:"varint,2,rep,name=team_ids" json:"team_ids,omitempty"`
	LeagueIds        []uint32 `protobuf:"varint,3,rep,name=league_ids" json:"league_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) Reset() {
	*m = CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays{}
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) ProtoMessage() {}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) GetTeamIds() []uint32 {
	if m != nil {
		return m.TeamIds
	}
	return nil
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) GetLeagueIds() []uint32 {
	if m != nil {
		return m.LeagueIds
	}
	return nil
}

type CMsgDOTAFantasyLeaveLeagueRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	FantasyTeamIndex *uint32 `protobuf:"varint,2,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyLeaveLeagueRequest) Reset()         { *m = CMsgDOTAFantasyLeaveLeagueRequest{} }
func (m *CMsgDOTAFantasyLeaveLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeaveLeagueRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyLeaveLeagueRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeaveLeagueRequest) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

type CMsgDOTAFantasyLeaveLeagueResponse struct {
	Result           *CMsgDOTAFantasyLeaveLeagueResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeaveLeagueResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTAFantasyLeaveLeagueResponse) Reset()         { *m = CMsgDOTAFantasyLeaveLeagueResponse{} }
func (m *CMsgDOTAFantasyLeaveLeagueResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeaveLeagueResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyLeaveLeagueResponse_Result CMsgDOTAFantasyLeaveLeagueResponse_EResult = CMsgDOTAFantasyLeaveLeagueResponse_SUCCESS

func (m *CMsgDOTAFantasyLeaveLeagueResponse) GetResult() CMsgDOTAFantasyLeaveLeagueResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeaveLeagueResponse_Result
}

type CMsgDOTAFantasyPlayerScoreDetailsRequest struct {
	FantasyLeagueId  *uint32 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	PlayerAccountId  *uint32 `protobuf:"varint,2,opt,name=player_account_id" json:"player_account_id,omitempty"`
	StartTime        *uint32 `protobuf:"varint,3,opt,name=start_time" json:"start_time,omitempty"`
	EndTime          *uint32 `protobuf:"varint,4,opt,name=end_time" json:"end_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) Reset() {
	*m = CMsgDOTAFantasyPlayerScoreDetailsRequest{}
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreDetailsRequest) ProtoMessage()    {}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type CMsgDOTAFantasyPlayerScoreDetailsResponse struct {
	Result           *CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult           `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult,def=0" json:"result,omitempty"`
	Data             []*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                                                       `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) Reset() {
	*m = CMsgDOTAFantasyPlayerScoreDetailsResponse{}
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreDetailsResponse) ProtoMessage()    {}

const Default_CMsgDOTAFantasyPlayerScoreDetailsResponse_Result CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = CMsgDOTAFantasyPlayerScoreDetailsResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) GetResult() CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerScoreDetailsResponse_Result
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) GetData() []*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData struct {
	MatchId          *uint32                       `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	SeriesId         *uint32                       `protobuf:"varint,2,opt,name=series_id" json:"series_id,omitempty"`
	SeriesNum        *uint32                       `protobuf:"varint,3,opt,name=series_num" json:"series_num,omitempty"`
	SeriesType       *uint32                       `protobuf:"varint,4,opt,name=series_type" json:"series_type,omitempty"`
	SeriesMultiplier *float32                      `protobuf:"fixed32,5,opt,name=series_multiplier" json:"series_multiplier,omitempty"`
	LeagueId         *uint32                       `protobuf:"varint,6,opt,name=league_id" json:"league_id,omitempty"`
	OpposingTeamId   *uint32                       `protobuf:"varint,7,opt,name=opposing_team_id" json:"opposing_team_id,omitempty"`
	OpposingTeamLogo *uint64                       `protobuf:"varint,8,opt,name=opposing_team_logo" json:"opposing_team_logo,omitempty"`
	OpposingTeamName *string                       `protobuf:"bytes,9,opt,name=opposing_team_name" json:"opposing_team_name,omitempty"`
	Stats            *CMsgFantasyLeagueRoleScoring `protobuf:"bytes,10,opt,name=stats" json:"stats,omitempty"`
	OwnedBy          *uint32                       `protobuf:"varint,11,opt,name=owned_by" json:"owned_by,omitempty"`
	Benched          *bool                         `protobuf:"varint,12,opt,name=benched" json:"benched,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) Reset() {
	*m = CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData{}
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) ProtoMessage() {}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesNum() uint32 {
	if m != nil && m.SeriesNum != nil {
		return *m.SeriesNum
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesMultiplier() float32 {
	if m != nil && m.SeriesMultiplier != nil {
		return *m.SeriesMultiplier
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOpposingTeamId() uint32 {
	if m != nil && m.OpposingTeamId != nil {
		return *m.OpposingTeamId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOpposingTeamLogo() uint64 {
	if m != nil && m.OpposingTeamLogo != nil {
		return *m.OpposingTeamLogo
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOpposingTeamName() string {
	if m != nil && m.OpposingTeamName != nil {
		return *m.OpposingTeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetStats() *CMsgFantasyLeagueRoleScoring {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOwnedBy() uint32 {
	if m != nil && m.OwnedBy != nil {
		return *m.OwnedBy
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetBenched() bool {
	if m != nil && m.Benched != nil {
		return *m.Benched
	}
	return false
}

type CMsgDOTASendFriendRecruits struct {
	Recruits         []uint32 `protobuf:"varint,1,rep,name=recruits" json:"recruits,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTASendFriendRecruits) Reset()         { *m = CMsgDOTASendFriendRecruits{} }
func (m *CMsgDOTASendFriendRecruits) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASendFriendRecruits) ProtoMessage()    {}

func (m *CMsgDOTASendFriendRecruits) GetRecruits() []uint32 {
	if m != nil {
		return m.Recruits
	}
	return nil
}

type CMsgDOTAFriendRecruitsRequest struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAFriendRecruitsRequest) Reset()         { *m = CMsgDOTAFriendRecruitsRequest{} }
func (m *CMsgDOTAFriendRecruitsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFriendRecruitsRequest) ProtoMessage()    {}

func (m *CMsgDOTAFriendRecruitsRequest) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgDOTAFriendRecruitsResponse struct {
	Result           *CMsgDOTAFriendRecruitsResponse_EResult               `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFriendRecruitsResponse_EResult,def=0" json:"result,omitempty"`
	Recruits         []*CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus `protobuf:"bytes,2,rep,name=recruits" json:"recruits,omitempty"`
	Recruiters       []*CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus `protobuf:"bytes,3,rep,name=recruiters" json:"recruiters,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *CMsgDOTAFriendRecruitsResponse) Reset()         { *m = CMsgDOTAFriendRecruitsResponse{} }
func (m *CMsgDOTAFriendRecruitsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFriendRecruitsResponse) ProtoMessage()    {}

const Default_CMsgDOTAFriendRecruitsResponse_Result CMsgDOTAFriendRecruitsResponse_EResult = CMsgDOTAFriendRecruitsResponse_SUCCESS

func (m *CMsgDOTAFriendRecruitsResponse) GetResult() CMsgDOTAFriendRecruitsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFriendRecruitsResponse_Result
}

func (m *CMsgDOTAFriendRecruitsResponse) GetRecruits() []*CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus {
	if m != nil {
		return m.Recruits
	}
	return nil
}

func (m *CMsgDOTAFriendRecruitsResponse) GetRecruiters() []*CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus {
	if m != nil {
		return m.Recruiters
	}
	return nil
}

type CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Status           *uint32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	LevelsEarned     *uint32 `protobuf:"varint,3,opt,name=levels_earned" json:"levels_earned,omitempty"`
	Bonus            *bool   `protobuf:"varint,4,opt,name=bonus" json:"bonus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) Reset() {
	*m = CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus{}
}
func (m *CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) ProtoMessage() {}

func (m *CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) GetLevelsEarned() uint32 {
	if m != nil && m.LevelsEarned != nil {
		return *m.LevelsEarned
	}
	return 0
}

func (m *CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus) GetBonus() bool {
	if m != nil && m.Bonus != nil {
		return *m.Bonus
	}
	return false
}

type CMsgDOTAFriendRecruitInviteAcceptDecline struct {
	Accepted         *bool   `protobuf:"varint,1,opt,name=accepted" json:"accepted,omitempty"`
	AccountId        *uint32 `protobuf:"varint,2,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFriendRecruitInviteAcceptDecline) Reset() {
	*m = CMsgDOTAFriendRecruitInviteAcceptDecline{}
}
func (m *CMsgDOTAFriendRecruitInviteAcceptDecline) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFriendRecruitInviteAcceptDecline) ProtoMessage()    {}

func (m *CMsgDOTAFriendRecruitInviteAcceptDecline) GetAccepted() bool {
	if m != nil && m.Accepted != nil {
		return *m.Accepted
	}
	return false
}

func (m *CMsgDOTAFriendRecruitInviteAcceptDecline) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgDOTAPassportVoteTeamGuess struct {
	LeagueId         *uint32 `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	WinnerId         *uint32 `protobuf:"varint,2,opt,name=winner_id" json:"winner_id,omitempty"`
	RunnerupId       *uint32 `protobuf:"varint,3,opt,name=runnerup_id" json:"runnerup_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAPassportVoteTeamGuess) Reset()         { *m = CMsgDOTAPassportVoteTeamGuess{} }
func (m *CMsgDOTAPassportVoteTeamGuess) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportVoteTeamGuess) ProtoMessage()    {}

func (m *CMsgDOTAPassportVoteTeamGuess) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAPassportVoteTeamGuess) GetWinnerId() uint32 {
	if m != nil && m.WinnerId != nil {
		return *m.WinnerId
	}
	return 0
}

func (m *CMsgDOTAPassportVoteTeamGuess) GetRunnerupId() uint32 {
	if m != nil && m.RunnerupId != nil {
		return *m.RunnerupId
	}
	return 0
}

type CMsgDOTAPassportVoteGenericSelection struct {
	SelectionIndex   *DOTA_2013PassportSelectionIndices `protobuf:"varint,1,opt,name=selection_index,enum=DOTA_2013PassportSelectionIndices,def=0" json:"selection_index,omitempty"`
	Selection        *uint32                            `protobuf:"varint,2,opt,name=selection" json:"selection,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CMsgDOTAPassportVoteGenericSelection) Reset()         { *m = CMsgDOTAPassportVoteGenericSelection{} }
func (m *CMsgDOTAPassportVoteGenericSelection) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportVoteGenericSelection) ProtoMessage()    {}

const Default_CMsgDOTAPassportVoteGenericSelection_SelectionIndex DOTA_2013PassportSelectionIndices = DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_0

func (m *CMsgDOTAPassportVoteGenericSelection) GetSelectionIndex() DOTA_2013PassportSelectionIndices {
	if m != nil && m.SelectionIndex != nil {
		return *m.SelectionIndex
	}
	return Default_CMsgDOTAPassportVoteGenericSelection_SelectionIndex
}

func (m *CMsgDOTAPassportVoteGenericSelection) GetSelection() uint32 {
	if m != nil && m.Selection != nil {
		return *m.Selection
	}
	return 0
}

type CMsgDOTAPassportStampedPlayer struct {
	SteamId          *uint64 `protobuf:"varint,1,opt,name=steam_id" json:"steam_id,omitempty"`
	StampLevel       *uint32 `protobuf:"varint,2,opt,name=stamp_level" json:"stamp_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAPassportStampedPlayer) Reset()         { *m = CMsgDOTAPassportStampedPlayer{} }
func (m *CMsgDOTAPassportStampedPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportStampedPlayer) ProtoMessage()    {}

func (m *CMsgDOTAPassportStampedPlayer) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAPassportStampedPlayer) GetStampLevel() uint32 {
	if m != nil && m.StampLevel != nil {
		return *m.StampLevel
	}
	return 0
}

type CMsgDOTAPassportPlayerCardChallenge struct {
	ChallengeId      *uint32 `protobuf:"varint,1,opt,name=challenge_id" json:"challenge_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAPassportPlayerCardChallenge) Reset()         { *m = CMsgDOTAPassportPlayerCardChallenge{} }
func (m *CMsgDOTAPassportPlayerCardChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportPlayerCardChallenge) ProtoMessage()    {}

func (m *CMsgDOTAPassportPlayerCardChallenge) GetChallengeId() uint32 {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return 0
}

type CMsgDOTAPassportVote struct {
	TeamVotes            []*CMsgDOTAPassportVoteTeamGuess        `protobuf:"bytes,1,rep,name=team_votes" json:"team_votes,omitempty"`
	GenericSelections    []*CMsgDOTAPassportVoteGenericSelection `protobuf:"bytes,2,rep,name=generic_selections" json:"generic_selections,omitempty"`
	StampedPlayers       []*CMsgDOTAPassportStampedPlayer        `protobuf:"bytes,3,rep,name=stamped_players" json:"stamped_players,omitempty"`
	PlayerCardChallenges []*CMsgDOTAPassportPlayerCardChallenge  `protobuf:"bytes,4,rep,name=player_card_challenges" json:"player_card_challenges,omitempty"`
	XXX_unrecognized     []byte                                  `json:"-"`
}

func (m *CMsgDOTAPassportVote) Reset()         { *m = CMsgDOTAPassportVote{} }
func (m *CMsgDOTAPassportVote) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportVote) ProtoMessage()    {}

func (m *CMsgDOTAPassportVote) GetTeamVotes() []*CMsgDOTAPassportVoteTeamGuess {
	if m != nil {
		return m.TeamVotes
	}
	return nil
}

func (m *CMsgDOTAPassportVote) GetGenericSelections() []*CMsgDOTAPassportVoteGenericSelection {
	if m != nil {
		return m.GenericSelections
	}
	return nil
}

func (m *CMsgDOTAPassportVote) GetStampedPlayers() []*CMsgDOTAPassportStampedPlayer {
	if m != nil {
		return m.StampedPlayers
	}
	return nil
}

func (m *CMsgDOTAPassportVote) GetPlayerCardChallenges() []*CMsgDOTAPassportPlayerCardChallenge {
	if m != nil {
		return m.PlayerCardChallenges
	}
	return nil
}

type CMsgPassportDataRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgPassportDataRequest) Reset()         { *m = CMsgPassportDataRequest{} }
func (m *CMsgPassportDataRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgPassportDataRequest) ProtoMessage()    {}

func (m *CMsgPassportDataRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgPassportDataResponse struct {
	AccountId                    *uint32               `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Result                       *uint32               `protobuf:"varint,2,opt,name=result,def=2" json:"result,omitempty"`
	International                *CMsgDOTATournament   `protobuf:"bytes,5,opt,name=international" json:"international,omitempty"`
	EastQualifiersPredictEndTime *uint32               `protobuf:"varint,7,opt,name=east_qualifiers_predict_end_time" json:"east_qualifiers_predict_end_time,omitempty"`
	WestQualifiersPredictEndTime *uint32               `protobuf:"varint,8,opt,name=west_qualifiers_predict_end_time" json:"west_qualifiers_predict_end_time,omitempty"`
	AllstarMatchEndTime          *uint32               `protobuf:"varint,9,opt,name=allstar_match_end_time" json:"allstar_match_end_time,omitempty"`
	LeagueGuesses                *CMsgDOTAPassportVote `protobuf:"bytes,6,opt,name=league_guesses" json:"league_guesses,omitempty"`
	EastQualifiersWinnerTeamId   *uint32               `protobuf:"varint,10,opt,name=east_qualifiers_winner_team_id" json:"east_qualifiers_winner_team_id,omitempty"`
	EastQualifiersRunnerUpTeamId *uint32               `protobuf:"varint,11,opt,name=east_qualifiers_runner_up_team_id" json:"east_qualifiers_runner_up_team_id,omitempty"`
	WestQualifiersWinnerTeamId   *uint32               `protobuf:"varint,12,opt,name=west_qualifiers_winner_team_id" json:"west_qualifiers_winner_team_id,omitempty"`
	WestQualifiersRunnerUpTeamId *uint32               `protobuf:"varint,13,opt,name=west_qualifiers_runner_up_team_id" json:"west_qualifiers_runner_up_team_id,omitempty"`
	PassportsBought              *uint32               `protobuf:"varint,14,opt,name=passports_bought" json:"passports_bought,omitempty"`
	OriginalPurchaserId          *uint32               `protobuf:"varint,15,opt,name=original_purchaser_id" json:"original_purchaser_id,omitempty"`
	FantasyTeamCount             *uint32               `protobuf:"varint,16,opt,name=fantasy_team_count" json:"fantasy_team_count,omitempty"`
	FantasyTeamexpiration        *uint32               `protobuf:"varint,17,opt,name=fantasy_teamexpiration" json:"fantasy_teamexpiration,omitempty"`
	FantasyTeamsWillLockAt       *uint32               `protobuf:"varint,18,opt,name=fantasy_teams_will_lock_at" json:"fantasy_teams_will_lock_at,omitempty"`
	XXX_unrecognized             []byte                `json:"-"`
}

func (m *CMsgPassportDataResponse) Reset()         { *m = CMsgPassportDataResponse{} }
func (m *CMsgPassportDataResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgPassportDataResponse) ProtoMessage()    {}

const Default_CMsgPassportDataResponse_Result uint32 = 2

func (m *CMsgPassportDataResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgPassportDataResponse_Result
}

func (m *CMsgPassportDataResponse) GetInternational() *CMsgDOTATournament {
	if m != nil {
		return m.International
	}
	return nil
}

func (m *CMsgPassportDataResponse) GetEastQualifiersPredictEndTime() uint32 {
	if m != nil && m.EastQualifiersPredictEndTime != nil {
		return *m.EastQualifiersPredictEndTime
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetWestQualifiersPredictEndTime() uint32 {
	if m != nil && m.WestQualifiersPredictEndTime != nil {
		return *m.WestQualifiersPredictEndTime
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetAllstarMatchEndTime() uint32 {
	if m != nil && m.AllstarMatchEndTime != nil {
		return *m.AllstarMatchEndTime
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetLeagueGuesses() *CMsgDOTAPassportVote {
	if m != nil {
		return m.LeagueGuesses
	}
	return nil
}

func (m *CMsgPassportDataResponse) GetEastQualifiersWinnerTeamId() uint32 {
	if m != nil && m.EastQualifiersWinnerTeamId != nil {
		return *m.EastQualifiersWinnerTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetEastQualifiersRunnerUpTeamId() uint32 {
	if m != nil && m.EastQualifiersRunnerUpTeamId != nil {
		return *m.EastQualifiersRunnerUpTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetWestQualifiersWinnerTeamId() uint32 {
	if m != nil && m.WestQualifiersWinnerTeamId != nil {
		return *m.WestQualifiersWinnerTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetWestQualifiersRunnerUpTeamId() uint32 {
	if m != nil && m.WestQualifiersRunnerUpTeamId != nil {
		return *m.WestQualifiersRunnerUpTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetPassportsBought() uint32 {
	if m != nil && m.PassportsBought != nil {
		return *m.PassportsBought
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetOriginalPurchaserId() uint32 {
	if m != nil && m.OriginalPurchaserId != nil {
		return *m.OriginalPurchaserId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetFantasyTeamCount() uint32 {
	if m != nil && m.FantasyTeamCount != nil {
		return *m.FantasyTeamCount
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetFantasyTeamexpiration() uint32 {
	if m != nil && m.FantasyTeamexpiration != nil {
		return *m.FantasyTeamexpiration
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetFantasyTeamsWillLockAt() uint32 {
	if m != nil && m.FantasyTeamsWillLockAt != nil {
		return *m.FantasyTeamsWillLockAt
	}
	return 0
}

type CMsgRequestLeaguePrizePool struct {
	LeagueId         *uint32 `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestLeaguePrizePool) Reset()         { *m = CMsgRequestLeaguePrizePool{} }
func (m *CMsgRequestLeaguePrizePool) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestLeaguePrizePool) ProtoMessage()    {}

func (m *CMsgRequestLeaguePrizePool) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

type CMsgRequestLeaguePrizePoolResponse struct {
	LeagueId         *uint32 `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	PrizePool        *uint32 `protobuf:"varint,2,opt,name=prize_pool" json:"prize_pool,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestLeaguePrizePoolResponse) Reset()         { *m = CMsgRequestLeaguePrizePoolResponse{} }
func (m *CMsgRequestLeaguePrizePoolResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestLeaguePrizePoolResponse) ProtoMessage()    {}

func (m *CMsgRequestLeaguePrizePoolResponse) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgRequestLeaguePrizePoolResponse) GetPrizePool() uint32 {
	if m != nil && m.PrizePool != nil {
		return *m.PrizePool
	}
	return 0
}

type CMsgGCGetHeroStandings struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCGetHeroStandings) Reset()         { *m = CMsgGCGetHeroStandings{} }
func (m *CMsgGCGetHeroStandings) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGetHeroStandings) ProtoMessage()    {}

type CMsgGCGetHeroStandingsResponse struct {
	Standings        []*CMsgGCGetHeroStandingsResponse_Hero `protobuf:"bytes,1,rep,name=standings" json:"standings,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgGCGetHeroStandingsResponse) Reset()         { *m = CMsgGCGetHeroStandingsResponse{} }
func (m *CMsgGCGetHeroStandingsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGetHeroStandingsResponse) ProtoMessage()    {}

func (m *CMsgGCGetHeroStandingsResponse) GetStandings() []*CMsgGCGetHeroStandingsResponse_Hero {
	if m != nil {
		return m.Standings
	}
	return nil
}

type CMsgGCGetHeroStandingsResponse_Hero struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	Wins             *uint32 `protobuf:"varint,2,opt,name=wins" json:"wins,omitempty"`
	Losses           *uint32 `protobuf:"varint,3,opt,name=losses" json:"losses,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCGetHeroStandingsResponse_Hero) Reset()         { *m = CMsgGCGetHeroStandingsResponse_Hero{} }
func (m *CMsgGCGetHeroStandingsResponse_Hero) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGetHeroStandingsResponse_Hero) ProtoMessage()    {}

func (m *CMsgGCGetHeroStandingsResponse_Hero) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgGCGetHeroStandingsResponse_Hero) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgGCGetHeroStandingsResponse_Hero) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

type CMsgGCItemEditorReservationsRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCItemEditorReservationsRequest) Reset()         { *m = CMsgGCItemEditorReservationsRequest{} }
func (m *CMsgGCItemEditorReservationsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemEditorReservationsRequest) ProtoMessage()    {}

type CMsgGCItemEditorReservation struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index" json:"def_index,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCItemEditorReservation) Reset()         { *m = CMsgGCItemEditorReservation{} }
func (m *CMsgGCItemEditorReservation) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemEditorReservation) ProtoMessage()    {}

func (m *CMsgGCItemEditorReservation) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CMsgGCItemEditorReservation) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CMsgGCItemEditorReservationsResponse struct {
	Reservations     []*CMsgGCItemEditorReservation `protobuf:"bytes,1,rep,name=reservations" json:"reservations,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgGCItemEditorReservationsResponse) Reset()         { *m = CMsgGCItemEditorReservationsResponse{} }
func (m *CMsgGCItemEditorReservationsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemEditorReservationsResponse) ProtoMessage()    {}

func (m *CMsgGCItemEditorReservationsResponse) GetReservations() []*CMsgGCItemEditorReservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

type CMsgGCItemEditorReserveItemDef struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index" json:"def_index,omitempty"`
	Username         *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCItemEditorReserveItemDef) Reset()         { *m = CMsgGCItemEditorReserveItemDef{} }
func (m *CMsgGCItemEditorReserveItemDef) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemEditorReserveItemDef) ProtoMessage()    {}

func (m *CMsgGCItemEditorReserveItemDef) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CMsgGCItemEditorReserveItemDef) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

type CMsgGCItemEditorReserveItemDefResponse struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index" json:"def_index,omitempty"`
	Username         *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Result           *uint32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCItemEditorReserveItemDefResponse) Reset() {
	*m = CMsgGCItemEditorReserveItemDefResponse{}
}
func (m *CMsgGCItemEditorReserveItemDefResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemEditorReserveItemDefResponse) ProtoMessage()    {}

func (m *CMsgGCItemEditorReserveItemDefResponse) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CMsgGCItemEditorReserveItemDefResponse) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *CMsgGCItemEditorReserveItemDefResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgGCItemEditorReleaseReservation struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index" json:"def_index,omitempty"`
	Username         *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCItemEditorReleaseReservation) Reset()         { *m = CMsgGCItemEditorReleaseReservation{} }
func (m *CMsgGCItemEditorReleaseReservation) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemEditorReleaseReservation) ProtoMessage()    {}

func (m *CMsgGCItemEditorReleaseReservation) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CMsgGCItemEditorReleaseReservation) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

type CMsgGCItemEditorReleaseReservationResponse struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index" json:"def_index,omitempty"`
	Released         *bool   `protobuf:"varint,2,opt,name=released" json:"released,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCItemEditorReleaseReservationResponse) Reset() {
	*m = CMsgGCItemEditorReleaseReservationResponse{}
}
func (m *CMsgGCItemEditorReleaseReservationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCItemEditorReleaseReservationResponse) ProtoMessage() {}

func (m *CMsgGCItemEditorReleaseReservationResponse) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CMsgGCItemEditorReleaseReservationResponse) GetReleased() bool {
	if m != nil && m.Released != nil {
		return *m.Released
	}
	return false
}

type CMsgDOTARewardTutorialPrizes struct {
	LocationId       *uint32 `protobuf:"varint,1,opt,name=location_id" json:"location_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARewardTutorialPrizes) Reset()         { *m = CMsgDOTARewardTutorialPrizes{} }
func (m *CMsgDOTARewardTutorialPrizes) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARewardTutorialPrizes) ProtoMessage()    {}

func (m *CMsgDOTARewardTutorialPrizes) GetLocationId() uint32 {
	if m != nil && m.LocationId != nil {
		return *m.LocationId
	}
	return 0
}

type CMsgDOTALastHitChallengeHighScorePost struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	HighScore        *uint32 `protobuf:"varint,2,opt,name=high_score" json:"high_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALastHitChallengeHighScorePost) Reset()         { *m = CMsgDOTALastHitChallengeHighScorePost{} }
func (m *CMsgDOTALastHitChallengeHighScorePost) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALastHitChallengeHighScorePost) ProtoMessage()    {}

func (m *CMsgDOTALastHitChallengeHighScorePost) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTALastHitChallengeHighScorePost) GetHighScore() uint32 {
	if m != nil && m.HighScore != nil {
		return *m.HighScore
	}
	return 0
}

type CMsgDOTALastHitChallengeHighScoreRequest struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALastHitChallengeHighScoreRequest) Reset() {
	*m = CMsgDOTALastHitChallengeHighScoreRequest{}
}
func (m *CMsgDOTALastHitChallengeHighScoreRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALastHitChallengeHighScoreRequest) ProtoMessage()    {}

func (m *CMsgDOTALastHitChallengeHighScoreRequest) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgDOTALastHitChallengeHighScoreResponse struct {
	Score            *uint32 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Eresult          *uint32 `protobuf:"varint,2,opt,name=eresult" json:"eresult,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALastHitChallengeHighScoreResponse) Reset() {
	*m = CMsgDOTALastHitChallengeHighScoreResponse{}
}
func (m *CMsgDOTALastHitChallengeHighScoreResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALastHitChallengeHighScoreResponse) ProtoMessage()    {}

func (m *CMsgDOTALastHitChallengeHighScoreResponse) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTALastHitChallengeHighScoreResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

type CMsgFlipLobbyTeams struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgFlipLobbyTeams) Reset()         { *m = CMsgFlipLobbyTeams{} }
func (m *CMsgFlipLobbyTeams) String() string { return proto.CompactTextString(m) }
func (*CMsgFlipLobbyTeams) ProtoMessage()    {}

type CMsgPresentedClientTerminateDlg struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgPresentedClientTerminateDlg) Reset()         { *m = CMsgPresentedClientTerminateDlg{} }
func (m *CMsgPresentedClientTerminateDlg) String() string { return proto.CompactTextString(m) }
func (*CMsgPresentedClientTerminateDlg) ProtoMessage()    {}

type CMsgGCLobbyUpdateBroadcastChannelInfo struct {
	ChannelId        *uint32 `protobuf:"varint,1,opt,name=channel_id" json:"channel_id,omitempty"`
	CountryCode      *string `protobuf:"bytes,2,opt,name=country_code" json:"country_code,omitempty"`
	Description      *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCLobbyUpdateBroadcastChannelInfo) Reset()         { *m = CMsgGCLobbyUpdateBroadcastChannelInfo{} }
func (m *CMsgGCLobbyUpdateBroadcastChannelInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCLobbyUpdateBroadcastChannelInfo) ProtoMessage()    {}

func (m *CMsgGCLobbyUpdateBroadcastChannelInfo) GetChannelId() uint32 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgGCLobbyUpdateBroadcastChannelInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgGCLobbyUpdateBroadcastChannelInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CMsgDOTARedeemEventPrize struct {
	ItemDefIndex     *uint32 `protobuf:"varint,1,opt,name=item_def_index" json:"item_def_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARedeemEventPrize) Reset()         { *m = CMsgDOTARedeemEventPrize{} }
func (m *CMsgDOTARedeemEventPrize) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARedeemEventPrize) ProtoMessage()    {}

func (m *CMsgDOTARedeemEventPrize) GetItemDefIndex() uint32 {
	if m != nil && m.ItemDefIndex != nil {
		return *m.ItemDefIndex
	}
	return 0
}

type CMsgDOTARedeemEventPrizeResponse struct {
	Result                 *CMsgDOTARedeemEventPrizeResponse_ResultCode `protobuf:"varint,1,opt,name=result,enum=CMsgDOTARedeemEventPrizeResponse_ResultCode,def=0" json:"result,omitempty"`
	RemainingPoints        *uint32                                      `protobuf:"varint,2,opt,name=remaining_points" json:"remaining_points,omitempty"`
	RemainingPremiumPoints *uint32                                      `protobuf:"varint,3,opt,name=remaining_premium_points" json:"remaining_premium_points,omitempty"`
	EventId                *uint32                                      `protobuf:"varint,4,opt,name=event_id" json:"event_id,omitempty"`
	XXX_unrecognized       []byte                                       `json:"-"`
}

func (m *CMsgDOTARedeemEventPrizeResponse) Reset()         { *m = CMsgDOTARedeemEventPrizeResponse{} }
func (m *CMsgDOTARedeemEventPrizeResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARedeemEventPrizeResponse) ProtoMessage()    {}

const Default_CMsgDOTARedeemEventPrizeResponse_Result CMsgDOTARedeemEventPrizeResponse_ResultCode = CMsgDOTARedeemEventPrizeResponse_Success

func (m *CMsgDOTARedeemEventPrizeResponse) GetResult() CMsgDOTARedeemEventPrizeResponse_ResultCode {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTARedeemEventPrizeResponse_Result
}

func (m *CMsgDOTARedeemEventPrizeResponse) GetRemainingPoints() uint32 {
	if m != nil && m.RemainingPoints != nil {
		return *m.RemainingPoints
	}
	return 0
}

func (m *CMsgDOTARedeemEventPrizeResponse) GetRemainingPremiumPoints() uint32 {
	if m != nil && m.RemainingPremiumPoints != nil {
		return *m.RemainingPremiumPoints
	}
	return 0
}

func (m *CMsgDOTARedeemEventPrizeResponse) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

type CMsgDOTAGetEventPoints struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	AccountId        *uint32 `protobuf:"varint,2,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGetEventPoints) Reset()         { *m = CMsgDOTAGetEventPoints{} }
func (m *CMsgDOTAGetEventPoints) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGetEventPoints) ProtoMessage()    {}

func (m *CMsgDOTAGetEventPoints) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgDOTAGetEventPoints) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgDOTAGetEventPointsResponse struct {
	TotalPoints        *uint32                                  `protobuf:"varint,1,opt,name=total_points" json:"total_points,omitempty"`
	TotalPremiumPoints *uint32                                  `protobuf:"varint,2,opt,name=total_premium_points" json:"total_premium_points,omitempty"`
	EventId            *uint32                                  `protobuf:"varint,3,opt,name=event_id" json:"event_id,omitempty"`
	Points             *uint32                                  `protobuf:"varint,4,opt,name=points" json:"points,omitempty"`
	PremiumPoints      *uint32                                  `protobuf:"varint,5,opt,name=premium_points" json:"premium_points,omitempty"`
	CompletedActions   []*CMsgDOTAGetEventPointsResponse_Action `protobuf:"bytes,6,rep,name=completed_actions" json:"completed_actions,omitempty"`
	AccountId          *uint32                                  `protobuf:"varint,7,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized   []byte                                   `json:"-"`
}

func (m *CMsgDOTAGetEventPointsResponse) Reset()         { *m = CMsgDOTAGetEventPointsResponse{} }
func (m *CMsgDOTAGetEventPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGetEventPointsResponse) ProtoMessage()    {}

func (m *CMsgDOTAGetEventPointsResponse) GetTotalPoints() uint32 {
	if m != nil && m.TotalPoints != nil {
		return *m.TotalPoints
	}
	return 0
}

func (m *CMsgDOTAGetEventPointsResponse) GetTotalPremiumPoints() uint32 {
	if m != nil && m.TotalPremiumPoints != nil {
		return *m.TotalPremiumPoints
	}
	return 0
}

func (m *CMsgDOTAGetEventPointsResponse) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgDOTAGetEventPointsResponse) GetPoints() uint32 {
	if m != nil && m.Points != nil {
		return *m.Points
	}
	return 0
}

func (m *CMsgDOTAGetEventPointsResponse) GetPremiumPoints() uint32 {
	if m != nil && m.PremiumPoints != nil {
		return *m.PremiumPoints
	}
	return 0
}

func (m *CMsgDOTAGetEventPointsResponse) GetCompletedActions() []*CMsgDOTAGetEventPointsResponse_Action {
	if m != nil {
		return m.CompletedActions
	}
	return nil
}

func (m *CMsgDOTAGetEventPointsResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgDOTAGetEventPointsResponse_Action struct {
	ActionId         *uint32 `protobuf:"varint,1,opt,name=action_id" json:"action_id,omitempty"`
	TimesCompleted   *uint32 `protobuf:"varint,2,opt,name=times_completed,def=1" json:"times_completed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGetEventPointsResponse_Action) Reset()         { *m = CMsgDOTAGetEventPointsResponse_Action{} }
func (m *CMsgDOTAGetEventPointsResponse_Action) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGetEventPointsResponse_Action) ProtoMessage()    {}

const Default_CMsgDOTAGetEventPointsResponse_Action_TimesCompleted uint32 = 1

func (m *CMsgDOTAGetEventPointsResponse_Action) GetActionId() uint32 {
	if m != nil && m.ActionId != nil {
		return *m.ActionId
	}
	return 0
}

func (m *CMsgDOTAGetEventPointsResponse_Action) GetTimesCompleted() uint32 {
	if m != nil && m.TimesCompleted != nil {
		return *m.TimesCompleted
	}
	return Default_CMsgDOTAGetEventPointsResponse_Action_TimesCompleted
}

type CMsgDOTAExchangeEventPoints struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAExchangeEventPoints) Reset()         { *m = CMsgDOTAExchangeEventPoints{} }
func (m *CMsgDOTAExchangeEventPoints) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAExchangeEventPoints) ProtoMessage()    {}

func (m *CMsgDOTAExchangeEventPoints) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

type CMsgDOTAExchangeEventPointsResponse struct {
	Success            *bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	TotalPoints        *uint32 `protobuf:"varint,2,opt,name=total_points" json:"total_points,omitempty"`
	TotalPremiumPoints *uint32 `protobuf:"varint,3,opt,name=total_premium_points" json:"total_premium_points,omitempty"`
	EventId            *uint32 `protobuf:"varint,4,opt,name=event_id" json:"event_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgDOTAExchangeEventPointsResponse) Reset()         { *m = CMsgDOTAExchangeEventPointsResponse{} }
func (m *CMsgDOTAExchangeEventPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAExchangeEventPointsResponse) ProtoMessage()    {}

func (m *CMsgDOTAExchangeEventPointsResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CMsgDOTAExchangeEventPointsResponse) GetTotalPoints() uint32 {
	if m != nil && m.TotalPoints != nil {
		return *m.TotalPoints
	}
	return 0
}

func (m *CMsgDOTAExchangeEventPointsResponse) GetTotalPremiumPoints() uint32 {
	if m != nil && m.TotalPremiumPoints != nil {
		return *m.TotalPremiumPoints
	}
	return 0
}

func (m *CMsgDOTAExchangeEventPointsResponse) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

type CMsgDOTALiveLeagueGameUpdate struct {
	LiveLeagueGames  *uint32 `protobuf:"varint,1,opt,name=live_league_games" json:"live_league_games,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALiveLeagueGameUpdate) Reset()         { *m = CMsgDOTALiveLeagueGameUpdate{} }
func (m *CMsgDOTALiveLeagueGameUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALiveLeagueGameUpdate) ProtoMessage()    {}

func (m *CMsgDOTALiveLeagueGameUpdate) GetLiveLeagueGames() uint32 {
	if m != nil && m.LiveLeagueGames != nil {
		return *m.LiveLeagueGames
	}
	return 0
}

type CMsgDOTACompendiumSelection struct {
	SelectionIndex   *uint32 `protobuf:"varint,1,opt,name=selection_index" json:"selection_index,omitempty"`
	Selection        *uint32 `protobuf:"varint,2,opt,name=selection" json:"selection,omitempty"`
	Leagueid         *uint32 `protobuf:"varint,3,opt,name=leagueid" json:"leagueid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTACompendiumSelection) Reset()         { *m = CMsgDOTACompendiumSelection{} }
func (m *CMsgDOTACompendiumSelection) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACompendiumSelection) ProtoMessage()    {}

func (m *CMsgDOTACompendiumSelection) GetSelectionIndex() uint32 {
	if m != nil && m.SelectionIndex != nil {
		return *m.SelectionIndex
	}
	return 0
}

func (m *CMsgDOTACompendiumSelection) GetSelection() uint32 {
	if m != nil && m.Selection != nil {
		return *m.Selection
	}
	return 0
}

func (m *CMsgDOTACompendiumSelection) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

type CMsgDOTACompendiumSelectionResponse struct {
	Eresult          *uint32                        `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	ExtraSelections  []*CMsgDOTACompendiumSelection `protobuf:"bytes,2,rep,name=extra_selections" json:"extra_selections,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgDOTACompendiumSelectionResponse) Reset()         { *m = CMsgDOTACompendiumSelectionResponse{} }
func (m *CMsgDOTACompendiumSelectionResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACompendiumSelectionResponse) ProtoMessage()    {}

const Default_CMsgDOTACompendiumSelectionResponse_Eresult uint32 = 2

func (m *CMsgDOTACompendiumSelectionResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgDOTACompendiumSelectionResponse_Eresult
}

func (m *CMsgDOTACompendiumSelectionResponse) GetExtraSelections() []*CMsgDOTACompendiumSelection {
	if m != nil {
		return m.ExtraSelections
	}
	return nil
}

type CMsgDOTACompendiumData struct {
	Selections       []*CMsgDOTACompendiumSelection `protobuf:"bytes,1,rep,name=selections" json:"selections,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgDOTACompendiumData) Reset()         { *m = CMsgDOTACompendiumData{} }
func (m *CMsgDOTACompendiumData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACompendiumData) ProtoMessage()    {}

func (m *CMsgDOTACompendiumData) GetSelections() []*CMsgDOTACompendiumSelection {
	if m != nil {
		return m.Selections
	}
	return nil
}

type CMsgDOTACompendiumDataRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Leagueid         *uint32 `protobuf:"varint,2,opt,name=leagueid" json:"leagueid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTACompendiumDataRequest) Reset()         { *m = CMsgDOTACompendiumDataRequest{} }
func (m *CMsgDOTACompendiumDataRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACompendiumDataRequest) ProtoMessage()    {}

func (m *CMsgDOTACompendiumDataRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTACompendiumDataRequest) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

type CMsgDOTACompendiumDataResponse struct {
	AccountId        *uint32                 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Leagueid         *uint32                 `protobuf:"varint,2,opt,name=leagueid" json:"leagueid,omitempty"`
	Result           *uint32                 `protobuf:"varint,3,opt,name=result,def=2" json:"result,omitempty"`
	CompendiumData   *CMsgDOTACompendiumData `protobuf:"bytes,4,opt,name=compendium_data" json:"compendium_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CMsgDOTACompendiumDataResponse) Reset()         { *m = CMsgDOTACompendiumDataResponse{} }
func (m *CMsgDOTACompendiumDataResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACompendiumDataResponse) ProtoMessage()    {}

const Default_CMsgDOTACompendiumDataResponse_Result uint32 = 2

func (m *CMsgDOTACompendiumDataResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTACompendiumDataResponse) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgDOTACompendiumDataResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTACompendiumDataResponse_Result
}

func (m *CMsgDOTACompendiumDataResponse) GetCompendiumData() *CMsgDOTACompendiumData {
	if m != nil {
		return m.CompendiumData
	}
	return nil
}

type CMsgDOTAGetPlayerMatchHistory struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StartAtMatchId   *uint32 `protobuf:"varint,2,opt,name=start_at_match_id" json:"start_at_match_id,omitempty"`
	MatchesRequested *uint32 `protobuf:"varint,3,opt,name=matches_requested" json:"matches_requested,omitempty"`
	HeroId           *uint32 `protobuf:"varint,4,opt,name=hero_id" json:"hero_id,omitempty"`
	RequestId        *uint32 `protobuf:"varint,5,opt,name=request_id" json:"request_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGetPlayerMatchHistory) Reset()         { *m = CMsgDOTAGetPlayerMatchHistory{} }
func (m *CMsgDOTAGetPlayerMatchHistory) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGetPlayerMatchHistory) ProtoMessage()    {}

func (m *CMsgDOTAGetPlayerMatchHistory) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistory) GetStartAtMatchId() uint32 {
	if m != nil && m.StartAtMatchId != nil {
		return *m.StartAtMatchId
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistory) GetMatchesRequested() uint32 {
	if m != nil && m.MatchesRequested != nil {
		return *m.MatchesRequested
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistory) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistory) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

type CMsgDOTAGetPlayerMatchHistoryResponse struct {
	Matches          []*CMsgDOTAGetPlayerMatchHistoryResponse_Match `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	RequestId        *uint32                                        `protobuf:"varint,2,opt,name=request_id" json:"request_id,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse) Reset()         { *m = CMsgDOTAGetPlayerMatchHistoryResponse{} }
func (m *CMsgDOTAGetPlayerMatchHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGetPlayerMatchHistoryResponse) ProtoMessage()    {}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse) GetMatches() []*CMsgDOTAGetPlayerMatchHistoryResponse_Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

type CMsgDOTAGetPlayerMatchHistoryResponse_Match struct {
	MatchId          *uint64 `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	StartTime        *uint32 `protobuf:"varint,2,opt,name=start_time" json:"start_time,omitempty"`
	HeroId           *uint32 `protobuf:"varint,3,opt,name=hero_id" json:"hero_id,omitempty"`
	Winner           *bool   `protobuf:"varint,4,opt,name=winner" json:"winner,omitempty"`
	GameMode         *uint32 `protobuf:"varint,5,opt,name=game_mode" json:"game_mode,omitempty"`
	RankChange       *int32  `protobuf:"varint,6,opt,name=rank_change" json:"rank_change,omitempty"`
	PreviousRank     *uint32 `protobuf:"varint,7,opt,name=previous_rank" json:"previous_rank,omitempty"`
	LobbyType        *uint32 `protobuf:"varint,8,opt,name=lobby_type" json:"lobby_type,omitempty"`
	SoloRank         *bool   `protobuf:"varint,9,opt,name=solo_rank" json:"solo_rank,omitempty"`
	Abandon          *bool   `protobuf:"varint,10,opt,name=abandon" json:"abandon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) Reset() {
	*m = CMsgDOTAGetPlayerMatchHistoryResponse_Match{}
}
func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAGetPlayerMatchHistoryResponse_Match) ProtoMessage() {}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetWinner() bool {
	if m != nil && m.Winner != nil {
		return *m.Winner
	}
	return false
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetRankChange() int32 {
	if m != nil && m.RankChange != nil {
		return *m.RankChange
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetPreviousRank() uint32 {
	if m != nil && m.PreviousRank != nil {
		return *m.PreviousRank
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetSoloRank() bool {
	if m != nil && m.SoloRank != nil {
		return *m.SoloRank
	}
	return false
}

func (m *CMsgDOTAGetPlayerMatchHistoryResponse_Match) GetAbandon() bool {
	if m != nil && m.Abandon != nil {
		return *m.Abandon
	}
	return false
}

type CMsgDOTAStartDailyHeroChallenge struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAStartDailyHeroChallenge) Reset()         { *m = CMsgDOTAStartDailyHeroChallenge{} }
func (m *CMsgDOTAStartDailyHeroChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAStartDailyHeroChallenge) ProtoMessage()    {}

type CMsgGCNewBloomModeState struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCNewBloomModeState) Reset()         { *m = CMsgGCNewBloomModeState{} }
func (m *CMsgGCNewBloomModeState) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNewBloomModeState) ProtoMessage()    {}

type CMsgGCNewBloomModeStateResponse struct {
	Active           *bool   `protobuf:"varint,1,opt,name=active" json:"active,omitempty"`
	SwitchTime       *uint32 `protobuf:"varint,2,opt,name=switch_time" json:"switch_time,omitempty"`
	Round            *uint32 `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCNewBloomModeStateResponse) Reset()         { *m = CMsgGCNewBloomModeStateResponse{} }
func (m *CMsgGCNewBloomModeStateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNewBloomModeStateResponse) ProtoMessage()    {}

func (m *CMsgGCNewBloomModeStateResponse) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

func (m *CMsgGCNewBloomModeStateResponse) GetSwitchTime() uint32 {
	if m != nil && m.SwitchTime != nil {
		return *m.SwitchTime
	}
	return 0
}

func (m *CMsgGCNewBloomModeStateResponse) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

type CMsgGCNotificationsRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCNotificationsRequest) Reset()         { *m = CMsgGCNotificationsRequest{} }
func (m *CMsgGCNotificationsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNotificationsRequest) ProtoMessage()    {}

type CMsgGCNotificationsResponse struct {
	Result           *CMsgGCNotificationsResponse_EResult        `protobuf:"varint,1,opt,name=result,enum=CMsgGCNotificationsResponse_EResult,def=0" json:"result,omitempty"`
	Notifications    []*CMsgGCNotificationsResponse_Notification `protobuf:"bytes,2,rep,name=notifications" json:"notifications,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgGCNotificationsResponse) Reset()         { *m = CMsgGCNotificationsResponse{} }
func (m *CMsgGCNotificationsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNotificationsResponse) ProtoMessage()    {}

const Default_CMsgGCNotificationsResponse_Result CMsgGCNotificationsResponse_EResult = CMsgGCNotificationsResponse_SUCCESS

func (m *CMsgGCNotificationsResponse) GetResult() CMsgGCNotificationsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCNotificationsResponse_Result
}

func (m *CMsgGCNotificationsResponse) GetNotifications() []*CMsgGCNotificationsResponse_Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type CMsgGCNotificationsResponse_Notification struct {
	Id               *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	ReferenceA       *uint32 `protobuf:"varint,4,opt,name=reference_a" json:"reference_a,omitempty"`
	ReferenceB       *uint32 `protobuf:"varint,5,opt,name=reference_b" json:"reference_b,omitempty"`
	ReferenceC       *uint32 `protobuf:"varint,6,opt,name=reference_c" json:"reference_c,omitempty"`
	Message          *string `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	Unread           *bool   `protobuf:"varint,8,opt,name=unread" json:"unread,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCNotificationsResponse_Notification) Reset() {
	*m = CMsgGCNotificationsResponse_Notification{}
}
func (m *CMsgGCNotificationsResponse_Notification) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNotificationsResponse_Notification) ProtoMessage()    {}

func (m *CMsgGCNotificationsResponse_Notification) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgGCNotificationsResponse_Notification) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgGCNotificationsResponse_Notification) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgGCNotificationsResponse_Notification) GetReferenceA() uint32 {
	if m != nil && m.ReferenceA != nil {
		return *m.ReferenceA
	}
	return 0
}

func (m *CMsgGCNotificationsResponse_Notification) GetReferenceB() uint32 {
	if m != nil && m.ReferenceB != nil {
		return *m.ReferenceB
	}
	return 0
}

func (m *CMsgGCNotificationsResponse_Notification) GetReferenceC() uint32 {
	if m != nil && m.ReferenceC != nil {
		return *m.ReferenceC
	}
	return 0
}

func (m *CMsgGCNotificationsResponse_Notification) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgGCNotificationsResponse_Notification) GetUnread() bool {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return false
}

type CMsgGCNotificationsMarkReadRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCNotificationsMarkReadRequest) Reset()         { *m = CMsgGCNotificationsMarkReadRequest{} }
func (m *CMsgGCNotificationsMarkReadRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNotificationsMarkReadRequest) ProtoMessage()    {}

type CMsgGCLeagueAdminState struct {
	Leagues          []uint32                                    `protobuf:"varint,1,rep,name=leagues" json:"leagues,omitempty"`
	Keys             []*CMsgGCLeagueAdminState_PrivateLeagueKeys `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgGCLeagueAdminState) Reset()         { *m = CMsgGCLeagueAdminState{} }
func (m *CMsgGCLeagueAdminState) String() string { return proto.CompactTextString(m) }
func (*CMsgGCLeagueAdminState) ProtoMessage()    {}

func (m *CMsgGCLeagueAdminState) GetLeagues() []uint32 {
	if m != nil {
		return m.Leagues
	}
	return nil
}

func (m *CMsgGCLeagueAdminState) GetKeys() []*CMsgGCLeagueAdminState_PrivateLeagueKeys {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CMsgGCLeagueAdminState_PrivateLeagueKeys struct {
	Leagueid         *uint32 `protobuf:"varint,1,opt,name=leagueid" json:"leagueid,omitempty"`
	Privatekey       *uint32 `protobuf:"varint,2,opt,name=privatekey" json:"privatekey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCLeagueAdminState_PrivateLeagueKeys) Reset() {
	*m = CMsgGCLeagueAdminState_PrivateLeagueKeys{}
}
func (m *CMsgGCLeagueAdminState_PrivateLeagueKeys) String() string { return proto.CompactTextString(m) }
func (*CMsgGCLeagueAdminState_PrivateLeagueKeys) ProtoMessage()    {}

func (m *CMsgGCLeagueAdminState_PrivateLeagueKeys) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgGCLeagueAdminState_PrivateLeagueKeys) GetPrivatekey() uint32 {
	if m != nil && m.Privatekey != nil {
		return *m.Privatekey
	}
	return 0
}

type CMsgGCPlayerInfoRequest struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCPlayerInfoRequest) Reset()         { *m = CMsgGCPlayerInfoRequest{} }
func (m *CMsgGCPlayerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfoRequest) ProtoMessage()    {}

func (m *CMsgGCPlayerInfoRequest) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgGCPlayerInfo struct {
	PlayerInfos      []*CMsgGCPlayerInfo_PlayerInfo `protobuf:"bytes,1,rep,name=player_infos" json:"player_infos,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgGCPlayerInfo) Reset()         { *m = CMsgGCPlayerInfo{} }
func (m *CMsgGCPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfo) ProtoMessage()    {}

func (m *CMsgGCPlayerInfo) GetPlayerInfos() []*CMsgGCPlayerInfo_PlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

type CMsgGCPlayerInfo_PlayerInfo struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CountryCode      *string `protobuf:"bytes,3,opt,name=country_code" json:"country_code,omitempty"`
	FantasyRole      *uint32 `protobuf:"varint,4,opt,name=fantasy_role" json:"fantasy_role,omitempty"`
	TeamId           *uint32 `protobuf:"varint,5,opt,name=team_id" json:"team_id,omitempty"`
	TeamName         *string `protobuf:"bytes,6,opt,name=team_name" json:"team_name,omitempty"`
	TeamTag          *string `protobuf:"bytes,7,opt,name=team_tag" json:"team_tag,omitempty"`
	Sponsor          *string `protobuf:"bytes,8,opt,name=sponsor" json:"sponsor,omitempty"`
	IsLocked         *bool   `protobuf:"varint,9,opt,name=is_locked" json:"is_locked,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCPlayerInfo_PlayerInfo) Reset()         { *m = CMsgGCPlayerInfo_PlayerInfo{} }
func (m *CMsgGCPlayerInfo_PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfo_PlayerInfo) ProtoMessage()    {}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetFantasyRole() uint32 {
	if m != nil && m.FantasyRole != nil {
		return *m.FantasyRole
	}
	return 0
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetSponsor() string {
	if m != nil && m.Sponsor != nil {
		return *m.Sponsor
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetIsLocked() bool {
	if m != nil && m.IsLocked != nil {
		return *m.IsLocked
	}
	return false
}

type CMsgGCPlayerInfoSubmit struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CountryCode      *string `protobuf:"bytes,2,opt,name=country_code" json:"country_code,omitempty"`
	FantasyRole      *uint32 `protobuf:"varint,3,opt,name=fantasy_role" json:"fantasy_role,omitempty"`
	TeamId           *uint32 `protobuf:"varint,4,opt,name=team_id" json:"team_id,omitempty"`
	Sponsor          *string `protobuf:"bytes,5,opt,name=sponsor" json:"sponsor,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCPlayerInfoSubmit) Reset()         { *m = CMsgGCPlayerInfoSubmit{} }
func (m *CMsgGCPlayerInfoSubmit) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfoSubmit) ProtoMessage()    {}

func (m *CMsgGCPlayerInfoSubmit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCPlayerInfoSubmit) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgGCPlayerInfoSubmit) GetFantasyRole() uint32 {
	if m != nil && m.FantasyRole != nil {
		return *m.FantasyRole
	}
	return 0
}

func (m *CMsgGCPlayerInfoSubmit) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgGCPlayerInfoSubmit) GetSponsor() string {
	if m != nil && m.Sponsor != nil {
		return *m.Sponsor
	}
	return ""
}

type CMsgGCPlayerInfoSubmitResponse struct {
	Result           *CMsgGCPlayerInfoSubmitResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgGCPlayerInfoSubmitResponse_EResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgGCPlayerInfoSubmitResponse) Reset()         { *m = CMsgGCPlayerInfoSubmitResponse{} }
func (m *CMsgGCPlayerInfoSubmitResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfoSubmitResponse) ProtoMessage()    {}

const Default_CMsgGCPlayerInfoSubmitResponse_Result CMsgGCPlayerInfoSubmitResponse_EResult = CMsgGCPlayerInfoSubmitResponse_SUCCESS

func (m *CMsgGCPlayerInfoSubmitResponse) GetResult() CMsgGCPlayerInfoSubmitResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCPlayerInfoSubmitResponse_Result
}

type CMsgSerializedSOCache struct {
	FileVersion          *uint32                        `protobuf:"varint,1,opt,name=file_version" json:"file_version,omitempty"`
	Caches               []*CMsgSerializedSOCache_Cache `protobuf:"bytes,2,rep,name=caches" json:"caches,omitempty"`
	GcSocacheFileVersion *uint32                        `protobuf:"varint,3,opt,name=gc_socache_file_version" json:"gc_socache_file_version,omitempty"`
	XXX_unrecognized     []byte                         `json:"-"`
}

func (m *CMsgSerializedSOCache) Reset()         { *m = CMsgSerializedSOCache{} }
func (m *CMsgSerializedSOCache) String() string { return proto.CompactTextString(m) }
func (*CMsgSerializedSOCache) ProtoMessage()    {}

func (m *CMsgSerializedSOCache) GetFileVersion() uint32 {
	if m != nil && m.FileVersion != nil {
		return *m.FileVersion
	}
	return 0
}

func (m *CMsgSerializedSOCache) GetCaches() []*CMsgSerializedSOCache_Cache {
	if m != nil {
		return m.Caches
	}
	return nil
}

func (m *CMsgSerializedSOCache) GetGcSocacheFileVersion() uint32 {
	if m != nil && m.GcSocacheFileVersion != nil {
		return *m.GcSocacheFileVersion
	}
	return 0
}

type CMsgSerializedSOCache_TypeCache struct {
	Type             *uint32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Objects          [][]byte `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	ServiceId        *uint32  `protobuf:"varint,3,opt,name=service_id" json:"service_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSerializedSOCache_TypeCache) Reset()         { *m = CMsgSerializedSOCache_TypeCache{} }
func (m *CMsgSerializedSOCache_TypeCache) String() string { return proto.CompactTextString(m) }
func (*CMsgSerializedSOCache_TypeCache) ProtoMessage()    {}

func (m *CMsgSerializedSOCache_TypeCache) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgSerializedSOCache_TypeCache) GetObjects() [][]byte {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *CMsgSerializedSOCache_TypeCache) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

type CMsgSerializedSOCache_Cache struct {
	Type             *uint32                                `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id               *uint64                                `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Versions         []*CMsgSerializedSOCache_Cache_Version `protobuf:"bytes,3,rep,name=versions" json:"versions,omitempty"`
	TypeCaches       []*CMsgSerializedSOCache_TypeCache     `protobuf:"bytes,4,rep,name=type_caches" json:"type_caches,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgSerializedSOCache_Cache) Reset()         { *m = CMsgSerializedSOCache_Cache{} }
func (m *CMsgSerializedSOCache_Cache) String() string { return proto.CompactTextString(m) }
func (*CMsgSerializedSOCache_Cache) ProtoMessage()    {}

func (m *CMsgSerializedSOCache_Cache) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgSerializedSOCache_Cache) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgSerializedSOCache_Cache) GetVersions() []*CMsgSerializedSOCache_Cache_Version {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *CMsgSerializedSOCache_Cache) GetTypeCaches() []*CMsgSerializedSOCache_TypeCache {
	if m != nil {
		return m.TypeCaches
	}
	return nil
}

type CMsgSerializedSOCache_Cache_Version struct {
	Service          *uint32 `protobuf:"varint,1,opt,name=service" json:"service,omitempty"`
	Version          *uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSerializedSOCache_Cache_Version) Reset()         { *m = CMsgSerializedSOCache_Cache_Version{} }
func (m *CMsgSerializedSOCache_Cache_Version) String() string { return proto.CompactTextString(m) }
func (*CMsgSerializedSOCache_Cache_Version) ProtoMessage()    {}

func (m *CMsgSerializedSOCache_Cache_Version) GetService() uint32 {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return 0
}

func (m *CMsgSerializedSOCache_Cache_Version) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CMsgRequestWeekendTourneySchedule struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgRequestWeekendTourneySchedule) Reset()         { *m = CMsgRequestWeekendTourneySchedule{} }
func (m *CMsgRequestWeekendTourneySchedule) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestWeekendTourneySchedule) ProtoMessage()    {}

type CMsgWeekendTourneySchedule struct {
	Divisions        []*CMsgWeekendTourneySchedule_Division `protobuf:"bytes,1,rep,name=divisions" json:"divisions,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgWeekendTourneySchedule) Reset()         { *m = CMsgWeekendTourneySchedule{} }
func (m *CMsgWeekendTourneySchedule) String() string { return proto.CompactTextString(m) }
func (*CMsgWeekendTourneySchedule) ProtoMessage()    {}

func (m *CMsgWeekendTourneySchedule) GetDivisions() []*CMsgWeekendTourneySchedule_Division {
	if m != nil {
		return m.Divisions
	}
	return nil
}

type CMsgWeekendTourneySchedule_Division struct {
	DivisionCode     *uint32 `protobuf:"varint,1,opt,name=division_code" json:"division_code,omitempty"`
	TimeWindowOpen   *uint32 `protobuf:"varint,2,opt,name=time_window_open" json:"time_window_open,omitempty"`
	TimeWindowClose  *uint32 `protobuf:"varint,3,opt,name=time_window_close" json:"time_window_close,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgWeekendTourneySchedule_Division) Reset()         { *m = CMsgWeekendTourneySchedule_Division{} }
func (m *CMsgWeekendTourneySchedule_Division) String() string { return proto.CompactTextString(m) }
func (*CMsgWeekendTourneySchedule_Division) ProtoMessage()    {}

func (m *CMsgWeekendTourneySchedule_Division) GetDivisionCode() uint32 {
	if m != nil && m.DivisionCode != nil {
		return *m.DivisionCode
	}
	return 0
}

func (m *CMsgWeekendTourneySchedule_Division) GetTimeWindowOpen() uint32 {
	if m != nil && m.TimeWindowOpen != nil {
		return *m.TimeWindowOpen
	}
	return 0
}

func (m *CMsgWeekendTourneySchedule_Division) GetTimeWindowClose() uint32 {
	if m != nil && m.TimeWindowClose != nil {
		return *m.TimeWindowClose
	}
	return 0
}

type CMsgClientProvideSurveyResult struct {
	Responses        []*CMsgClientProvideSurveyResult_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	SurveyKey        *uint64                                   `protobuf:"varint,2,opt,name=survey_key" json:"survey_key,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgClientProvideSurveyResult) Reset()         { *m = CMsgClientProvideSurveyResult{} }
func (m *CMsgClientProvideSurveyResult) String() string { return proto.CompactTextString(m) }
func (*CMsgClientProvideSurveyResult) ProtoMessage()    {}

func (m *CMsgClientProvideSurveyResult) GetResponses() []*CMsgClientProvideSurveyResult_Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *CMsgClientProvideSurveyResult) GetSurveyKey() uint64 {
	if m != nil && m.SurveyKey != nil {
		return *m.SurveyKey
	}
	return 0
}

type CMsgClientProvideSurveyResult_Response struct {
	QuestionId       *uint32 `protobuf:"varint,1,opt,name=question_id" json:"question_id,omitempty"`
	SurveyValue      *uint32 `protobuf:"varint,2,opt,name=survey_value" json:"survey_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientProvideSurveyResult_Response) Reset() {
	*m = CMsgClientProvideSurveyResult_Response{}
}
func (m *CMsgClientProvideSurveyResult_Response) String() string { return proto.CompactTextString(m) }
func (*CMsgClientProvideSurveyResult_Response) ProtoMessage()    {}

func (m *CMsgClientProvideSurveyResult_Response) GetQuestionId() uint32 {
	if m != nil && m.QuestionId != nil {
		return *m.QuestionId
	}
	return 0
}

func (m *CMsgClientProvideSurveyResult_Response) GetSurveyValue() uint32 {
	if m != nil && m.SurveyValue != nil {
		return *m.SurveyValue
	}
	return 0
}

type CMsgDOTAEmoticonAccessSDO struct {
	AccountId         *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	UnlockedEmoticons []byte  `protobuf:"bytes,2,opt,name=unlocked_emoticons" json:"unlocked_emoticons,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgDOTAEmoticonAccessSDO) Reset()         { *m = CMsgDOTAEmoticonAccessSDO{} }
func (m *CMsgDOTAEmoticonAccessSDO) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEmoticonAccessSDO) ProtoMessage()    {}

func (m *CMsgDOTAEmoticonAccessSDO) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAEmoticonAccessSDO) GetUnlockedEmoticons() []byte {
	if m != nil {
		return m.UnlockedEmoticons
	}
	return nil
}

type CMsgClientToGCTrackDialogResult struct {
	DialogId         *uint32 `protobuf:"varint,1,opt,name=dialog_id" json:"dialog_id,omitempty"`
	Value            *uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCTrackDialogResult) Reset()         { *m = CMsgClientToGCTrackDialogResult{} }
func (m *CMsgClientToGCTrackDialogResult) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCTrackDialogResult) ProtoMessage()    {}

func (m *CMsgClientToGCTrackDialogResult) GetDialogId() uint32 {
	if m != nil && m.DialogId != nil {
		return *m.DialogId
	}
	return 0
}

func (m *CMsgClientToGCTrackDialogResult) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CMsgGCToClientTournamentItemDrop struct {
	ItemDef          *uint32 `protobuf:"varint,1,opt,name=item_def" json:"item_def,omitempty"`
	EventType        *uint32 `protobuf:"varint,2,opt,name=event_type" json:"event_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToClientTournamentItemDrop) Reset()         { *m = CMsgGCToClientTournamentItemDrop{} }
func (m *CMsgGCToClientTournamentItemDrop) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientTournamentItemDrop) ProtoMessage()    {}

func (m *CMsgGCToClientTournamentItemDrop) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgGCToClientTournamentItemDrop) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func init() {
	proto.RegisterEnum("ETournamentGameState", ETournamentGameState_name, ETournamentGameState_value)
	proto.RegisterEnum("ETournamentTeamState", ETournamentTeamState_name, ETournamentTeamState_value)
	proto.RegisterEnum("ETournamentTemplate", ETournamentTemplate_name, ETournamentTemplate_value)
	proto.RegisterEnum("ETournamentType", ETournamentType_name, ETournamentType_value)
	proto.RegisterEnum("ETournamentState", ETournamentState_name, ETournamentState_value)
	proto.RegisterEnum("DOTAChatChannelTypeT", DOTAChatChannelTypeT_name, DOTAChatChannelTypeT_value)
	proto.RegisterEnum("DOTA_WatchReplayType", DOTA_WatchReplayType_name, DOTA_WatchReplayType_value)
	proto.RegisterEnum("DOTA_2013PassportSelectionIndices", DOTA_2013PassportSelectionIndices_name, DOTA_2013PassportSelectionIndices_value)
	proto.RegisterEnum("EItemEditorReservationResult", EItemEditorReservationResult_name, EItemEditorReservationResult_value)
	proto.RegisterEnum("CMsgDOTAMatch_ReplayState", CMsgDOTAMatch_ReplayState_name, CMsgDOTAMatch_ReplayState_value)
	proto.RegisterEnum("CMsgDOTARequestMatches_SkillLevel", CMsgDOTARequestMatches_SkillLevel_name, CMsgDOTARequestMatches_SkillLevel_value)
	proto.RegisterEnum("CMsgDOTAPopup_PopupID", CMsgDOTAPopup_PopupID_name, CMsgDOTAPopup_PopupID_value)
	proto.RegisterEnum("CMsgDOTACreateTeamResponse_Result", CMsgDOTACreateTeamResponse_Result_name, CMsgDOTACreateTeamResponse_Result_value)
	proto.RegisterEnum("CMsgDOTAEditTeamLogoResponse_Result", CMsgDOTAEditTeamLogoResponse_Result_name, CMsgDOTAEditTeamLogoResponse_Result_value)
	proto.RegisterEnum("CMsgDOTAEditTeamDetailsResponse_Result", CMsgDOTAEditTeamDetailsResponse_Result_name, CMsgDOTAEditTeamDetailsResponse_Result_value)
	proto.RegisterEnum("CMsgDOTADisbandTeamResponse_Result", CMsgDOTADisbandTeamResponse_Result_name, CMsgDOTADisbandTeamResponse_Result_value)
	proto.RegisterEnum("CMsgDOTARequestTeamDataResponse_Result", CMsgDOTARequestTeamDataResponse_Result_name, CMsgDOTARequestTeamDataResponse_Result_value)
	proto.RegisterEnum("CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result", CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_name, CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result_value)
	proto.RegisterEnum("CMsgDOTATeamInvite_InviteeResponseToGC_Result", CMsgDOTATeamInvite_InviteeResponseToGC_Result_name, CMsgDOTATeamInvite_InviteeResponseToGC_Result_value)
	proto.RegisterEnum("CMsgDOTATeamInvite_GCResponseToInviter_Result", CMsgDOTATeamInvite_GCResponseToInviter_Result_name, CMsgDOTATeamInvite_GCResponseToInviter_Result_value)
	proto.RegisterEnum("CMsgDOTATeamInvite_GCResponseToInvitee_Result", CMsgDOTATeamInvite_GCResponseToInvitee_Result_name, CMsgDOTATeamInvite_GCResponseToInvitee_Result_value)
	proto.RegisterEnum("CMsgDOTAKickTeamMemberResponse_Result", CMsgDOTAKickTeamMemberResponse_Result_name, CMsgDOTAKickTeamMemberResponse_Result_value)
	proto.RegisterEnum("CMsgDOTATransferTeamAdminResponse_Result", CMsgDOTATransferTeamAdminResponse_Result_name, CMsgDOTATransferTeamAdminResponse_Result_value)
	proto.RegisterEnum("CMsgDOTALeaveTeamResponse_Result", CMsgDOTALeaveTeamResponse_Result_name, CMsgDOTALeaveTeamResponse_Result_value)
	proto.RegisterEnum("CMsgDOTAGuildCreateResponse_EError", CMsgDOTAGuildCreateResponse_EError_name, CMsgDOTAGuildCreateResponse_EError_value)
	proto.RegisterEnum("CMsgDOTAGuildSetAccountRoleResponse_EResult", CMsgDOTAGuildSetAccountRoleResponse_EResult_name, CMsgDOTAGuildSetAccountRoleResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAGuildInviteAccountResponse_EResult", CMsgDOTAGuildInviteAccountResponse_EResult_name, CMsgDOTAGuildInviteAccountResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAGuildCancelInviteResponse_EResult", CMsgDOTAGuildCancelInviteResponse_EResult_name, CMsgDOTAGuildCancelInviteResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAGuildUpdateDetailsResponse_EResult", CMsgDOTAGuildUpdateDetailsResponse_EResult_name, CMsgDOTAGuildUpdateDetailsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAPartySetOpenGuildResponse_EResult", CMsgDOTAPartySetOpenGuildResponse_EResult_name, CMsgDOTAPartySetOpenGuildResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAJoinOpenGuildPartyResponse_EResult", CMsgDOTAJoinOpenGuildPartyResponse_EResult_name, CMsgDOTAJoinOpenGuildPartyResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAGuildEditLogoResponse_EResult", CMsgDOTAGuildEditLogoResponse_EResult_name, CMsgDOTAGuildEditLogoResponse_EResult_value)
	proto.RegisterEnum("CMsgWatchGameResponse_WatchGameResult", CMsgWatchGameResponse_WatchGameResult_name, CMsgWatchGameResponse_WatchGameResult_value)
	proto.RegisterEnum("CMsgDOTACreateFantasyLeagueResponse_EResult", CMsgDOTACreateFantasyLeagueResponse_EResult_name, CMsgDOTACreateFantasyLeagueResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueEditInfoResponse_EResult", CMsgDOTAFantasyLeagueEditInfoResponse_EResult_name, CMsgDOTAFantasyLeagueEditInfoResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueFindResponse_EResult", CMsgDOTAFantasyLeagueFindResponse_EResult_name, CMsgDOTAFantasyLeagueFindResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueInfoResponse_EResult", CMsgDOTAFantasyLeagueInfoResponse_EResult_name, CMsgDOTAFantasyLeagueInfoResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueMatchupsResponse_EResult", CMsgDOTAFantasyLeagueMatchupsResponse_EResult_name, CMsgDOTAFantasyLeagueMatchupsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAEditFantasyTeamResponse_EResult", CMsgDOTAEditFantasyTeamResponse_EResult_name, CMsgDOTAEditFantasyTeamResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamScoreResponse_EResult", CMsgDOTAFantasyTeamScoreResponse_EResult_name, CMsgDOTAFantasyTeamScoreResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamStandingsResponse_EResult", CMsgDOTAFantasyTeamStandingsResponse_EResult_name, CMsgDOTAFantasyTeamStandingsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerScoreResponse_EResult", CMsgDOTAFantasyPlayerScoreResponse_EResult_name, CMsgDOTAFantasyPlayerScoreResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerStandingsResponse_EResult", CMsgDOTAFantasyPlayerStandingsResponse_EResult_name, CMsgDOTAFantasyPlayerStandingsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueCreateResponse_EResult", CMsgDOTAFantasyLeagueCreateResponse_EResult_name, CMsgDOTAFantasyLeagueCreateResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamCreateResponse_EResult", CMsgDOTAFantasyTeamCreateResponse_EResult_name, CMsgDOTAFantasyTeamCreateResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueEditInvitesResponse_EResult", CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_name, CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult", CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_name, CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamRosterSwapResponse_EResult", CMsgDOTAFantasyTeamRosterSwapResponse_EResult_name, CMsgDOTAFantasyTeamRosterSwapResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamRosterAddDropResponse_EResult", CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_name, CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamTradesResponse_EResult", CMsgDOTAFantasyTeamTradesResponse_EResult_name, CMsgDOTAFantasyTeamTradesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamTradeCancelResponse_EResult", CMsgDOTAFantasyTeamTradeCancelResponse_EResult_name, CMsgDOTAFantasyTeamTradeCancelResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamRosterResponse_EResult", CMsgDOTAFantasyTeamRosterResponse_EResult_name, CMsgDOTAFantasyTeamRosterResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult", CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_name, CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyMessagesResponse_EResult", CMsgDOTAFantasyMessagesResponse_EResult_name, CMsgDOTAFantasyMessagesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyRemoveOwnerResponse_EResult", CMsgDOTAFantasyRemoveOwnerResponse_EResult_name, CMsgDOTAFantasyRemoveOwnerResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyScheduledMatchesResponse_EResult", CMsgDOTAFantasyScheduledMatchesResponse_EResult_name, CMsgDOTAFantasyScheduledMatchesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeaveLeagueResponse_EResult", CMsgDOTAFantasyLeaveLeagueResponse_EResult_name, CMsgDOTAFantasyLeaveLeagueResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult", CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_name, CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFriendRecruitsResponse_EResult", CMsgDOTAFriendRecruitsResponse_EResult_name, CMsgDOTAFriendRecruitsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTARedeemEventPrizeResponse_ResultCode", CMsgDOTARedeemEventPrizeResponse_ResultCode_name, CMsgDOTARedeemEventPrizeResponse_ResultCode_value)
	proto.RegisterEnum("CMsgGCNotificationsResponse_EResult", CMsgGCNotificationsResponse_EResult_name, CMsgGCNotificationsResponse_EResult_value)
	proto.RegisterEnum("CMsgGCPlayerInfoSubmitResponse_EResult", CMsgGCPlayerInfoSubmitResponse_EResult_name, CMsgGCPlayerInfoSubmitResponse_EResult_value)
}
